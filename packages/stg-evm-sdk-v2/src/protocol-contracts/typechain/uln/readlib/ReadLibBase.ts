/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
    BaseContract,
    BigNumber,
    BigNumberish,
    BytesLike,
    CallOverrides,
    ContractTransaction,
    Overrides,
    PopulatedTransaction,
    Signer,
    utils,
} from 'ethers'
import type { FunctionFragment, Result, EventFragment } from '@ethersproject/abi'
import type { Listener, Provider } from '@ethersproject/providers'
import type { TypedEventFilter, TypedEvent, TypedListener, OnEvent, PromiseOrValue } from '../../common'

export type ReadLibConfigStruct = {
    executor: PromiseOrValue<string>
    requiredDVNCount: PromiseOrValue<BigNumberish>
    optionalDVNCount: PromiseOrValue<BigNumberish>
    optionalDVNThreshold: PromiseOrValue<BigNumberish>
    requiredDVNs: PromiseOrValue<string>[]
    optionalDVNs: PromiseOrValue<string>[]
}

export type ReadLibConfigStructOutput = [string, number, number, number, string[], string[]] & {
    executor: string
    requiredDVNCount: number
    optionalDVNCount: number
    optionalDVNThreshold: number
    requiredDVNs: string[]
    optionalDVNs: string[]
}

export type SetDefaultReadLibConfigParamStruct = {
    eid: PromiseOrValue<BigNumberish>
    config: ReadLibConfigStruct
}

export type SetDefaultReadLibConfigParamStructOutput = [number, ReadLibConfigStructOutput] & {
    eid: number
    config: ReadLibConfigStructOutput
}

export interface ReadLibBaseInterface extends utils.Interface {
    functions: {
        'getAppReadLibConfig(address,uint32)': FunctionFragment
        'getReadLibConfig(address,uint32)': FunctionFragment
        'owner()': FunctionFragment
        'renounceOwnership()': FunctionFragment
        'setDefaultReadLibConfigs((uint32,(address,uint8,uint8,uint8,address[],address[]))[])': FunctionFragment
        'transferOwnership(address)': FunctionFragment
    }

    getFunction(
        nameOrSignatureOrTopic:
            | 'getAppReadLibConfig'
            | 'getReadLibConfig'
            | 'owner'
            | 'renounceOwnership'
            | 'setDefaultReadLibConfigs'
            | 'transferOwnership'
    ): FunctionFragment

    encodeFunctionData(
        functionFragment: 'getAppReadLibConfig',
        values: [PromiseOrValue<string>, PromiseOrValue<BigNumberish>]
    ): string
    encodeFunctionData(
        functionFragment: 'getReadLibConfig',
        values: [PromiseOrValue<string>, PromiseOrValue<BigNumberish>]
    ): string
    encodeFunctionData(functionFragment: 'owner', values?: undefined): string
    encodeFunctionData(functionFragment: 'renounceOwnership', values?: undefined): string
    encodeFunctionData(
        functionFragment: 'setDefaultReadLibConfigs',
        values: [SetDefaultReadLibConfigParamStruct[]]
    ): string
    encodeFunctionData(functionFragment: 'transferOwnership', values: [PromiseOrValue<string>]): string

    decodeFunctionResult(functionFragment: 'getAppReadLibConfig', data: BytesLike): Result
    decodeFunctionResult(functionFragment: 'getReadLibConfig', data: BytesLike): Result
    decodeFunctionResult(functionFragment: 'owner', data: BytesLike): Result
    decodeFunctionResult(functionFragment: 'renounceOwnership', data: BytesLike): Result
    decodeFunctionResult(functionFragment: 'setDefaultReadLibConfigs', data: BytesLike): Result
    decodeFunctionResult(functionFragment: 'transferOwnership', data: BytesLike): Result

    events: {
        'DefaultReadLibConfigsSet(tuple[])': EventFragment
        'OwnershipTransferred(address,address)': EventFragment
        'ReadLibConfigSet(address,uint32,tuple)': EventFragment
    }

    getEvent(nameOrSignatureOrTopic: 'DefaultReadLibConfigsSet'): EventFragment
    getEvent(nameOrSignatureOrTopic: 'OwnershipTransferred'): EventFragment
    getEvent(nameOrSignatureOrTopic: 'ReadLibConfigSet'): EventFragment
}

export interface DefaultReadLibConfigsSetEventObject {
    params: SetDefaultReadLibConfigParamStructOutput[]
}
export type DefaultReadLibConfigsSetEvent = TypedEvent<
    [SetDefaultReadLibConfigParamStructOutput[]],
    DefaultReadLibConfigsSetEventObject
>

export type DefaultReadLibConfigsSetEventFilter = TypedEventFilter<DefaultReadLibConfigsSetEvent>

export interface OwnershipTransferredEventObject {
    previousOwner: string
    newOwner: string
}
export type OwnershipTransferredEvent = TypedEvent<[string, string], OwnershipTransferredEventObject>

export type OwnershipTransferredEventFilter = TypedEventFilter<OwnershipTransferredEvent>

export interface ReadLibConfigSetEventObject {
    oapp: string
    eid: number
    config: ReadLibConfigStructOutput
}
export type ReadLibConfigSetEvent = TypedEvent<[string, number, ReadLibConfigStructOutput], ReadLibConfigSetEventObject>

export type ReadLibConfigSetEventFilter = TypedEventFilter<ReadLibConfigSetEvent>

export interface ReadLibBase extends BaseContract {
    connect(signerOrProvider: Signer | Provider | string): this
    attach(addressOrName: string): this
    deployed(): Promise<this>

    interface: ReadLibBaseInterface

    queryFilter<TEvent extends TypedEvent>(
        event: TypedEventFilter<TEvent>,
        fromBlockOrBlockhash?: string | number | undefined,
        toBlock?: string | number | undefined
    ): Promise<Array<TEvent>>

    listeners<TEvent extends TypedEvent>(eventFilter?: TypedEventFilter<TEvent>): Array<TypedListener<TEvent>>
    listeners(eventName?: string): Array<Listener>
    removeAllListeners<TEvent extends TypedEvent>(eventFilter: TypedEventFilter<TEvent>): this
    removeAllListeners(eventName?: string): this
    off: OnEvent<this>
    on: OnEvent<this>
    once: OnEvent<this>
    removeListener: OnEvent<this>

    functions: {
        getAppReadLibConfig(
            _oapp: PromiseOrValue<string>,
            _remoteEid: PromiseOrValue<BigNumberish>,
            overrides?: CallOverrides
        ): Promise<[ReadLibConfigStructOutput]>

        getReadLibConfig(
            _oapp: PromiseOrValue<string>,
            _remoteEid: PromiseOrValue<BigNumberish>,
            overrides?: CallOverrides
        ): Promise<[ReadLibConfigStructOutput] & { rtnConfig: ReadLibConfigStructOutput }>

        owner(overrides?: CallOverrides): Promise<[string]>

        renounceOwnership(overrides?: Overrides & { from?: PromiseOrValue<string> }): Promise<ContractTransaction>

        setDefaultReadLibConfigs(
            _params: SetDefaultReadLibConfigParamStruct[],
            overrides?: Overrides & { from?: PromiseOrValue<string> }
        ): Promise<ContractTransaction>

        transferOwnership(
            newOwner: PromiseOrValue<string>,
            overrides?: Overrides & { from?: PromiseOrValue<string> }
        ): Promise<ContractTransaction>
    }

    getAppReadLibConfig(
        _oapp: PromiseOrValue<string>,
        _remoteEid: PromiseOrValue<BigNumberish>,
        overrides?: CallOverrides
    ): Promise<ReadLibConfigStructOutput>

    getReadLibConfig(
        _oapp: PromiseOrValue<string>,
        _remoteEid: PromiseOrValue<BigNumberish>,
        overrides?: CallOverrides
    ): Promise<ReadLibConfigStructOutput>

    owner(overrides?: CallOverrides): Promise<string>

    renounceOwnership(overrides?: Overrides & { from?: PromiseOrValue<string> }): Promise<ContractTransaction>

    setDefaultReadLibConfigs(
        _params: SetDefaultReadLibConfigParamStruct[],
        overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>

    transferOwnership(
        newOwner: PromiseOrValue<string>,
        overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>

    callStatic: {
        getAppReadLibConfig(
            _oapp: PromiseOrValue<string>,
            _remoteEid: PromiseOrValue<BigNumberish>,
            overrides?: CallOverrides
        ): Promise<ReadLibConfigStructOutput>

        getReadLibConfig(
            _oapp: PromiseOrValue<string>,
            _remoteEid: PromiseOrValue<BigNumberish>,
            overrides?: CallOverrides
        ): Promise<ReadLibConfigStructOutput>

        owner(overrides?: CallOverrides): Promise<string>

        renounceOwnership(overrides?: CallOverrides): Promise<void>

        setDefaultReadLibConfigs(
            _params: SetDefaultReadLibConfigParamStruct[],
            overrides?: CallOverrides
        ): Promise<void>

        transferOwnership(newOwner: PromiseOrValue<string>, overrides?: CallOverrides): Promise<void>
    }

    filters: {
        'DefaultReadLibConfigsSet(tuple[])'(params?: null): DefaultReadLibConfigsSetEventFilter
        DefaultReadLibConfigsSet(params?: null): DefaultReadLibConfigsSetEventFilter

        'OwnershipTransferred(address,address)'(
            previousOwner?: PromiseOrValue<string> | null,
            newOwner?: PromiseOrValue<string> | null
        ): OwnershipTransferredEventFilter
        OwnershipTransferred(
            previousOwner?: PromiseOrValue<string> | null,
            newOwner?: PromiseOrValue<string> | null
        ): OwnershipTransferredEventFilter

        'ReadLibConfigSet(address,uint32,tuple)'(oapp?: null, eid?: null, config?: null): ReadLibConfigSetEventFilter
        ReadLibConfigSet(oapp?: null, eid?: null, config?: null): ReadLibConfigSetEventFilter
    }

    estimateGas: {
        getAppReadLibConfig(
            _oapp: PromiseOrValue<string>,
            _remoteEid: PromiseOrValue<BigNumberish>,
            overrides?: CallOverrides
        ): Promise<BigNumber>

        getReadLibConfig(
            _oapp: PromiseOrValue<string>,
            _remoteEid: PromiseOrValue<BigNumberish>,
            overrides?: CallOverrides
        ): Promise<BigNumber>

        owner(overrides?: CallOverrides): Promise<BigNumber>

        renounceOwnership(overrides?: Overrides & { from?: PromiseOrValue<string> }): Promise<BigNumber>

        setDefaultReadLibConfigs(
            _params: SetDefaultReadLibConfigParamStruct[],
            overrides?: Overrides & { from?: PromiseOrValue<string> }
        ): Promise<BigNumber>

        transferOwnership(
            newOwner: PromiseOrValue<string>,
            overrides?: Overrides & { from?: PromiseOrValue<string> }
        ): Promise<BigNumber>
    }

    populateTransaction: {
        getAppReadLibConfig(
            _oapp: PromiseOrValue<string>,
            _remoteEid: PromiseOrValue<BigNumberish>,
            overrides?: CallOverrides
        ): Promise<PopulatedTransaction>

        getReadLibConfig(
            _oapp: PromiseOrValue<string>,
            _remoteEid: PromiseOrValue<BigNumberish>,
            overrides?: CallOverrides
        ): Promise<PopulatedTransaction>

        owner(overrides?: CallOverrides): Promise<PopulatedTransaction>

        renounceOwnership(overrides?: Overrides & { from?: PromiseOrValue<string> }): Promise<PopulatedTransaction>

        setDefaultReadLibConfigs(
            _params: SetDefaultReadLibConfigParamStruct[],
            overrides?: Overrides & { from?: PromiseOrValue<string> }
        ): Promise<PopulatedTransaction>

        transferOwnership(
            newOwner: PromiseOrValue<string>,
            overrides?: Overrides & { from?: PromiseOrValue<string> }
        ): Promise<PopulatedTransaction>
    }
}
