/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
    BaseContract,
    BigNumber,
    BigNumberish,
    BytesLike,
    CallOverrides,
    PopulatedTransaction,
    Signer,
    utils,
} from 'ethers'
import type { FunctionFragment, Result } from '@ethersproject/abi'
import type { Listener, Provider } from '@ethersproject/providers'
import type { TypedEventFilter, TypedEvent, TypedListener, OnEvent, PromiseOrValue } from '../../../common'

export type UlnConfigStruct = {
    confirmations: PromiseOrValue<BigNumberish>
    requiredDVNCount: PromiseOrValue<BigNumberish>
    optionalDVNCount: PromiseOrValue<BigNumberish>
    optionalDVNThreshold: PromiseOrValue<BigNumberish>
    requiredDVNs: PromiseOrValue<string>[]
    optionalDVNs: PromiseOrValue<string>[]
}

export type UlnConfigStructOutput = [BigNumber, number, number, number, string[], string[]] & {
    confirmations: BigNumber
    requiredDVNCount: number
    optionalDVNCount: number
    optionalDVNThreshold: number
    requiredDVNs: string[]
    optionalDVNs: string[]
}

export interface IReceiveUln302Interface extends utils.Interface {
    functions: {
        'assertHeader(bytes,uint32)': FunctionFragment
        'getUlnConfig(address,uint32)': FunctionFragment
        'verifiable((uint64,uint8,uint8,uint8,address[],address[]),bytes32,bytes32)': FunctionFragment
    }

    getFunction(nameOrSignatureOrTopic: 'assertHeader' | 'getUlnConfig' | 'verifiable'): FunctionFragment

    encodeFunctionData(
        functionFragment: 'assertHeader',
        values: [PromiseOrValue<BytesLike>, PromiseOrValue<BigNumberish>]
    ): string
    encodeFunctionData(
        functionFragment: 'getUlnConfig',
        values: [PromiseOrValue<string>, PromiseOrValue<BigNumberish>]
    ): string
    encodeFunctionData(
        functionFragment: 'verifiable',
        values: [UlnConfigStruct, PromiseOrValue<BytesLike>, PromiseOrValue<BytesLike>]
    ): string

    decodeFunctionResult(functionFragment: 'assertHeader', data: BytesLike): Result
    decodeFunctionResult(functionFragment: 'getUlnConfig', data: BytesLike): Result
    decodeFunctionResult(functionFragment: 'verifiable', data: BytesLike): Result

    events: {}
}

export interface IReceiveUln302 extends BaseContract {
    connect(signerOrProvider: Signer | Provider | string): this
    attach(addressOrName: string): this
    deployed(): Promise<this>

    interface: IReceiveUln302Interface

    queryFilter<TEvent extends TypedEvent>(
        event: TypedEventFilter<TEvent>,
        fromBlockOrBlockhash?: string | number | undefined,
        toBlock?: string | number | undefined
    ): Promise<Array<TEvent>>

    listeners<TEvent extends TypedEvent>(eventFilter?: TypedEventFilter<TEvent>): Array<TypedListener<TEvent>>
    listeners(eventName?: string): Array<Listener>
    removeAllListeners<TEvent extends TypedEvent>(eventFilter: TypedEventFilter<TEvent>): this
    removeAllListeners(eventName?: string): this
    off: OnEvent<this>
    on: OnEvent<this>
    once: OnEvent<this>
    removeListener: OnEvent<this>

    functions: {
        assertHeader(
            _packetHeader: PromiseOrValue<BytesLike>,
            _localEid: PromiseOrValue<BigNumberish>,
            overrides?: CallOverrides
        ): Promise<[void]>

        getUlnConfig(
            _oapp: PromiseOrValue<string>,
            _remoteEid: PromiseOrValue<BigNumberish>,
            overrides?: CallOverrides
        ): Promise<[UlnConfigStructOutput] & { rtnConfig: UlnConfigStructOutput }>

        verifiable(
            _config: UlnConfigStruct,
            _headerHash: PromiseOrValue<BytesLike>,
            _payloadHash: PromiseOrValue<BytesLike>,
            overrides?: CallOverrides
        ): Promise<[boolean]>
    }

    assertHeader(
        _packetHeader: PromiseOrValue<BytesLike>,
        _localEid: PromiseOrValue<BigNumberish>,
        overrides?: CallOverrides
    ): Promise<void>

    getUlnConfig(
        _oapp: PromiseOrValue<string>,
        _remoteEid: PromiseOrValue<BigNumberish>,
        overrides?: CallOverrides
    ): Promise<UlnConfigStructOutput>

    verifiable(
        _config: UlnConfigStruct,
        _headerHash: PromiseOrValue<BytesLike>,
        _payloadHash: PromiseOrValue<BytesLike>,
        overrides?: CallOverrides
    ): Promise<boolean>

    callStatic: {
        assertHeader(
            _packetHeader: PromiseOrValue<BytesLike>,
            _localEid: PromiseOrValue<BigNumberish>,
            overrides?: CallOverrides
        ): Promise<void>

        getUlnConfig(
            _oapp: PromiseOrValue<string>,
            _remoteEid: PromiseOrValue<BigNumberish>,
            overrides?: CallOverrides
        ): Promise<UlnConfigStructOutput>

        verifiable(
            _config: UlnConfigStruct,
            _headerHash: PromiseOrValue<BytesLike>,
            _payloadHash: PromiseOrValue<BytesLike>,
            overrides?: CallOverrides
        ): Promise<boolean>
    }

    filters: {}

    estimateGas: {
        assertHeader(
            _packetHeader: PromiseOrValue<BytesLike>,
            _localEid: PromiseOrValue<BigNumberish>,
            overrides?: CallOverrides
        ): Promise<BigNumber>

        getUlnConfig(
            _oapp: PromiseOrValue<string>,
            _remoteEid: PromiseOrValue<BigNumberish>,
            overrides?: CallOverrides
        ): Promise<BigNumber>

        verifiable(
            _config: UlnConfigStruct,
            _headerHash: PromiseOrValue<BytesLike>,
            _payloadHash: PromiseOrValue<BytesLike>,
            overrides?: CallOverrides
        ): Promise<BigNumber>
    }

    populateTransaction: {
        assertHeader(
            _packetHeader: PromiseOrValue<BytesLike>,
            _localEid: PromiseOrValue<BigNumberish>,
            overrides?: CallOverrides
        ): Promise<PopulatedTransaction>

        getUlnConfig(
            _oapp: PromiseOrValue<string>,
            _remoteEid: PromiseOrValue<BigNumberish>,
            overrides?: CallOverrides
        ): Promise<PopulatedTransaction>

        verifiable(
            _config: UlnConfigStruct,
            _headerHash: PromiseOrValue<BytesLike>,
            _payloadHash: PromiseOrValue<BytesLike>,
            overrides?: CallOverrides
        ): Promise<PopulatedTransaction>
    }
}
