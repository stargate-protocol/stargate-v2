/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
    BaseContract,
    BigNumber,
    BigNumberish,
    BytesLike,
    CallOverrides,
    ContractTransaction,
    Overrides,
    PopulatedTransaction,
    Signer,
    utils,
} from 'ethers'
import type { FunctionFragment, Result, EventFragment } from '@ethersproject/abi'
import type { Listener, Provider } from '@ethersproject/providers'
import type { TypedEventFilter, TypedEvent, TypedListener, OnEvent, PromiseOrValue } from '../../../common'

export interface ReceiveUln301ViewInterface extends utils.Interface {
    functions: {
        'endpoint()': FunctionFragment
        'executable(bytes,bytes32)': FunctionFragment
        'initialize(address,uint32,address)': FunctionFragment
        'receiveUln301()': FunctionFragment
        'verifiable(bytes,bytes32)': FunctionFragment
    }

    getFunction(
        nameOrSignatureOrTopic: 'endpoint' | 'executable' | 'initialize' | 'receiveUln301' | 'verifiable'
    ): FunctionFragment

    encodeFunctionData(functionFragment: 'endpoint', values?: undefined): string
    encodeFunctionData(
        functionFragment: 'executable',
        values: [PromiseOrValue<BytesLike>, PromiseOrValue<BytesLike>]
    ): string
    encodeFunctionData(
        functionFragment: 'initialize',
        values: [PromiseOrValue<string>, PromiseOrValue<BigNumberish>, PromiseOrValue<string>]
    ): string
    encodeFunctionData(functionFragment: 'receiveUln301', values?: undefined): string
    encodeFunctionData(
        functionFragment: 'verifiable',
        values: [PromiseOrValue<BytesLike>, PromiseOrValue<BytesLike>]
    ): string

    decodeFunctionResult(functionFragment: 'endpoint', data: BytesLike): Result
    decodeFunctionResult(functionFragment: 'executable', data: BytesLike): Result
    decodeFunctionResult(functionFragment: 'initialize', data: BytesLike): Result
    decodeFunctionResult(functionFragment: 'receiveUln301', data: BytesLike): Result
    decodeFunctionResult(functionFragment: 'verifiable', data: BytesLike): Result

    events: {
        'Initialized(uint8)': EventFragment
    }

    getEvent(nameOrSignatureOrTopic: 'Initialized'): EventFragment
}

export interface InitializedEventObject {
    version: number
}
export type InitializedEvent = TypedEvent<[number], InitializedEventObject>

export type InitializedEventFilter = TypedEventFilter<InitializedEvent>

export interface ReceiveUln301View extends BaseContract {
    connect(signerOrProvider: Signer | Provider | string): this
    attach(addressOrName: string): this
    deployed(): Promise<this>

    interface: ReceiveUln301ViewInterface

    queryFilter<TEvent extends TypedEvent>(
        event: TypedEventFilter<TEvent>,
        fromBlockOrBlockhash?: string | number | undefined,
        toBlock?: string | number | undefined
    ): Promise<Array<TEvent>>

    listeners<TEvent extends TypedEvent>(eventFilter?: TypedEventFilter<TEvent>): Array<TypedListener<TEvent>>
    listeners(eventName?: string): Array<Listener>
    removeAllListeners<TEvent extends TypedEvent>(eventFilter: TypedEventFilter<TEvent>): this
    removeAllListeners(eventName?: string): this
    off: OnEvent<this>
    on: OnEvent<this>
    once: OnEvent<this>
    removeListener: OnEvent<this>

    functions: {
        endpoint(overrides?: CallOverrides): Promise<[string]>

        executable(
            _packetHeader: PromiseOrValue<BytesLike>,
            _payloadHash: PromiseOrValue<BytesLike>,
            overrides?: CallOverrides
        ): Promise<[number]>

        initialize(
            _endpoint: PromiseOrValue<string>,
            _localEid: PromiseOrValue<BigNumberish>,
            _receiveUln301: PromiseOrValue<string>,
            overrides?: Overrides & { from?: PromiseOrValue<string> }
        ): Promise<ContractTransaction>

        receiveUln301(overrides?: CallOverrides): Promise<[string]>

        verifiable(
            _packetHeader: PromiseOrValue<BytesLike>,
            _payloadHash: PromiseOrValue<BytesLike>,
            overrides?: CallOverrides
        ): Promise<[number]>
    }

    endpoint(overrides?: CallOverrides): Promise<string>

    executable(
        _packetHeader: PromiseOrValue<BytesLike>,
        _payloadHash: PromiseOrValue<BytesLike>,
        overrides?: CallOverrides
    ): Promise<number>

    initialize(
        _endpoint: PromiseOrValue<string>,
        _localEid: PromiseOrValue<BigNumberish>,
        _receiveUln301: PromiseOrValue<string>,
        overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>

    receiveUln301(overrides?: CallOverrides): Promise<string>

    verifiable(
        _packetHeader: PromiseOrValue<BytesLike>,
        _payloadHash: PromiseOrValue<BytesLike>,
        overrides?: CallOverrides
    ): Promise<number>

    callStatic: {
        endpoint(overrides?: CallOverrides): Promise<string>

        executable(
            _packetHeader: PromiseOrValue<BytesLike>,
            _payloadHash: PromiseOrValue<BytesLike>,
            overrides?: CallOverrides
        ): Promise<number>

        initialize(
            _endpoint: PromiseOrValue<string>,
            _localEid: PromiseOrValue<BigNumberish>,
            _receiveUln301: PromiseOrValue<string>,
            overrides?: CallOverrides
        ): Promise<void>

        receiveUln301(overrides?: CallOverrides): Promise<string>

        verifiable(
            _packetHeader: PromiseOrValue<BytesLike>,
            _payloadHash: PromiseOrValue<BytesLike>,
            overrides?: CallOverrides
        ): Promise<number>
    }

    filters: {
        'Initialized(uint8)'(version?: null): InitializedEventFilter
        Initialized(version?: null): InitializedEventFilter
    }

    estimateGas: {
        endpoint(overrides?: CallOverrides): Promise<BigNumber>

        executable(
            _packetHeader: PromiseOrValue<BytesLike>,
            _payloadHash: PromiseOrValue<BytesLike>,
            overrides?: CallOverrides
        ): Promise<BigNumber>

        initialize(
            _endpoint: PromiseOrValue<string>,
            _localEid: PromiseOrValue<BigNumberish>,
            _receiveUln301: PromiseOrValue<string>,
            overrides?: Overrides & { from?: PromiseOrValue<string> }
        ): Promise<BigNumber>

        receiveUln301(overrides?: CallOverrides): Promise<BigNumber>

        verifiable(
            _packetHeader: PromiseOrValue<BytesLike>,
            _payloadHash: PromiseOrValue<BytesLike>,
            overrides?: CallOverrides
        ): Promise<BigNumber>
    }

    populateTransaction: {
        endpoint(overrides?: CallOverrides): Promise<PopulatedTransaction>

        executable(
            _packetHeader: PromiseOrValue<BytesLike>,
            _payloadHash: PromiseOrValue<BytesLike>,
            overrides?: CallOverrides
        ): Promise<PopulatedTransaction>

        initialize(
            _endpoint: PromiseOrValue<string>,
            _localEid: PromiseOrValue<BigNumberish>,
            _receiveUln301: PromiseOrValue<string>,
            overrides?: Overrides & { from?: PromiseOrValue<string> }
        ): Promise<PopulatedTransaction>

        receiveUln301(overrides?: CallOverrides): Promise<PopulatedTransaction>

        verifiable(
            _packetHeader: PromiseOrValue<BytesLike>,
            _payloadHash: PromiseOrValue<BytesLike>,
            overrides?: CallOverrides
        ): Promise<PopulatedTransaction>
    }
}
