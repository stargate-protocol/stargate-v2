/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
    BaseContract,
    BigNumber,
    BigNumberish,
    BytesLike,
    CallOverrides,
    ContractTransaction,
    Overrides,
    PopulatedTransaction,
    Signer,
    utils,
} from 'ethers'
import type { FunctionFragment, Result, EventFragment } from '@ethersproject/abi'
import type { Listener, Provider } from '@ethersproject/providers'
import type { TypedEventFilter, TypedEvent, TypedListener, OnEvent, PromiseOrValue } from './common'

export type ExecutorConfigStruct = {
    maxMessageSize: PromiseOrValue<BigNumberish>
    executor: PromiseOrValue<string>
}

export type ExecutorConfigStructOutput = [number, string] & {
    maxMessageSize: number
    executor: string
}

export type SetDefaultExecutorConfigParamStruct = {
    eid: PromiseOrValue<BigNumberish>
    config: ExecutorConfigStruct
}

export type SetDefaultExecutorConfigParamStructOutput = [number, ExecutorConfigStructOutput] & {
    eid: number
    config: ExecutorConfigStructOutput
}

export interface SendLibBaseInterface extends utils.Interface {
    functions: {
        'executorConfigs(address,uint32)': FunctionFragment
        'fees(address)': FunctionFragment
        'getExecutorConfig(address,uint32)': FunctionFragment
        'owner()': FunctionFragment
        'renounceOwnership()': FunctionFragment
        'setDefaultExecutorConfigs((uint32,(uint32,address))[])': FunctionFragment
        'setTreasuryNativeFeeCap(uint256)': FunctionFragment
        'transferOwnership(address)': FunctionFragment
        'treasury()': FunctionFragment
    }

    getFunction(
        nameOrSignatureOrTopic:
            | 'executorConfigs'
            | 'fees'
            | 'getExecutorConfig'
            | 'owner'
            | 'renounceOwnership'
            | 'setDefaultExecutorConfigs'
            | 'setTreasuryNativeFeeCap'
            | 'transferOwnership'
            | 'treasury'
    ): FunctionFragment

    encodeFunctionData(
        functionFragment: 'executorConfigs',
        values: [PromiseOrValue<string>, PromiseOrValue<BigNumberish>]
    ): string
    encodeFunctionData(functionFragment: 'fees', values: [PromiseOrValue<string>]): string
    encodeFunctionData(
        functionFragment: 'getExecutorConfig',
        values: [PromiseOrValue<string>, PromiseOrValue<BigNumberish>]
    ): string
    encodeFunctionData(functionFragment: 'owner', values?: undefined): string
    encodeFunctionData(functionFragment: 'renounceOwnership', values?: undefined): string
    encodeFunctionData(
        functionFragment: 'setDefaultExecutorConfigs',
        values: [SetDefaultExecutorConfigParamStruct[]]
    ): string
    encodeFunctionData(functionFragment: 'setTreasuryNativeFeeCap', values: [PromiseOrValue<BigNumberish>]): string
    encodeFunctionData(functionFragment: 'transferOwnership', values: [PromiseOrValue<string>]): string
    encodeFunctionData(functionFragment: 'treasury', values?: undefined): string

    decodeFunctionResult(functionFragment: 'executorConfigs', data: BytesLike): Result
    decodeFunctionResult(functionFragment: 'fees', data: BytesLike): Result
    decodeFunctionResult(functionFragment: 'getExecutorConfig', data: BytesLike): Result
    decodeFunctionResult(functionFragment: 'owner', data: BytesLike): Result
    decodeFunctionResult(functionFragment: 'renounceOwnership', data: BytesLike): Result
    decodeFunctionResult(functionFragment: 'setDefaultExecutorConfigs', data: BytesLike): Result
    decodeFunctionResult(functionFragment: 'setTreasuryNativeFeeCap', data: BytesLike): Result
    decodeFunctionResult(functionFragment: 'transferOwnership', data: BytesLike): Result
    decodeFunctionResult(functionFragment: 'treasury', data: BytesLike): Result

    events: {
        'DefaultExecutorConfigsSet(tuple[])': EventFragment
        'ExecutorConfigSet(address,uint32,tuple)': EventFragment
        'ExecutorFeePaid(address,uint256)': EventFragment
        'OwnershipTransferred(address,address)': EventFragment
        'TreasuryNativeFeeCapSet(uint256)': EventFragment
        'TreasurySet(address)': EventFragment
    }

    getEvent(nameOrSignatureOrTopic: 'DefaultExecutorConfigsSet'): EventFragment
    getEvent(nameOrSignatureOrTopic: 'ExecutorConfigSet'): EventFragment
    getEvent(nameOrSignatureOrTopic: 'ExecutorFeePaid'): EventFragment
    getEvent(nameOrSignatureOrTopic: 'OwnershipTransferred'): EventFragment
    getEvent(nameOrSignatureOrTopic: 'TreasuryNativeFeeCapSet'): EventFragment
    getEvent(nameOrSignatureOrTopic: 'TreasurySet'): EventFragment
}

export interface DefaultExecutorConfigsSetEventObject {
    params: SetDefaultExecutorConfigParamStructOutput[]
}
export type DefaultExecutorConfigsSetEvent = TypedEvent<
    [SetDefaultExecutorConfigParamStructOutput[]],
    DefaultExecutorConfigsSetEventObject
>

export type DefaultExecutorConfigsSetEventFilter = TypedEventFilter<DefaultExecutorConfigsSetEvent>

export interface ExecutorConfigSetEventObject {
    oapp: string
    eid: number
    config: ExecutorConfigStructOutput
}
export type ExecutorConfigSetEvent = TypedEvent<
    [string, number, ExecutorConfigStructOutput],
    ExecutorConfigSetEventObject
>

export type ExecutorConfigSetEventFilter = TypedEventFilter<ExecutorConfigSetEvent>

export interface ExecutorFeePaidEventObject {
    executor: string
    fee: BigNumber
}
export type ExecutorFeePaidEvent = TypedEvent<[string, BigNumber], ExecutorFeePaidEventObject>

export type ExecutorFeePaidEventFilter = TypedEventFilter<ExecutorFeePaidEvent>

export interface OwnershipTransferredEventObject {
    previousOwner: string
    newOwner: string
}
export type OwnershipTransferredEvent = TypedEvent<[string, string], OwnershipTransferredEventObject>

export type OwnershipTransferredEventFilter = TypedEventFilter<OwnershipTransferredEvent>

export interface TreasuryNativeFeeCapSetEventObject {
    newTreasuryNativeFeeCap: BigNumber
}
export type TreasuryNativeFeeCapSetEvent = TypedEvent<[BigNumber], TreasuryNativeFeeCapSetEventObject>

export type TreasuryNativeFeeCapSetEventFilter = TypedEventFilter<TreasuryNativeFeeCapSetEvent>

export interface TreasurySetEventObject {
    treasury: string
}
export type TreasurySetEvent = TypedEvent<[string], TreasurySetEventObject>

export type TreasurySetEventFilter = TypedEventFilter<TreasurySetEvent>

export interface SendLibBase extends BaseContract {
    connect(signerOrProvider: Signer | Provider | string): this
    attach(addressOrName: string): this
    deployed(): Promise<this>

    interface: SendLibBaseInterface

    queryFilter<TEvent extends TypedEvent>(
        event: TypedEventFilter<TEvent>,
        fromBlockOrBlockhash?: string | number | undefined,
        toBlock?: string | number | undefined
    ): Promise<Array<TEvent>>

    listeners<TEvent extends TypedEvent>(eventFilter?: TypedEventFilter<TEvent>): Array<TypedListener<TEvent>>
    listeners(eventName?: string): Array<Listener>
    removeAllListeners<TEvent extends TypedEvent>(eventFilter: TypedEventFilter<TEvent>): this
    removeAllListeners(eventName?: string): this
    off: OnEvent<this>
    on: OnEvent<this>
    once: OnEvent<this>
    removeListener: OnEvent<this>

    functions: {
        executorConfigs(
            oapp: PromiseOrValue<string>,
            eid: PromiseOrValue<BigNumberish>,
            overrides?: CallOverrides
        ): Promise<[number, string] & { maxMessageSize: number; executor: string }>

        fees(worker: PromiseOrValue<string>, overrides?: CallOverrides): Promise<[BigNumber]>

        getExecutorConfig(
            _oapp: PromiseOrValue<string>,
            _remoteEid: PromiseOrValue<BigNumberish>,
            overrides?: CallOverrides
        ): Promise<[ExecutorConfigStructOutput] & { rtnConfig: ExecutorConfigStructOutput }>

        owner(overrides?: CallOverrides): Promise<[string]>

        renounceOwnership(overrides?: Overrides & { from?: PromiseOrValue<string> }): Promise<ContractTransaction>

        setDefaultExecutorConfigs(
            _params: SetDefaultExecutorConfigParamStruct[],
            overrides?: Overrides & { from?: PromiseOrValue<string> }
        ): Promise<ContractTransaction>

        setTreasuryNativeFeeCap(
            _newTreasuryNativeFeeCap: PromiseOrValue<BigNumberish>,
            overrides?: Overrides & { from?: PromiseOrValue<string> }
        ): Promise<ContractTransaction>

        transferOwnership(
            newOwner: PromiseOrValue<string>,
            overrides?: Overrides & { from?: PromiseOrValue<string> }
        ): Promise<ContractTransaction>

        treasury(overrides?: CallOverrides): Promise<[string]>
    }

    executorConfigs(
        oapp: PromiseOrValue<string>,
        eid: PromiseOrValue<BigNumberish>,
        overrides?: CallOverrides
    ): Promise<[number, string] & { maxMessageSize: number; executor: string }>

    fees(worker: PromiseOrValue<string>, overrides?: CallOverrides): Promise<BigNumber>

    getExecutorConfig(
        _oapp: PromiseOrValue<string>,
        _remoteEid: PromiseOrValue<BigNumberish>,
        overrides?: CallOverrides
    ): Promise<ExecutorConfigStructOutput>

    owner(overrides?: CallOverrides): Promise<string>

    renounceOwnership(overrides?: Overrides & { from?: PromiseOrValue<string> }): Promise<ContractTransaction>

    setDefaultExecutorConfigs(
        _params: SetDefaultExecutorConfigParamStruct[],
        overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>

    setTreasuryNativeFeeCap(
        _newTreasuryNativeFeeCap: PromiseOrValue<BigNumberish>,
        overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>

    transferOwnership(
        newOwner: PromiseOrValue<string>,
        overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>

    treasury(overrides?: CallOverrides): Promise<string>

    callStatic: {
        executorConfigs(
            oapp: PromiseOrValue<string>,
            eid: PromiseOrValue<BigNumberish>,
            overrides?: CallOverrides
        ): Promise<[number, string] & { maxMessageSize: number; executor: string }>

        fees(worker: PromiseOrValue<string>, overrides?: CallOverrides): Promise<BigNumber>

        getExecutorConfig(
            _oapp: PromiseOrValue<string>,
            _remoteEid: PromiseOrValue<BigNumberish>,
            overrides?: CallOverrides
        ): Promise<ExecutorConfigStructOutput>

        owner(overrides?: CallOverrides): Promise<string>

        renounceOwnership(overrides?: CallOverrides): Promise<void>

        setDefaultExecutorConfigs(
            _params: SetDefaultExecutorConfigParamStruct[],
            overrides?: CallOverrides
        ): Promise<void>

        setTreasuryNativeFeeCap(
            _newTreasuryNativeFeeCap: PromiseOrValue<BigNumberish>,
            overrides?: CallOverrides
        ): Promise<void>

        transferOwnership(newOwner: PromiseOrValue<string>, overrides?: CallOverrides): Promise<void>

        treasury(overrides?: CallOverrides): Promise<string>
    }

    filters: {
        'DefaultExecutorConfigsSet(tuple[])'(params?: null): DefaultExecutorConfigsSetEventFilter
        DefaultExecutorConfigsSet(params?: null): DefaultExecutorConfigsSetEventFilter

        'ExecutorConfigSet(address,uint32,tuple)'(oapp?: null, eid?: null, config?: null): ExecutorConfigSetEventFilter
        ExecutorConfigSet(oapp?: null, eid?: null, config?: null): ExecutorConfigSetEventFilter

        'ExecutorFeePaid(address,uint256)'(executor?: null, fee?: null): ExecutorFeePaidEventFilter
        ExecutorFeePaid(executor?: null, fee?: null): ExecutorFeePaidEventFilter

        'OwnershipTransferred(address,address)'(
            previousOwner?: PromiseOrValue<string> | null,
            newOwner?: PromiseOrValue<string> | null
        ): OwnershipTransferredEventFilter
        OwnershipTransferred(
            previousOwner?: PromiseOrValue<string> | null,
            newOwner?: PromiseOrValue<string> | null
        ): OwnershipTransferredEventFilter

        'TreasuryNativeFeeCapSet(uint256)'(newTreasuryNativeFeeCap?: null): TreasuryNativeFeeCapSetEventFilter
        TreasuryNativeFeeCapSet(newTreasuryNativeFeeCap?: null): TreasuryNativeFeeCapSetEventFilter

        'TreasurySet(address)'(treasury?: null): TreasurySetEventFilter
        TreasurySet(treasury?: null): TreasurySetEventFilter
    }

    estimateGas: {
        executorConfigs(
            oapp: PromiseOrValue<string>,
            eid: PromiseOrValue<BigNumberish>,
            overrides?: CallOverrides
        ): Promise<BigNumber>

        fees(worker: PromiseOrValue<string>, overrides?: CallOverrides): Promise<BigNumber>

        getExecutorConfig(
            _oapp: PromiseOrValue<string>,
            _remoteEid: PromiseOrValue<BigNumberish>,
            overrides?: CallOverrides
        ): Promise<BigNumber>

        owner(overrides?: CallOverrides): Promise<BigNumber>

        renounceOwnership(overrides?: Overrides & { from?: PromiseOrValue<string> }): Promise<BigNumber>

        setDefaultExecutorConfigs(
            _params: SetDefaultExecutorConfigParamStruct[],
            overrides?: Overrides & { from?: PromiseOrValue<string> }
        ): Promise<BigNumber>

        setTreasuryNativeFeeCap(
            _newTreasuryNativeFeeCap: PromiseOrValue<BigNumberish>,
            overrides?: Overrides & { from?: PromiseOrValue<string> }
        ): Promise<BigNumber>

        transferOwnership(
            newOwner: PromiseOrValue<string>,
            overrides?: Overrides & { from?: PromiseOrValue<string> }
        ): Promise<BigNumber>

        treasury(overrides?: CallOverrides): Promise<BigNumber>
    }

    populateTransaction: {
        executorConfigs(
            oapp: PromiseOrValue<string>,
            eid: PromiseOrValue<BigNumberish>,
            overrides?: CallOverrides
        ): Promise<PopulatedTransaction>

        fees(worker: PromiseOrValue<string>, overrides?: CallOverrides): Promise<PopulatedTransaction>

        getExecutorConfig(
            _oapp: PromiseOrValue<string>,
            _remoteEid: PromiseOrValue<BigNumberish>,
            overrides?: CallOverrides
        ): Promise<PopulatedTransaction>

        owner(overrides?: CallOverrides): Promise<PopulatedTransaction>

        renounceOwnership(overrides?: Overrides & { from?: PromiseOrValue<string> }): Promise<PopulatedTransaction>

        setDefaultExecutorConfigs(
            _params: SetDefaultExecutorConfigParamStruct[],
            overrides?: Overrides & { from?: PromiseOrValue<string> }
        ): Promise<PopulatedTransaction>

        setTreasuryNativeFeeCap(
            _newTreasuryNativeFeeCap: PromiseOrValue<BigNumberish>,
            overrides?: Overrides & { from?: PromiseOrValue<string> }
        ): Promise<PopulatedTransaction>

        transferOwnership(
            newOwner: PromiseOrValue<string>,
            overrides?: Overrides & { from?: PromiseOrValue<string> }
        ): Promise<PopulatedTransaction>

        treasury(overrides?: CallOverrides): Promise<PopulatedTransaction>
    }
}
