/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
    BaseContract,
    BigNumber,
    BigNumberish,
    BytesLike,
    CallOverrides,
    PopulatedTransaction,
    Signer,
    utils,
} from 'ethers'
import type { FunctionFragment, Result } from '@ethersproject/abi'
import type { Listener, Provider } from '@ethersproject/providers'
import type { TypedEventFilter, TypedEvent, TypedListener, OnEvent, PromiseOrValue } from '../../common'

export type EVMCallRequestV1Struct = {
    appRequestLabel: PromiseOrValue<BigNumberish>
    targetEid: PromiseOrValue<BigNumberish>
    isBlockNum: PromiseOrValue<boolean>
    blockNumOrTimestamp: PromiseOrValue<BigNumberish>
    confirmations: PromiseOrValue<BigNumberish>
    to: PromiseOrValue<string>
    callData: PromiseOrValue<BytesLike>
}

export type EVMCallRequestV1StructOutput = [number, number, boolean, BigNumber, number, string, string] & {
    appRequestLabel: number
    targetEid: number
    isBlockNum: boolean
    blockNumOrTimestamp: BigNumber
    confirmations: number
    to: string
    callData: string
}

export type EVMCallComputeV1Struct = {
    computeSetting: PromiseOrValue<BigNumberish>
    targetEid: PromiseOrValue<BigNumberish>
    isBlockNum: PromiseOrValue<boolean>
    blockNumOrTimestamp: PromiseOrValue<BigNumberish>
    confirmations: PromiseOrValue<BigNumberish>
    to: PromiseOrValue<string>
}

export type EVMCallComputeV1StructOutput = [number, number, boolean, BigNumber, number, string] & {
    computeSetting: number
    targetEid: number
    isBlockNum: boolean
    blockNumOrTimestamp: BigNumber
    confirmations: number
    to: string
}

export interface CmdCodecV1MockInterface extends utils.Interface {
    functions: {
        'decode(bytes)': FunctionFragment
        'encode(uint16,(uint16,uint32,bool,uint64,uint16,address,bytes)[])': FunctionFragment
        'encode(uint16,(uint16,uint32,bool,uint64,uint16,address,bytes)[],(uint8,uint32,bool,uint64,uint16,address))': FunctionFragment
    }

    getFunction(
        nameOrSignatureOrTopic:
            | 'decode'
            | 'encode(uint16,(uint16,uint32,bool,uint64,uint16,address,bytes)[])'
            | 'encode(uint16,(uint16,uint32,bool,uint64,uint16,address,bytes)[],(uint8,uint32,bool,uint64,uint16,address))'
    ): FunctionFragment

    encodeFunctionData(functionFragment: 'decode', values: [PromiseOrValue<BytesLike>]): string
    encodeFunctionData(
        functionFragment: 'encode(uint16,(uint16,uint32,bool,uint64,uint16,address,bytes)[])',
        values: [PromiseOrValue<BigNumberish>, EVMCallRequestV1Struct[]]
    ): string
    encodeFunctionData(
        functionFragment: 'encode(uint16,(uint16,uint32,bool,uint64,uint16,address,bytes)[],(uint8,uint32,bool,uint64,uint16,address))',
        values: [PromiseOrValue<BigNumberish>, EVMCallRequestV1Struct[], EVMCallComputeV1Struct]
    ): string

    decodeFunctionResult(functionFragment: 'decode', data: BytesLike): Result
    decodeFunctionResult(
        functionFragment: 'encode(uint16,(uint16,uint32,bool,uint64,uint16,address,bytes)[])',
        data: BytesLike
    ): Result
    decodeFunctionResult(
        functionFragment: 'encode(uint16,(uint16,uint32,bool,uint64,uint16,address,bytes)[],(uint8,uint32,bool,uint64,uint16,address))',
        data: BytesLike
    ): Result

    events: {}
}

export interface CmdCodecV1Mock extends BaseContract {
    connect(signerOrProvider: Signer | Provider | string): this
    attach(addressOrName: string): this
    deployed(): Promise<this>

    interface: CmdCodecV1MockInterface

    queryFilter<TEvent extends TypedEvent>(
        event: TypedEventFilter<TEvent>,
        fromBlockOrBlockhash?: string | number | undefined,
        toBlock?: string | number | undefined
    ): Promise<Array<TEvent>>

    listeners<TEvent extends TypedEvent>(eventFilter?: TypedEventFilter<TEvent>): Array<TypedListener<TEvent>>
    listeners(eventName?: string): Array<Listener>
    removeAllListeners<TEvent extends TypedEvent>(eventFilter: TypedEventFilter<TEvent>): this
    removeAllListeners(eventName?: string): this
    off: OnEvent<this>
    on: OnEvent<this>
    once: OnEvent<this>
    removeListener: OnEvent<this>

    functions: {
        decode(
            _cmd: PromiseOrValue<BytesLike>,
            overrides?: CallOverrides
        ): Promise<
            [number, EVMCallRequestV1StructOutput[], EVMCallComputeV1StructOutput] & {
                appCmdLabel: number
                evmRequests: EVMCallRequestV1StructOutput[]
                compute: EVMCallComputeV1StructOutput
            }
        >

        'encode(uint16,(uint16,uint32,bool,uint64,uint16,address,bytes)[])'(
            _appCmdLabel: PromiseOrValue<BigNumberish>,
            _evmRequests: EVMCallRequestV1Struct[],
            overrides?: CallOverrides
        ): Promise<[string]>

        'encode(uint16,(uint16,uint32,bool,uint64,uint16,address,bytes)[],(uint8,uint32,bool,uint64,uint16,address))'(
            _appCmdLabel: PromiseOrValue<BigNumberish>,
            _evmRequests: EVMCallRequestV1Struct[],
            _evmCompute: EVMCallComputeV1Struct,
            overrides?: CallOverrides
        ): Promise<[string]>
    }

    decode(
        _cmd: PromiseOrValue<BytesLike>,
        overrides?: CallOverrides
    ): Promise<
        [number, EVMCallRequestV1StructOutput[], EVMCallComputeV1StructOutput] & {
            appCmdLabel: number
            evmRequests: EVMCallRequestV1StructOutput[]
            compute: EVMCallComputeV1StructOutput
        }
    >

    'encode(uint16,(uint16,uint32,bool,uint64,uint16,address,bytes)[])'(
        _appCmdLabel: PromiseOrValue<BigNumberish>,
        _evmRequests: EVMCallRequestV1Struct[],
        overrides?: CallOverrides
    ): Promise<string>

    'encode(uint16,(uint16,uint32,bool,uint64,uint16,address,bytes)[],(uint8,uint32,bool,uint64,uint16,address))'(
        _appCmdLabel: PromiseOrValue<BigNumberish>,
        _evmRequests: EVMCallRequestV1Struct[],
        _evmCompute: EVMCallComputeV1Struct,
        overrides?: CallOverrides
    ): Promise<string>

    callStatic: {
        decode(
            _cmd: PromiseOrValue<BytesLike>,
            overrides?: CallOverrides
        ): Promise<
            [number, EVMCallRequestV1StructOutput[], EVMCallComputeV1StructOutput] & {
                appCmdLabel: number
                evmRequests: EVMCallRequestV1StructOutput[]
                compute: EVMCallComputeV1StructOutput
            }
        >

        'encode(uint16,(uint16,uint32,bool,uint64,uint16,address,bytes)[])'(
            _appCmdLabel: PromiseOrValue<BigNumberish>,
            _evmRequests: EVMCallRequestV1Struct[],
            overrides?: CallOverrides
        ): Promise<string>

        'encode(uint16,(uint16,uint32,bool,uint64,uint16,address,bytes)[],(uint8,uint32,bool,uint64,uint16,address))'(
            _appCmdLabel: PromiseOrValue<BigNumberish>,
            _evmRequests: EVMCallRequestV1Struct[],
            _evmCompute: EVMCallComputeV1Struct,
            overrides?: CallOverrides
        ): Promise<string>
    }

    filters: {}

    estimateGas: {
        decode(_cmd: PromiseOrValue<BytesLike>, overrides?: CallOverrides): Promise<BigNumber>

        'encode(uint16,(uint16,uint32,bool,uint64,uint16,address,bytes)[])'(
            _appCmdLabel: PromiseOrValue<BigNumberish>,
            _evmRequests: EVMCallRequestV1Struct[],
            overrides?: CallOverrides
        ): Promise<BigNumber>

        'encode(uint16,(uint16,uint32,bool,uint64,uint16,address,bytes)[],(uint8,uint32,bool,uint64,uint16,address))'(
            _appCmdLabel: PromiseOrValue<BigNumberish>,
            _evmRequests: EVMCallRequestV1Struct[],
            _evmCompute: EVMCallComputeV1Struct,
            overrides?: CallOverrides
        ): Promise<BigNumber>
    }

    populateTransaction: {
        decode(_cmd: PromiseOrValue<BytesLike>, overrides?: CallOverrides): Promise<PopulatedTransaction>

        'encode(uint16,(uint16,uint32,bool,uint64,uint16,address,bytes)[])'(
            _appCmdLabel: PromiseOrValue<BigNumberish>,
            _evmRequests: EVMCallRequestV1Struct[],
            overrides?: CallOverrides
        ): Promise<PopulatedTransaction>

        'encode(uint16,(uint16,uint32,bool,uint64,uint16,address,bytes)[],(uint8,uint32,bool,uint64,uint16,address))'(
            _appCmdLabel: PromiseOrValue<BigNumberish>,
            _evmRequests: EVMCallRequestV1Struct[],
            _evmCompute: EVMCallComputeV1Struct,
            overrides?: CallOverrides
        ): Promise<PopulatedTransaction>
    }
}
