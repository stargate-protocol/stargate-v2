/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type { BaseContract, BigNumber, BytesLike, CallOverrides, PopulatedTransaction, Signer, utils } from 'ethers'
import type { FunctionFragment, Result } from '@ethersproject/abi'
import type { Listener, Provider } from '@ethersproject/providers'
import type { TypedEventFilter, TypedEvent, TypedListener, OnEvent, PromiseOrValue } from '../../common'

export interface IOAppComputerReduceInterface extends utils.Interface {
    functions: {
        'lzReduce(bytes,bytes[])': FunctionFragment
    }

    getFunction(nameOrSignatureOrTopic: 'lzReduce'): FunctionFragment

    encodeFunctionData(
        functionFragment: 'lzReduce',
        values: [PromiseOrValue<BytesLike>, PromiseOrValue<BytesLike>[]]
    ): string

    decodeFunctionResult(functionFragment: 'lzReduce', data: BytesLike): Result

    events: {}
}

export interface IOAppComputerReduce extends BaseContract {
    connect(signerOrProvider: Signer | Provider | string): this
    attach(addressOrName: string): this
    deployed(): Promise<this>

    interface: IOAppComputerReduceInterface

    queryFilter<TEvent extends TypedEvent>(
        event: TypedEventFilter<TEvent>,
        fromBlockOrBlockhash?: string | number | undefined,
        toBlock?: string | number | undefined
    ): Promise<Array<TEvent>>

    listeners<TEvent extends TypedEvent>(eventFilter?: TypedEventFilter<TEvent>): Array<TypedListener<TEvent>>
    listeners(eventName?: string): Array<Listener>
    removeAllListeners<TEvent extends TypedEvent>(eventFilter: TypedEventFilter<TEvent>): this
    removeAllListeners(eventName?: string): this
    off: OnEvent<this>
    on: OnEvent<this>
    once: OnEvent<this>
    removeListener: OnEvent<this>

    functions: {
        lzReduce(
            _cmd: PromiseOrValue<BytesLike>,
            _responses: PromiseOrValue<BytesLike>[],
            overrides?: CallOverrides
        ): Promise<[string]>
    }

    lzReduce(
        _cmd: PromiseOrValue<BytesLike>,
        _responses: PromiseOrValue<BytesLike>[],
        overrides?: CallOverrides
    ): Promise<string>

    callStatic: {
        lzReduce(
            _cmd: PromiseOrValue<BytesLike>,
            _responses: PromiseOrValue<BytesLike>[],
            overrides?: CallOverrides
        ): Promise<string>
    }

    filters: {}

    estimateGas: {
        lzReduce(
            _cmd: PromiseOrValue<BytesLike>,
            _responses: PromiseOrValue<BytesLike>[],
            overrides?: CallOverrides
        ): Promise<BigNumber>
    }

    populateTransaction: {
        lzReduce(
            _cmd: PromiseOrValue<BytesLike>,
            _responses: PromiseOrValue<BytesLike>[],
            overrides?: CallOverrides
        ): Promise<PopulatedTransaction>
    }
}
