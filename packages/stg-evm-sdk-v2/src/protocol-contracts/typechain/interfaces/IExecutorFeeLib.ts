/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
    BaseContract,
    BigNumber,
    BigNumberish,
    BytesLike,
    CallOverrides,
    ContractTransaction,
    Overrides,
    PopulatedTransaction,
    Signer,
    utils,
} from 'ethers'
import type { FunctionFragment, Result } from '@ethersproject/abi'
import type { Listener, Provider } from '@ethersproject/providers'
import type { TypedEventFilter, TypedEvent, TypedListener, OnEvent, PromiseOrValue } from '../common'

export declare namespace IExecutorFeeLib {
    export type FeeParamsForReadStruct = {
        priceFeed: PromiseOrValue<string>
        sender: PromiseOrValue<string>
        defaultMultiplierBps: PromiseOrValue<BigNumberish>
    }

    export type FeeParamsForReadStructOutput = [string, string, number] & {
        priceFeed: string
        sender: string
        defaultMultiplierBps: number
    }

    export type FeeParamsStruct = {
        priceFeed: PromiseOrValue<string>
        dstEid: PromiseOrValue<BigNumberish>
        sender: PromiseOrValue<string>
        calldataSize: PromiseOrValue<BigNumberish>
        defaultMultiplierBps: PromiseOrValue<BigNumberish>
    }

    export type FeeParamsStructOutput = [string, number, string, BigNumber, number] & {
        priceFeed: string
        dstEid: number
        sender: string
        calldataSize: BigNumber
        defaultMultiplierBps: number
    }
}

export declare namespace IExecutor {
    export type DstConfigStruct = {
        lzReceiveBaseGas: PromiseOrValue<BigNumberish>
        multiplierBps: PromiseOrValue<BigNumberish>
        floorMarginUSD: PromiseOrValue<BigNumberish>
        nativeCap: PromiseOrValue<BigNumberish>
        lzComposeBaseGas: PromiseOrValue<BigNumberish>
    }

    export type DstConfigStructOutput = [BigNumber, number, BigNumber, BigNumber, BigNumber] & {
        lzReceiveBaseGas: BigNumber
        multiplierBps: number
        floorMarginUSD: BigNumber
        nativeCap: BigNumber
        lzComposeBaseGas: BigNumber
    }
}

export interface IExecutorFeeLibInterface extends utils.Interface {
    functions: {
        'getFee((address,address,uint16),(uint64,uint16,uint128,uint128,uint64),bytes)': FunctionFragment
        'getFee((address,uint32,address,uint256,uint16),(uint64,uint16,uint128,uint128,uint64),bytes)': FunctionFragment
        'getFeeOnSend((address,uint32,address,uint256,uint16),(uint64,uint16,uint128,uint128,uint64),bytes)': FunctionFragment
        'getFeeOnSend((address,address,uint16),(uint64,uint16,uint128,uint128,uint64),bytes)': FunctionFragment
        'version()': FunctionFragment
    }

    getFunction(
        nameOrSignatureOrTopic:
            | 'getFee((address,address,uint16),(uint64,uint16,uint128,uint128,uint64),bytes)'
            | 'getFee((address,uint32,address,uint256,uint16),(uint64,uint16,uint128,uint128,uint64),bytes)'
            | 'getFeeOnSend((address,uint32,address,uint256,uint16),(uint64,uint16,uint128,uint128,uint64),bytes)'
            | 'getFeeOnSend((address,address,uint16),(uint64,uint16,uint128,uint128,uint64),bytes)'
            | 'version'
    ): FunctionFragment

    encodeFunctionData(
        functionFragment: 'getFee((address,address,uint16),(uint64,uint16,uint128,uint128,uint64),bytes)',
        values: [IExecutorFeeLib.FeeParamsForReadStruct, IExecutor.DstConfigStruct, PromiseOrValue<BytesLike>]
    ): string
    encodeFunctionData(
        functionFragment: 'getFee((address,uint32,address,uint256,uint16),(uint64,uint16,uint128,uint128,uint64),bytes)',
        values: [IExecutorFeeLib.FeeParamsStruct, IExecutor.DstConfigStruct, PromiseOrValue<BytesLike>]
    ): string
    encodeFunctionData(
        functionFragment: 'getFeeOnSend((address,uint32,address,uint256,uint16),(uint64,uint16,uint128,uint128,uint64),bytes)',
        values: [IExecutorFeeLib.FeeParamsStruct, IExecutor.DstConfigStruct, PromiseOrValue<BytesLike>]
    ): string
    encodeFunctionData(
        functionFragment: 'getFeeOnSend((address,address,uint16),(uint64,uint16,uint128,uint128,uint64),bytes)',
        values: [IExecutorFeeLib.FeeParamsForReadStruct, IExecutor.DstConfigStruct, PromiseOrValue<BytesLike>]
    ): string
    encodeFunctionData(functionFragment: 'version', values?: undefined): string

    decodeFunctionResult(
        functionFragment: 'getFee((address,address,uint16),(uint64,uint16,uint128,uint128,uint64),bytes)',
        data: BytesLike
    ): Result
    decodeFunctionResult(
        functionFragment: 'getFee((address,uint32,address,uint256,uint16),(uint64,uint16,uint128,uint128,uint64),bytes)',
        data: BytesLike
    ): Result
    decodeFunctionResult(
        functionFragment: 'getFeeOnSend((address,uint32,address,uint256,uint16),(uint64,uint16,uint128,uint128,uint64),bytes)',
        data: BytesLike
    ): Result
    decodeFunctionResult(
        functionFragment: 'getFeeOnSend((address,address,uint16),(uint64,uint16,uint128,uint128,uint64),bytes)',
        data: BytesLike
    ): Result
    decodeFunctionResult(functionFragment: 'version', data: BytesLike): Result

    events: {}
}

export interface IExecutorFeeLib extends BaseContract {
    connect(signerOrProvider: Signer | Provider | string): this
    attach(addressOrName: string): this
    deployed(): Promise<this>

    interface: IExecutorFeeLibInterface

    queryFilter<TEvent extends TypedEvent>(
        event: TypedEventFilter<TEvent>,
        fromBlockOrBlockhash?: string | number | undefined,
        toBlock?: string | number | undefined
    ): Promise<Array<TEvent>>

    listeners<TEvent extends TypedEvent>(eventFilter?: TypedEventFilter<TEvent>): Array<TypedListener<TEvent>>
    listeners(eventName?: string): Array<Listener>
    removeAllListeners<TEvent extends TypedEvent>(eventFilter: TypedEventFilter<TEvent>): this
    removeAllListeners(eventName?: string): this
    off: OnEvent<this>
    on: OnEvent<this>
    once: OnEvent<this>
    removeListener: OnEvent<this>

    functions: {
        'getFee((address,address,uint16),(uint64,uint16,uint128,uint128,uint64),bytes)'(
            _params: IExecutorFeeLib.FeeParamsForReadStruct,
            _dstConfig: IExecutor.DstConfigStruct,
            _options: PromiseOrValue<BytesLike>,
            overrides?: CallOverrides
        ): Promise<[BigNumber] & { fee: BigNumber }>

        'getFee((address,uint32,address,uint256,uint16),(uint64,uint16,uint128,uint128,uint64),bytes)'(
            _params: IExecutorFeeLib.FeeParamsStruct,
            _dstConfig: IExecutor.DstConfigStruct,
            _options: PromiseOrValue<BytesLike>,
            overrides?: CallOverrides
        ): Promise<[BigNumber] & { fee: BigNumber }>

        'getFeeOnSend((address,uint32,address,uint256,uint16),(uint64,uint16,uint128,uint128,uint64),bytes)'(
            _params: IExecutorFeeLib.FeeParamsStruct,
            _dstConfig: IExecutor.DstConfigStruct,
            _options: PromiseOrValue<BytesLike>,
            overrides?: Overrides & { from?: PromiseOrValue<string> }
        ): Promise<ContractTransaction>

        'getFeeOnSend((address,address,uint16),(uint64,uint16,uint128,uint128,uint64),bytes)'(
            _params: IExecutorFeeLib.FeeParamsForReadStruct,
            _dstConfig: IExecutor.DstConfigStruct,
            _options: PromiseOrValue<BytesLike>,
            overrides?: Overrides & { from?: PromiseOrValue<string> }
        ): Promise<ContractTransaction>

        version(overrides?: CallOverrides): Promise<[BigNumber, number] & { major: BigNumber; minor: number }>
    }

    'getFee((address,address,uint16),(uint64,uint16,uint128,uint128,uint64),bytes)'(
        _params: IExecutorFeeLib.FeeParamsForReadStruct,
        _dstConfig: IExecutor.DstConfigStruct,
        _options: PromiseOrValue<BytesLike>,
        overrides?: CallOverrides
    ): Promise<BigNumber>

    'getFee((address,uint32,address,uint256,uint16),(uint64,uint16,uint128,uint128,uint64),bytes)'(
        _params: IExecutorFeeLib.FeeParamsStruct,
        _dstConfig: IExecutor.DstConfigStruct,
        _options: PromiseOrValue<BytesLike>,
        overrides?: CallOverrides
    ): Promise<BigNumber>

    'getFeeOnSend((address,uint32,address,uint256,uint16),(uint64,uint16,uint128,uint128,uint64),bytes)'(
        _params: IExecutorFeeLib.FeeParamsStruct,
        _dstConfig: IExecutor.DstConfigStruct,
        _options: PromiseOrValue<BytesLike>,
        overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>

    'getFeeOnSend((address,address,uint16),(uint64,uint16,uint128,uint128,uint64),bytes)'(
        _params: IExecutorFeeLib.FeeParamsForReadStruct,
        _dstConfig: IExecutor.DstConfigStruct,
        _options: PromiseOrValue<BytesLike>,
        overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>

    version(overrides?: CallOverrides): Promise<[BigNumber, number] & { major: BigNumber; minor: number }>

    callStatic: {
        'getFee((address,address,uint16),(uint64,uint16,uint128,uint128,uint64),bytes)'(
            _params: IExecutorFeeLib.FeeParamsForReadStruct,
            _dstConfig: IExecutor.DstConfigStruct,
            _options: PromiseOrValue<BytesLike>,
            overrides?: CallOverrides
        ): Promise<BigNumber>

        'getFee((address,uint32,address,uint256,uint16),(uint64,uint16,uint128,uint128,uint64),bytes)'(
            _params: IExecutorFeeLib.FeeParamsStruct,
            _dstConfig: IExecutor.DstConfigStruct,
            _options: PromiseOrValue<BytesLike>,
            overrides?: CallOverrides
        ): Promise<BigNumber>

        'getFeeOnSend((address,uint32,address,uint256,uint16),(uint64,uint16,uint128,uint128,uint64),bytes)'(
            _params: IExecutorFeeLib.FeeParamsStruct,
            _dstConfig: IExecutor.DstConfigStruct,
            _options: PromiseOrValue<BytesLike>,
            overrides?: CallOverrides
        ): Promise<BigNumber>

        'getFeeOnSend((address,address,uint16),(uint64,uint16,uint128,uint128,uint64),bytes)'(
            _params: IExecutorFeeLib.FeeParamsForReadStruct,
            _dstConfig: IExecutor.DstConfigStruct,
            _options: PromiseOrValue<BytesLike>,
            overrides?: CallOverrides
        ): Promise<BigNumber>

        version(overrides?: CallOverrides): Promise<[BigNumber, number] & { major: BigNumber; minor: number }>
    }

    filters: {}

    estimateGas: {
        'getFee((address,address,uint16),(uint64,uint16,uint128,uint128,uint64),bytes)'(
            _params: IExecutorFeeLib.FeeParamsForReadStruct,
            _dstConfig: IExecutor.DstConfigStruct,
            _options: PromiseOrValue<BytesLike>,
            overrides?: CallOverrides
        ): Promise<BigNumber>

        'getFee((address,uint32,address,uint256,uint16),(uint64,uint16,uint128,uint128,uint64),bytes)'(
            _params: IExecutorFeeLib.FeeParamsStruct,
            _dstConfig: IExecutor.DstConfigStruct,
            _options: PromiseOrValue<BytesLike>,
            overrides?: CallOverrides
        ): Promise<BigNumber>

        'getFeeOnSend((address,uint32,address,uint256,uint16),(uint64,uint16,uint128,uint128,uint64),bytes)'(
            _params: IExecutorFeeLib.FeeParamsStruct,
            _dstConfig: IExecutor.DstConfigStruct,
            _options: PromiseOrValue<BytesLike>,
            overrides?: Overrides & { from?: PromiseOrValue<string> }
        ): Promise<BigNumber>

        'getFeeOnSend((address,address,uint16),(uint64,uint16,uint128,uint128,uint64),bytes)'(
            _params: IExecutorFeeLib.FeeParamsForReadStruct,
            _dstConfig: IExecutor.DstConfigStruct,
            _options: PromiseOrValue<BytesLike>,
            overrides?: Overrides & { from?: PromiseOrValue<string> }
        ): Promise<BigNumber>

        version(overrides?: CallOverrides): Promise<BigNumber>
    }

    populateTransaction: {
        'getFee((address,address,uint16),(uint64,uint16,uint128,uint128,uint64),bytes)'(
            _params: IExecutorFeeLib.FeeParamsForReadStruct,
            _dstConfig: IExecutor.DstConfigStruct,
            _options: PromiseOrValue<BytesLike>,
            overrides?: CallOverrides
        ): Promise<PopulatedTransaction>

        'getFee((address,uint32,address,uint256,uint16),(uint64,uint16,uint128,uint128,uint64),bytes)'(
            _params: IExecutorFeeLib.FeeParamsStruct,
            _dstConfig: IExecutor.DstConfigStruct,
            _options: PromiseOrValue<BytesLike>,
            overrides?: CallOverrides
        ): Promise<PopulatedTransaction>

        'getFeeOnSend((address,uint32,address,uint256,uint16),(uint64,uint16,uint128,uint128,uint64),bytes)'(
            _params: IExecutorFeeLib.FeeParamsStruct,
            _dstConfig: IExecutor.DstConfigStruct,
            _options: PromiseOrValue<BytesLike>,
            overrides?: Overrides & { from?: PromiseOrValue<string> }
        ): Promise<PopulatedTransaction>

        'getFeeOnSend((address,address,uint16),(uint64,uint16,uint128,uint128,uint64),bytes)'(
            _params: IExecutorFeeLib.FeeParamsForReadStruct,
            _dstConfig: IExecutor.DstConfigStruct,
            _options: PromiseOrValue<BytesLike>,
            overrides?: Overrides & { from?: PromiseOrValue<string> }
        ): Promise<PopulatedTransaction>

        version(overrides?: CallOverrides): Promise<PopulatedTransaction>
    }
}
