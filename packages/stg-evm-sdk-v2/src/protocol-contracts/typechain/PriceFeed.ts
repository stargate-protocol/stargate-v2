/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
    BaseContract,
    BigNumber,
    BigNumberish,
    BytesLike,
    CallOverrides,
    ContractTransaction,
    Overrides,
    PayableOverrides,
    PopulatedTransaction,
    Signer,
    utils,
} from 'ethers'
import type { FunctionFragment, Result, EventFragment } from '@ethersproject/abi'
import type { Listener, Provider } from '@ethersproject/providers'
import type { TypedEventFilter, TypedEvent, TypedListener, OnEvent, PromiseOrValue } from './common'

export type SetEidToModelTypeParamStruct = {
    dstEid: PromiseOrValue<BigNumberish>
    modelType: PromiseOrValue<BigNumberish>
}

export type SetEidToModelTypeParamStructOutput = [number, number] & {
    dstEid: number
    modelType: number
}

export declare namespace ILayerZeroPriceFeed {
    export type ArbitrumPriceExtStruct = {
        gasPerL2Tx: PromiseOrValue<BigNumberish>
        gasPerL1CallDataByte: PromiseOrValue<BigNumberish>
    }

    export type ArbitrumPriceExtStructOutput = [BigNumber, number] & {
        gasPerL2Tx: BigNumber
        gasPerL1CallDataByte: number
    }

    export type PriceStruct = {
        priceRatio: PromiseOrValue<BigNumberish>
        gasPriceInUnit: PromiseOrValue<BigNumberish>
        gasPerByte: PromiseOrValue<BigNumberish>
    }

    export type PriceStructOutput = [BigNumber, BigNumber, number] & {
        priceRatio: BigNumber
        gasPriceInUnit: BigNumber
        gasPerByte: number
    }

    export type UpdatePriceStruct = {
        eid: PromiseOrValue<BigNumberish>
        price: ILayerZeroPriceFeed.PriceStruct
    }

    export type UpdatePriceStructOutput = [number, ILayerZeroPriceFeed.PriceStructOutput] & {
        eid: number
        price: ILayerZeroPriceFeed.PriceStructOutput
    }

    export type UpdatePriceExtStruct = {
        eid: PromiseOrValue<BigNumberish>
        price: ILayerZeroPriceFeed.PriceStruct
        extend: ILayerZeroPriceFeed.ArbitrumPriceExtStruct
    }

    export type UpdatePriceExtStructOutput = [
        number,
        ILayerZeroPriceFeed.PriceStructOutput,
        ILayerZeroPriceFeed.ArbitrumPriceExtStructOutput,
    ] & {
        eid: number
        price: ILayerZeroPriceFeed.PriceStructOutput
        extend: ILayerZeroPriceFeed.ArbitrumPriceExtStructOutput
    }
}

export interface PriceFeedInterface extends utils.Interface {
    functions: {
        'ARBITRUM_COMPRESSION_PERCENT()': FunctionFragment
        'arbitrumPriceExt()': FunctionFragment
        'eidToModelType(uint32)': FunctionFragment
        'endpoint()': FunctionFragment
        'estimateFeeByChain(uint16,uint256,uint256)': FunctionFragment
        'estimateFeeByEid(uint32,uint256,uint256)': FunctionFragment
        'estimateFeeOnSend(uint32,uint256,uint256)': FunctionFragment
        'getFee(uint32,uint256,uint256)': FunctionFragment
        'getPrice(uint32)': FunctionFragment
        'getPrice(uint16)': FunctionFragment
        'getPriceRatioDenominator()': FunctionFragment
        'initialize(address)': FunctionFragment
        'nativeTokenPriceUSD()': FunctionFragment
        'owner()': FunctionFragment
        'priceUpdater(address)': FunctionFragment
        'renounceOwnership()': FunctionFragment
        'setArbitrumCompressionPercent(uint128)': FunctionFragment
        'setEidToModelType((uint32,uint8)[])': FunctionFragment
        'setEndpoint(address)': FunctionFragment
        'setNativeTokenPriceUSD(uint128)': FunctionFragment
        'setPrice((uint32,(uint128,uint64,uint32))[])': FunctionFragment
        'setPriceForArbitrum((uint32,(uint128,uint64,uint32),(uint64,uint32)))': FunctionFragment
        'setPriceRatioDenominator(uint128)': FunctionFragment
        'setPriceUpdater(address,bool)': FunctionFragment
        'transferOwnership(address)': FunctionFragment
        'withdrawFee(address,uint256)': FunctionFragment
    }

    getFunction(
        nameOrSignatureOrTopic:
            | 'ARBITRUM_COMPRESSION_PERCENT'
            | 'arbitrumPriceExt'
            | 'eidToModelType'
            | 'endpoint'
            | 'estimateFeeByChain'
            | 'estimateFeeByEid'
            | 'estimateFeeOnSend'
            | 'getFee'
            | 'getPrice(uint32)'
            | 'getPrice(uint16)'
            | 'getPriceRatioDenominator'
            | 'initialize'
            | 'nativeTokenPriceUSD'
            | 'owner'
            | 'priceUpdater'
            | 'renounceOwnership'
            | 'setArbitrumCompressionPercent'
            | 'setEidToModelType'
            | 'setEndpoint'
            | 'setNativeTokenPriceUSD'
            | 'setPrice'
            | 'setPriceForArbitrum'
            | 'setPriceRatioDenominator'
            | 'setPriceUpdater'
            | 'transferOwnership'
            | 'withdrawFee'
    ): FunctionFragment

    encodeFunctionData(functionFragment: 'ARBITRUM_COMPRESSION_PERCENT', values?: undefined): string
    encodeFunctionData(functionFragment: 'arbitrumPriceExt', values?: undefined): string
    encodeFunctionData(functionFragment: 'eidToModelType', values: [PromiseOrValue<BigNumberish>]): string
    encodeFunctionData(functionFragment: 'endpoint', values?: undefined): string
    encodeFunctionData(
        functionFragment: 'estimateFeeByChain',
        values: [PromiseOrValue<BigNumberish>, PromiseOrValue<BigNumberish>, PromiseOrValue<BigNumberish>]
    ): string
    encodeFunctionData(
        functionFragment: 'estimateFeeByEid',
        values: [PromiseOrValue<BigNumberish>, PromiseOrValue<BigNumberish>, PromiseOrValue<BigNumberish>]
    ): string
    encodeFunctionData(
        functionFragment: 'estimateFeeOnSend',
        values: [PromiseOrValue<BigNumberish>, PromiseOrValue<BigNumberish>, PromiseOrValue<BigNumberish>]
    ): string
    encodeFunctionData(
        functionFragment: 'getFee',
        values: [PromiseOrValue<BigNumberish>, PromiseOrValue<BigNumberish>, PromiseOrValue<BigNumberish>]
    ): string
    encodeFunctionData(functionFragment: 'getPrice(uint32)', values: [PromiseOrValue<BigNumberish>]): string
    encodeFunctionData(functionFragment: 'getPrice(uint16)', values: [PromiseOrValue<BigNumberish>]): string
    encodeFunctionData(functionFragment: 'getPriceRatioDenominator', values?: undefined): string
    encodeFunctionData(functionFragment: 'initialize', values: [PromiseOrValue<string>]): string
    encodeFunctionData(functionFragment: 'nativeTokenPriceUSD', values?: undefined): string
    encodeFunctionData(functionFragment: 'owner', values?: undefined): string
    encodeFunctionData(functionFragment: 'priceUpdater', values: [PromiseOrValue<string>]): string
    encodeFunctionData(functionFragment: 'renounceOwnership', values?: undefined): string
    encodeFunctionData(
        functionFragment: 'setArbitrumCompressionPercent',
        values: [PromiseOrValue<BigNumberish>]
    ): string
    encodeFunctionData(functionFragment: 'setEidToModelType', values: [SetEidToModelTypeParamStruct[]]): string
    encodeFunctionData(functionFragment: 'setEndpoint', values: [PromiseOrValue<string>]): string
    encodeFunctionData(functionFragment: 'setNativeTokenPriceUSD', values: [PromiseOrValue<BigNumberish>]): string
    encodeFunctionData(functionFragment: 'setPrice', values: [ILayerZeroPriceFeed.UpdatePriceStruct[]]): string
    encodeFunctionData(
        functionFragment: 'setPriceForArbitrum',
        values: [ILayerZeroPriceFeed.UpdatePriceExtStruct]
    ): string
    encodeFunctionData(functionFragment: 'setPriceRatioDenominator', values: [PromiseOrValue<BigNumberish>]): string
    encodeFunctionData(
        functionFragment: 'setPriceUpdater',
        values: [PromiseOrValue<string>, PromiseOrValue<boolean>]
    ): string
    encodeFunctionData(functionFragment: 'transferOwnership', values: [PromiseOrValue<string>]): string
    encodeFunctionData(
        functionFragment: 'withdrawFee',
        values: [PromiseOrValue<string>, PromiseOrValue<BigNumberish>]
    ): string

    decodeFunctionResult(functionFragment: 'ARBITRUM_COMPRESSION_PERCENT', data: BytesLike): Result
    decodeFunctionResult(functionFragment: 'arbitrumPriceExt', data: BytesLike): Result
    decodeFunctionResult(functionFragment: 'eidToModelType', data: BytesLike): Result
    decodeFunctionResult(functionFragment: 'endpoint', data: BytesLike): Result
    decodeFunctionResult(functionFragment: 'estimateFeeByChain', data: BytesLike): Result
    decodeFunctionResult(functionFragment: 'estimateFeeByEid', data: BytesLike): Result
    decodeFunctionResult(functionFragment: 'estimateFeeOnSend', data: BytesLike): Result
    decodeFunctionResult(functionFragment: 'getFee', data: BytesLike): Result
    decodeFunctionResult(functionFragment: 'getPrice(uint32)', data: BytesLike): Result
    decodeFunctionResult(functionFragment: 'getPrice(uint16)', data: BytesLike): Result
    decodeFunctionResult(functionFragment: 'getPriceRatioDenominator', data: BytesLike): Result
    decodeFunctionResult(functionFragment: 'initialize', data: BytesLike): Result
    decodeFunctionResult(functionFragment: 'nativeTokenPriceUSD', data: BytesLike): Result
    decodeFunctionResult(functionFragment: 'owner', data: BytesLike): Result
    decodeFunctionResult(functionFragment: 'priceUpdater', data: BytesLike): Result
    decodeFunctionResult(functionFragment: 'renounceOwnership', data: BytesLike): Result
    decodeFunctionResult(functionFragment: 'setArbitrumCompressionPercent', data: BytesLike): Result
    decodeFunctionResult(functionFragment: 'setEidToModelType', data: BytesLike): Result
    decodeFunctionResult(functionFragment: 'setEndpoint', data: BytesLike): Result
    decodeFunctionResult(functionFragment: 'setNativeTokenPriceUSD', data: BytesLike): Result
    decodeFunctionResult(functionFragment: 'setPrice', data: BytesLike): Result
    decodeFunctionResult(functionFragment: 'setPriceForArbitrum', data: BytesLike): Result
    decodeFunctionResult(functionFragment: 'setPriceRatioDenominator', data: BytesLike): Result
    decodeFunctionResult(functionFragment: 'setPriceUpdater', data: BytesLike): Result
    decodeFunctionResult(functionFragment: 'transferOwnership', data: BytesLike): Result
    decodeFunctionResult(functionFragment: 'withdrawFee', data: BytesLike): Result

    events: {
        'Initialized(uint8)': EventFragment
        'OwnershipTransferred(address,address)': EventFragment
    }

    getEvent(nameOrSignatureOrTopic: 'Initialized'): EventFragment
    getEvent(nameOrSignatureOrTopic: 'OwnershipTransferred'): EventFragment
}

export interface InitializedEventObject {
    version: number
}
export type InitializedEvent = TypedEvent<[number], InitializedEventObject>

export type InitializedEventFilter = TypedEventFilter<InitializedEvent>

export interface OwnershipTransferredEventObject {
    previousOwner: string
    newOwner: string
}
export type OwnershipTransferredEvent = TypedEvent<[string, string], OwnershipTransferredEventObject>

export type OwnershipTransferredEventFilter = TypedEventFilter<OwnershipTransferredEvent>

export interface PriceFeed extends BaseContract {
    connect(signerOrProvider: Signer | Provider | string): this
    attach(addressOrName: string): this
    deployed(): Promise<this>

    interface: PriceFeedInterface

    queryFilter<TEvent extends TypedEvent>(
        event: TypedEventFilter<TEvent>,
        fromBlockOrBlockhash?: string | number | undefined,
        toBlock?: string | number | undefined
    ): Promise<Array<TEvent>>

    listeners<TEvent extends TypedEvent>(eventFilter?: TypedEventFilter<TEvent>): Array<TypedListener<TEvent>>
    listeners(eventName?: string): Array<Listener>
    removeAllListeners<TEvent extends TypedEvent>(eventFilter: TypedEventFilter<TEvent>): this
    removeAllListeners(eventName?: string): this
    off: OnEvent<this>
    on: OnEvent<this>
    once: OnEvent<this>
    removeListener: OnEvent<this>

    functions: {
        ARBITRUM_COMPRESSION_PERCENT(overrides?: CallOverrides): Promise<[BigNumber]>

        arbitrumPriceExt(overrides?: CallOverrides): Promise<[ILayerZeroPriceFeed.ArbitrumPriceExtStructOutput]>

        eidToModelType(arg0: PromiseOrValue<BigNumberish>, overrides?: CallOverrides): Promise<[number]>

        endpoint(overrides?: CallOverrides): Promise<[string]>

        estimateFeeByChain(
            _dstEid: PromiseOrValue<BigNumberish>,
            _callDataSize: PromiseOrValue<BigNumberish>,
            _gas: PromiseOrValue<BigNumberish>,
            overrides?: CallOverrides
        ): Promise<[BigNumber, BigNumber] & { fee: BigNumber; priceRatio: BigNumber }>

        estimateFeeByEid(
            _dstEid: PromiseOrValue<BigNumberish>,
            _callDataSize: PromiseOrValue<BigNumberish>,
            _gas: PromiseOrValue<BigNumberish>,
            overrides?: CallOverrides
        ): Promise<[BigNumber, BigNumber, BigNumber, BigNumber]>

        estimateFeeOnSend(
            _dstEid: PromiseOrValue<BigNumberish>,
            _callDataSize: PromiseOrValue<BigNumberish>,
            _gas: PromiseOrValue<BigNumberish>,
            overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
        ): Promise<ContractTransaction>

        getFee(
            arg0: PromiseOrValue<BigNumberish>,
            arg1: PromiseOrValue<BigNumberish>,
            arg2: PromiseOrValue<BigNumberish>,
            overrides?: CallOverrides
        ): Promise<[BigNumber]>

        'getPrice(uint32)'(
            _dstEid: PromiseOrValue<BigNumberish>,
            overrides?: CallOverrides
        ): Promise<
            [ILayerZeroPriceFeed.PriceStructOutput] & {
                price: ILayerZeroPriceFeed.PriceStructOutput
            }
        >

        'getPrice(uint16)'(
            _dstEid: PromiseOrValue<BigNumberish>,
            overrides?: CallOverrides
        ): Promise<
            [ILayerZeroPriceFeed.PriceStructOutput] & {
                price: ILayerZeroPriceFeed.PriceStructOutput
            }
        >

        getPriceRatioDenominator(overrides?: CallOverrides): Promise<[BigNumber]>

        initialize(
            _priceUpdater: PromiseOrValue<string>,
            overrides?: Overrides & { from?: PromiseOrValue<string> }
        ): Promise<ContractTransaction>

        nativeTokenPriceUSD(overrides?: CallOverrides): Promise<[BigNumber]>

        owner(overrides?: CallOverrides): Promise<[string]>

        priceUpdater(
            updater: PromiseOrValue<string>,
            overrides?: CallOverrides
        ): Promise<[boolean] & { active: boolean }>

        renounceOwnership(overrides?: Overrides & { from?: PromiseOrValue<string> }): Promise<ContractTransaction>

        setArbitrumCompressionPercent(
            _compressionPercent: PromiseOrValue<BigNumberish>,
            overrides?: Overrides & { from?: PromiseOrValue<string> }
        ): Promise<ContractTransaction>

        setEidToModelType(
            _params: SetEidToModelTypeParamStruct[],
            overrides?: Overrides & { from?: PromiseOrValue<string> }
        ): Promise<ContractTransaction>

        setEndpoint(
            _endpoint: PromiseOrValue<string>,
            overrides?: Overrides & { from?: PromiseOrValue<string> }
        ): Promise<ContractTransaction>

        setNativeTokenPriceUSD(
            _nativeTokenPriceUSD: PromiseOrValue<BigNumberish>,
            overrides?: Overrides & { from?: PromiseOrValue<string> }
        ): Promise<ContractTransaction>

        setPrice(
            _price: ILayerZeroPriceFeed.UpdatePriceStruct[],
            overrides?: Overrides & { from?: PromiseOrValue<string> }
        ): Promise<ContractTransaction>

        setPriceForArbitrum(
            _update: ILayerZeroPriceFeed.UpdatePriceExtStruct,
            overrides?: Overrides & { from?: PromiseOrValue<string> }
        ): Promise<ContractTransaction>

        setPriceRatioDenominator(
            _denominator: PromiseOrValue<BigNumberish>,
            overrides?: Overrides & { from?: PromiseOrValue<string> }
        ): Promise<ContractTransaction>

        setPriceUpdater(
            _addr: PromiseOrValue<string>,
            _active: PromiseOrValue<boolean>,
            overrides?: Overrides & { from?: PromiseOrValue<string> }
        ): Promise<ContractTransaction>

        transferOwnership(
            newOwner: PromiseOrValue<string>,
            overrides?: Overrides & { from?: PromiseOrValue<string> }
        ): Promise<ContractTransaction>

        withdrawFee(
            _to: PromiseOrValue<string>,
            _amount: PromiseOrValue<BigNumberish>,
            overrides?: Overrides & { from?: PromiseOrValue<string> }
        ): Promise<ContractTransaction>
    }

    ARBITRUM_COMPRESSION_PERCENT(overrides?: CallOverrides): Promise<BigNumber>

    arbitrumPriceExt(overrides?: CallOverrides): Promise<ILayerZeroPriceFeed.ArbitrumPriceExtStructOutput>

    eidToModelType(arg0: PromiseOrValue<BigNumberish>, overrides?: CallOverrides): Promise<number>

    endpoint(overrides?: CallOverrides): Promise<string>

    estimateFeeByChain(
        _dstEid: PromiseOrValue<BigNumberish>,
        _callDataSize: PromiseOrValue<BigNumberish>,
        _gas: PromiseOrValue<BigNumberish>,
        overrides?: CallOverrides
    ): Promise<[BigNumber, BigNumber] & { fee: BigNumber; priceRatio: BigNumber }>

    estimateFeeByEid(
        _dstEid: PromiseOrValue<BigNumberish>,
        _callDataSize: PromiseOrValue<BigNumberish>,
        _gas: PromiseOrValue<BigNumberish>,
        overrides?: CallOverrides
    ): Promise<[BigNumber, BigNumber, BigNumber, BigNumber]>

    estimateFeeOnSend(
        _dstEid: PromiseOrValue<BigNumberish>,
        _callDataSize: PromiseOrValue<BigNumberish>,
        _gas: PromiseOrValue<BigNumberish>,
        overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>

    getFee(
        arg0: PromiseOrValue<BigNumberish>,
        arg1: PromiseOrValue<BigNumberish>,
        arg2: PromiseOrValue<BigNumberish>,
        overrides?: CallOverrides
    ): Promise<BigNumber>

    'getPrice(uint32)'(
        _dstEid: PromiseOrValue<BigNumberish>,
        overrides?: CallOverrides
    ): Promise<ILayerZeroPriceFeed.PriceStructOutput>

    'getPrice(uint16)'(
        _dstEid: PromiseOrValue<BigNumberish>,
        overrides?: CallOverrides
    ): Promise<ILayerZeroPriceFeed.PriceStructOutput>

    getPriceRatioDenominator(overrides?: CallOverrides): Promise<BigNumber>

    initialize(
        _priceUpdater: PromiseOrValue<string>,
        overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>

    nativeTokenPriceUSD(overrides?: CallOverrides): Promise<BigNumber>

    owner(overrides?: CallOverrides): Promise<string>

    priceUpdater(updater: PromiseOrValue<string>, overrides?: CallOverrides): Promise<boolean>

    renounceOwnership(overrides?: Overrides & { from?: PromiseOrValue<string> }): Promise<ContractTransaction>

    setArbitrumCompressionPercent(
        _compressionPercent: PromiseOrValue<BigNumberish>,
        overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>

    setEidToModelType(
        _params: SetEidToModelTypeParamStruct[],
        overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>

    setEndpoint(
        _endpoint: PromiseOrValue<string>,
        overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>

    setNativeTokenPriceUSD(
        _nativeTokenPriceUSD: PromiseOrValue<BigNumberish>,
        overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>

    setPrice(
        _price: ILayerZeroPriceFeed.UpdatePriceStruct[],
        overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>

    setPriceForArbitrum(
        _update: ILayerZeroPriceFeed.UpdatePriceExtStruct,
        overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>

    setPriceRatioDenominator(
        _denominator: PromiseOrValue<BigNumberish>,
        overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>

    setPriceUpdater(
        _addr: PromiseOrValue<string>,
        _active: PromiseOrValue<boolean>,
        overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>

    transferOwnership(
        newOwner: PromiseOrValue<string>,
        overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>

    withdrawFee(
        _to: PromiseOrValue<string>,
        _amount: PromiseOrValue<BigNumberish>,
        overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>

    callStatic: {
        ARBITRUM_COMPRESSION_PERCENT(overrides?: CallOverrides): Promise<BigNumber>

        arbitrumPriceExt(overrides?: CallOverrides): Promise<ILayerZeroPriceFeed.ArbitrumPriceExtStructOutput>

        eidToModelType(arg0: PromiseOrValue<BigNumberish>, overrides?: CallOverrides): Promise<number>

        endpoint(overrides?: CallOverrides): Promise<string>

        estimateFeeByChain(
            _dstEid: PromiseOrValue<BigNumberish>,
            _callDataSize: PromiseOrValue<BigNumberish>,
            _gas: PromiseOrValue<BigNumberish>,
            overrides?: CallOverrides
        ): Promise<[BigNumber, BigNumber] & { fee: BigNumber; priceRatio: BigNumber }>

        estimateFeeByEid(
            _dstEid: PromiseOrValue<BigNumberish>,
            _callDataSize: PromiseOrValue<BigNumberish>,
            _gas: PromiseOrValue<BigNumberish>,
            overrides?: CallOverrides
        ): Promise<[BigNumber, BigNumber, BigNumber, BigNumber]>

        estimateFeeOnSend(
            _dstEid: PromiseOrValue<BigNumberish>,
            _callDataSize: PromiseOrValue<BigNumberish>,
            _gas: PromiseOrValue<BigNumberish>,
            overrides?: CallOverrides
        ): Promise<[BigNumber, BigNumber, BigNumber, BigNumber]>

        getFee(
            arg0: PromiseOrValue<BigNumberish>,
            arg1: PromiseOrValue<BigNumberish>,
            arg2: PromiseOrValue<BigNumberish>,
            overrides?: CallOverrides
        ): Promise<BigNumber>

        'getPrice(uint32)'(
            _dstEid: PromiseOrValue<BigNumberish>,
            overrides?: CallOverrides
        ): Promise<ILayerZeroPriceFeed.PriceStructOutput>

        'getPrice(uint16)'(
            _dstEid: PromiseOrValue<BigNumberish>,
            overrides?: CallOverrides
        ): Promise<ILayerZeroPriceFeed.PriceStructOutput>

        getPriceRatioDenominator(overrides?: CallOverrides): Promise<BigNumber>

        initialize(_priceUpdater: PromiseOrValue<string>, overrides?: CallOverrides): Promise<void>

        nativeTokenPriceUSD(overrides?: CallOverrides): Promise<BigNumber>

        owner(overrides?: CallOverrides): Promise<string>

        priceUpdater(updater: PromiseOrValue<string>, overrides?: CallOverrides): Promise<boolean>

        renounceOwnership(overrides?: CallOverrides): Promise<void>

        setArbitrumCompressionPercent(
            _compressionPercent: PromiseOrValue<BigNumberish>,
            overrides?: CallOverrides
        ): Promise<void>

        setEidToModelType(_params: SetEidToModelTypeParamStruct[], overrides?: CallOverrides): Promise<void>

        setEndpoint(_endpoint: PromiseOrValue<string>, overrides?: CallOverrides): Promise<void>

        setNativeTokenPriceUSD(
            _nativeTokenPriceUSD: PromiseOrValue<BigNumberish>,
            overrides?: CallOverrides
        ): Promise<void>

        setPrice(_price: ILayerZeroPriceFeed.UpdatePriceStruct[], overrides?: CallOverrides): Promise<void>

        setPriceForArbitrum(_update: ILayerZeroPriceFeed.UpdatePriceExtStruct, overrides?: CallOverrides): Promise<void>

        setPriceRatioDenominator(_denominator: PromiseOrValue<BigNumberish>, overrides?: CallOverrides): Promise<void>

        setPriceUpdater(
            _addr: PromiseOrValue<string>,
            _active: PromiseOrValue<boolean>,
            overrides?: CallOverrides
        ): Promise<void>

        transferOwnership(newOwner: PromiseOrValue<string>, overrides?: CallOverrides): Promise<void>

        withdrawFee(
            _to: PromiseOrValue<string>,
            _amount: PromiseOrValue<BigNumberish>,
            overrides?: CallOverrides
        ): Promise<void>
    }

    filters: {
        'Initialized(uint8)'(version?: null): InitializedEventFilter
        Initialized(version?: null): InitializedEventFilter

        'OwnershipTransferred(address,address)'(
            previousOwner?: PromiseOrValue<string> | null,
            newOwner?: PromiseOrValue<string> | null
        ): OwnershipTransferredEventFilter
        OwnershipTransferred(
            previousOwner?: PromiseOrValue<string> | null,
            newOwner?: PromiseOrValue<string> | null
        ): OwnershipTransferredEventFilter
    }

    estimateGas: {
        ARBITRUM_COMPRESSION_PERCENT(overrides?: CallOverrides): Promise<BigNumber>

        arbitrumPriceExt(overrides?: CallOverrides): Promise<BigNumber>

        eidToModelType(arg0: PromiseOrValue<BigNumberish>, overrides?: CallOverrides): Promise<BigNumber>

        endpoint(overrides?: CallOverrides): Promise<BigNumber>

        estimateFeeByChain(
            _dstEid: PromiseOrValue<BigNumberish>,
            _callDataSize: PromiseOrValue<BigNumberish>,
            _gas: PromiseOrValue<BigNumberish>,
            overrides?: CallOverrides
        ): Promise<BigNumber>

        estimateFeeByEid(
            _dstEid: PromiseOrValue<BigNumberish>,
            _callDataSize: PromiseOrValue<BigNumberish>,
            _gas: PromiseOrValue<BigNumberish>,
            overrides?: CallOverrides
        ): Promise<BigNumber>

        estimateFeeOnSend(
            _dstEid: PromiseOrValue<BigNumberish>,
            _callDataSize: PromiseOrValue<BigNumberish>,
            _gas: PromiseOrValue<BigNumberish>,
            overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
        ): Promise<BigNumber>

        getFee(
            arg0: PromiseOrValue<BigNumberish>,
            arg1: PromiseOrValue<BigNumberish>,
            arg2: PromiseOrValue<BigNumberish>,
            overrides?: CallOverrides
        ): Promise<BigNumber>

        'getPrice(uint32)'(_dstEid: PromiseOrValue<BigNumberish>, overrides?: CallOverrides): Promise<BigNumber>

        'getPrice(uint16)'(_dstEid: PromiseOrValue<BigNumberish>, overrides?: CallOverrides): Promise<BigNumber>

        getPriceRatioDenominator(overrides?: CallOverrides): Promise<BigNumber>

        initialize(
            _priceUpdater: PromiseOrValue<string>,
            overrides?: Overrides & { from?: PromiseOrValue<string> }
        ): Promise<BigNumber>

        nativeTokenPriceUSD(overrides?: CallOverrides): Promise<BigNumber>

        owner(overrides?: CallOverrides): Promise<BigNumber>

        priceUpdater(updater: PromiseOrValue<string>, overrides?: CallOverrides): Promise<BigNumber>

        renounceOwnership(overrides?: Overrides & { from?: PromiseOrValue<string> }): Promise<BigNumber>

        setArbitrumCompressionPercent(
            _compressionPercent: PromiseOrValue<BigNumberish>,
            overrides?: Overrides & { from?: PromiseOrValue<string> }
        ): Promise<BigNumber>

        setEidToModelType(
            _params: SetEidToModelTypeParamStruct[],
            overrides?: Overrides & { from?: PromiseOrValue<string> }
        ): Promise<BigNumber>

        setEndpoint(
            _endpoint: PromiseOrValue<string>,
            overrides?: Overrides & { from?: PromiseOrValue<string> }
        ): Promise<BigNumber>

        setNativeTokenPriceUSD(
            _nativeTokenPriceUSD: PromiseOrValue<BigNumberish>,
            overrides?: Overrides & { from?: PromiseOrValue<string> }
        ): Promise<BigNumber>

        setPrice(
            _price: ILayerZeroPriceFeed.UpdatePriceStruct[],
            overrides?: Overrides & { from?: PromiseOrValue<string> }
        ): Promise<BigNumber>

        setPriceForArbitrum(
            _update: ILayerZeroPriceFeed.UpdatePriceExtStruct,
            overrides?: Overrides & { from?: PromiseOrValue<string> }
        ): Promise<BigNumber>

        setPriceRatioDenominator(
            _denominator: PromiseOrValue<BigNumberish>,
            overrides?: Overrides & { from?: PromiseOrValue<string> }
        ): Promise<BigNumber>

        setPriceUpdater(
            _addr: PromiseOrValue<string>,
            _active: PromiseOrValue<boolean>,
            overrides?: Overrides & { from?: PromiseOrValue<string> }
        ): Promise<BigNumber>

        transferOwnership(
            newOwner: PromiseOrValue<string>,
            overrides?: Overrides & { from?: PromiseOrValue<string> }
        ): Promise<BigNumber>

        withdrawFee(
            _to: PromiseOrValue<string>,
            _amount: PromiseOrValue<BigNumberish>,
            overrides?: Overrides & { from?: PromiseOrValue<string> }
        ): Promise<BigNumber>
    }

    populateTransaction: {
        ARBITRUM_COMPRESSION_PERCENT(overrides?: CallOverrides): Promise<PopulatedTransaction>

        arbitrumPriceExt(overrides?: CallOverrides): Promise<PopulatedTransaction>

        eidToModelType(arg0: PromiseOrValue<BigNumberish>, overrides?: CallOverrides): Promise<PopulatedTransaction>

        endpoint(overrides?: CallOverrides): Promise<PopulatedTransaction>

        estimateFeeByChain(
            _dstEid: PromiseOrValue<BigNumberish>,
            _callDataSize: PromiseOrValue<BigNumberish>,
            _gas: PromiseOrValue<BigNumberish>,
            overrides?: CallOverrides
        ): Promise<PopulatedTransaction>

        estimateFeeByEid(
            _dstEid: PromiseOrValue<BigNumberish>,
            _callDataSize: PromiseOrValue<BigNumberish>,
            _gas: PromiseOrValue<BigNumberish>,
            overrides?: CallOverrides
        ): Promise<PopulatedTransaction>

        estimateFeeOnSend(
            _dstEid: PromiseOrValue<BigNumberish>,
            _callDataSize: PromiseOrValue<BigNumberish>,
            _gas: PromiseOrValue<BigNumberish>,
            overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
        ): Promise<PopulatedTransaction>

        getFee(
            arg0: PromiseOrValue<BigNumberish>,
            arg1: PromiseOrValue<BigNumberish>,
            arg2: PromiseOrValue<BigNumberish>,
            overrides?: CallOverrides
        ): Promise<PopulatedTransaction>

        'getPrice(uint32)'(
            _dstEid: PromiseOrValue<BigNumberish>,
            overrides?: CallOverrides
        ): Promise<PopulatedTransaction>

        'getPrice(uint16)'(
            _dstEid: PromiseOrValue<BigNumberish>,
            overrides?: CallOverrides
        ): Promise<PopulatedTransaction>

        getPriceRatioDenominator(overrides?: CallOverrides): Promise<PopulatedTransaction>

        initialize(
            _priceUpdater: PromiseOrValue<string>,
            overrides?: Overrides & { from?: PromiseOrValue<string> }
        ): Promise<PopulatedTransaction>

        nativeTokenPriceUSD(overrides?: CallOverrides): Promise<PopulatedTransaction>

        owner(overrides?: CallOverrides): Promise<PopulatedTransaction>

        priceUpdater(updater: PromiseOrValue<string>, overrides?: CallOverrides): Promise<PopulatedTransaction>

        renounceOwnership(overrides?: Overrides & { from?: PromiseOrValue<string> }): Promise<PopulatedTransaction>

        setArbitrumCompressionPercent(
            _compressionPercent: PromiseOrValue<BigNumberish>,
            overrides?: Overrides & { from?: PromiseOrValue<string> }
        ): Promise<PopulatedTransaction>

        setEidToModelType(
            _params: SetEidToModelTypeParamStruct[],
            overrides?: Overrides & { from?: PromiseOrValue<string> }
        ): Promise<PopulatedTransaction>

        setEndpoint(
            _endpoint: PromiseOrValue<string>,
            overrides?: Overrides & { from?: PromiseOrValue<string> }
        ): Promise<PopulatedTransaction>

        setNativeTokenPriceUSD(
            _nativeTokenPriceUSD: PromiseOrValue<BigNumberish>,
            overrides?: Overrides & { from?: PromiseOrValue<string> }
        ): Promise<PopulatedTransaction>

        setPrice(
            _price: ILayerZeroPriceFeed.UpdatePriceStruct[],
            overrides?: Overrides & { from?: PromiseOrValue<string> }
        ): Promise<PopulatedTransaction>

        setPriceForArbitrum(
            _update: ILayerZeroPriceFeed.UpdatePriceExtStruct,
            overrides?: Overrides & { from?: PromiseOrValue<string> }
        ): Promise<PopulatedTransaction>

        setPriceRatioDenominator(
            _denominator: PromiseOrValue<BigNumberish>,
            overrides?: Overrides & { from?: PromiseOrValue<string> }
        ): Promise<PopulatedTransaction>

        setPriceUpdater(
            _addr: PromiseOrValue<string>,
            _active: PromiseOrValue<boolean>,
            overrides?: Overrides & { from?: PromiseOrValue<string> }
        ): Promise<PopulatedTransaction>

        transferOwnership(
            newOwner: PromiseOrValue<string>,
            overrides?: Overrides & { from?: PromiseOrValue<string> }
        ): Promise<PopulatedTransaction>

        withdrawFee(
            _to: PromiseOrValue<string>,
            _amount: PromiseOrValue<BigNumberish>,
            overrides?: Overrides & { from?: PromiseOrValue<string> }
        ): Promise<PopulatedTransaction>
    }
}
