/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers'
import type { Provider, TransactionRequest } from '@ethersproject/providers'
import type { PromiseOrValue } from '../../common'
import type { ExecutorDecompressor, ExecutorDecompressorInterface } from '../../decompressor/ExecutorDecompressor'

const _abi = [
    {
        inputs: [
            {
                internalType: 'contract Executor',
                name: '_executor',
                type: 'address',
            },
        ],
        stateMutability: 'nonpayable',
        type: 'constructor',
    },
    {
        inputs: [
            {
                internalType: 'uint256',
                name: 'value',
                type: 'uint256',
            },
        ],
        name: 'IncorrectDictAccess',
        type: 'error',
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: 'address',
                name: 'previousOwner',
                type: 'address',
            },
            {
                indexed: true,
                internalType: 'address',
                name: 'newOwner',
                type: 'address',
            },
        ],
        name: 'OwnershipTransferred',
        type: 'event',
    },
    {
        inputs: [],
        name: 'MAX_DICT_LEN',
        outputs: [
            {
                internalType: 'uint256',
                name: '',
                type: 'uint256',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [],
        name: 'RESERVE_DICT_LEN',
        outputs: [
            {
                internalType: 'uint256',
                name: '',
                type: 'uint256',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [],
        name: 'decompress',
        outputs: [],
        stateMutability: 'payable',
        type: 'function',
    },
    {
        inputs: [],
        name: 'decompressed',
        outputs: [
            {
                internalType: 'bytes',
                name: 'raw',
                type: 'bytes',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [
            {
                internalType: 'bytes',
                name: '_encoded',
                type: 'bytes',
            },
        ],
        name: 'execute301',
        outputs: [],
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        inputs: [],
        name: 'executor',
        outputs: [
            {
                internalType: 'contract Executor',
                name: '',
                type: 'address',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [
            {
                internalType: 'uint256',
                name: 'begin',
                type: 'uint256',
            },
            {
                internalType: 'uint256',
                name: 'end',
                type: 'uint256',
            },
        ],
        name: 'getData',
        outputs: [
            {
                internalType: 'bytes32[]',
                name: 'res',
                type: 'bytes32[]',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [
            {
                internalType: 'bytes',
                name: '_encoded',
                type: 'bytes',
            },
        ],
        name: 'nativeDrop',
        outputs: [],
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        inputs: [
            {
                internalType: 'bytes',
                name: '_encoded',
                type: 'bytes',
            },
        ],
        name: 'nativeDropAndExecute301',
        outputs: [],
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        inputs: [
            {
                internalType: 'bytes',
                name: '_encoded',
                type: 'bytes',
            },
        ],
        name: 'nativeDropAndExecute302',
        outputs: [],
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        inputs: [],
        name: 'owner',
        outputs: [
            {
                internalType: 'address',
                name: '',
                type: 'address',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [],
        name: 'renounceOwnership',
        outputs: [],
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        inputs: [
            {
                internalType: 'address',
                name: 'newOwner',
                type: 'address',
            },
        ],
        name: 'transferOwnership',
        outputs: [],
        stateMutability: 'nonpayable',
        type: 'function',
    },
] as const

const _bytecode =
    '0x60a060405234801561001057600080fd5b5060405161183f38038061183f83398101604081905261002f91610099565b61003833610049565b6001600160a01b03166080526100c9565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156100ab57600080fd5b81516001600160a01b03811681146100c257600080fd5b9392505050565b60805161173f61010060003960008181610266015281816102ff015281816104f3015281816105b30152610645015261173f6000f3fe6080604052600436106100d25760003560e01c806366e654181161007f5780638da5cb5b116100595780638da5cb5b1461020057806397a656141461024c578063c34c08e514610254578063f2fde38b1461028857600080fd5b806366e65418146101ab578063715018a6146101cb578063882357e8146101e057600080fd5b80634e4fe306116100b05780634e4fe306146101495780634f49d4711461017657806362a8fdcb1461019657600080fd5b806337ce069c146100d75780633bec591e146100f95780634736d97814610124575b600080fd5b3480156100e357600080fd5b506100f76100f23660046110e0565b6102a8565b005b34801561010557600080fd5b5061010e61036e565b60405161011b91906111b6565b60405180910390f35b34801561013057600080fd5b5061013b6210000081565b60405190815260200161011b565b34801561015557600080fd5b506101696101643660046111d0565b61038b565b60405161011b91906111f2565b34801561018257600080fd5b506100f76101913660046110e0565b6104cd565b3480156101a257600080fd5b5061013b600281565b3480156101b757600080fd5b506100f76101c63660046110e0565b61058d565b3480156101d757600080fd5b506100f7610612565b3480156101ec57600080fd5b506100f76101fb3660046110e0565b610626565b34801561020c57600080fd5b5060005473ffffffffffffffffffffffffffffffffffffffff165b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200161011b565b6100f76106d9565b34801561026057600080fd5b506102277f000000000000000000000000000000000000000000000000000000000000000081565b34801561029457600080fd5b506100f76102a3366004611236565b6106e9565b6102b06107a0565b6000806102bd8484610821565b6040517f3146646a000000000000000000000000000000000000000000000000000000008152919350915073ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001690633146646a90610336908590859060040161126c565b600060405180830381600087803b15801561035057600080fd5b505af1158015610364573d6000803e3d6000fd5b5050505050505050565b606061038661038136600481600061128e565b61088c565b905090565b60608260028110806103a05750621000008110155b156103df576040517f50695b8f000000000000000000000000000000000000000000000000000000008152600481018290526024015b60405180910390fd5b8260028110806103f25750621000008110155b1561042c576040517f50695b8f000000000000000000000000000000000000000000000000000000008152600481018290526024016103d6565b838510156104c55784840367ffffffffffffffff81111561044f5761044f6112b8565b604051908082528060200260200182016040528015610478578160200160208202803683370190505b509250845b848110156104c35760018162100000811061049a5761049a6112e7565b015484878303815181106104b0576104b06112e7565b602090810291909101015260010161047d565b505b505092915050565b6104d56107a0565b60008060008060006104e78787610a29565b945094509450945094507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16633927c07586868686866040518663ffffffff1660e01b8152600401610552959493929190611373565b600060405180830381600087803b15801561056c57600080fd5b505af1158015610580573d6000803e3d6000fd5b5050505050505050505050565b6105956107a0565b60008060008060006105a78787610b84565b945094509450945094507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663475b6d9e86868686866040518663ffffffff1660e01b81526004016105529594939291906113dc565b61061a6107a0565b6106246000610c82565b565b61062e6107a0565b600080600061063d8585610cf7565b9250925092507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16638624ba078484846040518463ffffffff1660e01b81526004016106a093929190611454565b600060405180830381600087803b1580156106ba57600080fd5b505af11580156106ce573d6000803e3d6000fd5b505050505050505050565b6106246106e461036e565b610f6e565b6106f16107a0565b73ffffffffffffffffffffffffffffffffffffffff8116610794576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084016103d6565b61079d81610c82565b50565b60005473ffffffffffffffffffffffffffffffffffffffff163314610624576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016103d6565b60606000610832600882858761128e565b61083b9161151e565b60c01c905061084d836008818761128e565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929793965092945050505050565b60405160208101838301845b818110156109f757803560008160fe1c600081146108cd57600181146108e85760028114610943576003811461095757610967565b60018360001a01803688379590950194505050600101610898565b60018360001a601f16017f2000000000000000000000000000000000000000000000000000000000000000841615610927576000875280602003870196505b8060018601883795860195939093016001019250610898915050565b8260041b60f41c9150600284019350610967565b8260041b60ec1c91506003840193505b506000818015610985576001811461098d5782600101549150610991565b339150610991565b3091505b508260021b60fe1c600081146109c257600181146109d057600281146109e1578160081b8752601f870196506109ee565b8187526020870196506109ee565b8160601b87526014870196506109ee565b8160e01b87526004870196505b50505050610898565b50507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe082820301825260405292915050565b6040805160608101825260008082526020820181905291810191909152606060008181610a59600482888a61128e565b610a6291611564565b60e01c9250610a7560086004888a61128e565b610a7e91611564565b60e01c8552610a9160286008888a61128e565b610a9a916115aa565b6020860152610aad60306028888a61128e565b610ab69161151e565b60c01c6040860152610acc60386030888a61128e565b610ad59161151e565b60c01c90506000610aea60406038898b61128e565b610af39161151e565b60c01c90506040888189610b078583611616565b92610b149392919061128e565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929650610b609250505067ffffffffffffffff831682611616565b9050610b76610b718983818d61128e565b610f90565b955050509295509295909350565b6040805160608101825260008082526020820181905291810191909152600080606081610bb4600482888a61128e565b610bbd91611564565b60e01c9050610bd060086004888a61128e565b610bd991611564565b60e01c8552610bec60286008888a61128e565b610bf5916115aa565b6020860152610c0860306028888a61128e565b610c119161151e565b60c01c6040860152610c2760446030888a61128e565b610c3091611629565b60601c92506000610c436004604461166f565b9050610c5560ff82166044898b61128e565b610c5e91611564565b60e01c9450610c75610b718860ff8416818c61128e565b9250509295509295909350565b6000805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6040805160c081018252600080825282516060818101855282825260208083018490528286018490528401919091529282018190528183018390526080820183905260a0820181905290610d4f60046000868861128e565b610d5891611564565b60e01c9150610d6b60086004868861128e565b610d7491611564565b602082015160e09190911c9052610d8f60286008868861128e565b610d98916115aa565b6020808301510152610dae60306028868861128e565b610db79161151e565b602082015160c09190911c604090910152610dd660446030868861128e565b610ddf91611629565b60601c8152610df260646044868861128e565b610dfb916115aa565b6040820152610e0e606c6064868861128e565b610e179161151e565b60c01c60a08201526000610e2f6074606c878961128e565b610e389161151e565b60c01c90506074868187610e4c8583611616565b92610e599392919061128e565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152505050506060840152610ea667ffffffffffffffff831682611616565b90506000878288610eb8600883611616565b92610ec59392919061128e565b610ece9161151e565b60c01c9050610ede600883611616565b9150878288610ef767ffffffffffffffff851683611616565b92610f049392919061128e565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152505050506080850152610f5167ffffffffffffffff821683611616565b9150610f62610b718884818c61128e565b95505050509250925092565b600080825160208401305af43d6000803e8015610f8a573d6000f35b503d6000fd5b6060600080610fa0601d85611688565b90508067ffffffffffffffff811115610fbb57610fbb6112b8565b60405190808252806020026020018201604052801561100057816020015b6040805180820190915260008082526020820152815260200190600190039081610fd95790505b50925060005b818110156104c35785838661101c601483611616565b926110299392919061128e565b61103291611629565b60601c848281518110611047576110476112e7565b602090810291909101015173ffffffffffffffffffffffffffffffffffffffff9091169052611077601484611616565b9250858386611087600983611616565b926110949392919061128e565b61109d916116c3565b60b81c68ffffffffffffffffff168482815181106110bd576110bd6112e7565b60209081029190910181015101526110d6600984611616565b9250600101611006565b600080602083850312156110f357600080fd5b823567ffffffffffffffff8082111561110b57600080fd5b818501915085601f83011261111f57600080fd5b81358181111561112e57600080fd5b86602082850101111561114057600080fd5b60209290920196919550909350505050565b6000815180845260005b818110156111785760208185018101518683018201520161115c565b5060006020828601015260207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f83011685010191505092915050565b6020815260006111c96020830184611152565b9392505050565b600080604083850312156111e357600080fd5b50508035926020909101359150565b6020808252825182820181905260009190848201906040850190845b8181101561122a5783518352928401929184019160010161120e565b50909695505050505050565b60006020828403121561124857600080fd5b813573ffffffffffffffffffffffffffffffffffffffff811681146111c957600080fd5b60408152600061127f6040830185611152565b90508260208301529392505050565b6000808585111561129e57600080fd5b838611156112ab57600080fd5b5050820193919092039150565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60008151808452602080850194506020840160005b83811015611368578151805173ffffffffffffffffffffffffffffffffffffffff168852830151838801526040909601959082019060010161132b565b509495945050505050565b855163ffffffff1681526020808701519082015260408087015167ffffffffffffffff169082015260e0606082015260006113b160e0830187611316565b85608084015282810360a08401526113c98186611152565b9150508260c08301529695505050505050565b855163ffffffff1681526020808701519082015260408087015167ffffffffffffffff169082015263ffffffff8516606082015273ffffffffffffffffffffffffffffffffffffffff8416608082015260e060a0820152600061144260e0830185611316565b90508260c08301529695505050505050565b6060815260006114676060830186611316565b846020840152828103604084015261010073ffffffffffffffffffffffffffffffffffffffff855116825260208501516114c86020840182805163ffffffff1682526020808201519083015260409081015167ffffffffffffffff16910152565b506040850151608083015260608501518160a08401526114ea82840182611152565b915050608085015182820360c08401526115048282611152565b91505060a085015160e08301528092505050949350505050565b7fffffffffffffffff00000000000000000000000000000000000000000000000081358181169160088510156104c55760089490940360031b84901b1690921692915050565b7fffffffff0000000000000000000000000000000000000000000000000000000081358181169160048510156104c55760049490940360031b84901b1690921692915050565b803560208310156115e1577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff602084900360031b1b165b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b808201808211156115e1576115e16115e7565b7fffffffffffffffffffffffffffffffffffffffff00000000000000000000000081358181169160148510156104c55760149490940360031b84901b1690921692915050565b60ff81811683821601908111156115e1576115e16115e7565b6000826116be577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500490565b7fffffffffffffffffff000000000000000000000000000000000000000000000081358181169160098510156104c55760099490940360031b84901b169092169291505056fea2646970667358221220786d6bf8142e0095a8c0f709f485f34aff6e8b36f0f1a4fa5689f7eac74ed56064736f6c63430008160033'

type ExecutorDecompressorConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>

const isSuperArgs = (xs: ExecutorDecompressorConstructorParams): xs is ConstructorParameters<typeof ContractFactory> =>
    xs.length > 1

export class ExecutorDecompressor__factory extends ContractFactory {
    constructor(...args: ExecutorDecompressorConstructorParams) {
        if (isSuperArgs(args)) {
            super(...args)
        } else {
            super(_abi, _bytecode, args[0])
        }
    }

    override deploy(
        _executor: PromiseOrValue<string>,
        overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ExecutorDecompressor> {
        return super.deploy(_executor, overrides || {}) as Promise<ExecutorDecompressor>
    }
    override getDeployTransaction(
        _executor: PromiseOrValue<string>,
        overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): TransactionRequest {
        return super.getDeployTransaction(_executor, overrides || {})
    }
    override attach(address: string): ExecutorDecompressor {
        return super.attach(address) as ExecutorDecompressor
    }
    override connect(signer: Signer): ExecutorDecompressor__factory {
        return super.connect(signer) as ExecutorDecompressor__factory
    }

    static readonly bytecode = _bytecode
    static readonly abi = _abi
    static createInterface(): ExecutorDecompressorInterface {
        return new utils.Interface(_abi) as ExecutorDecompressorInterface
    }
    static connect(address: string, signerOrProvider: Signer | Provider): ExecutorDecompressor {
        return new Contract(address, _abi, signerOrProvider) as ExecutorDecompressor
    }
}
