/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from 'ethers'
import type { Provider } from '@ethersproject/providers'
import type { DecompressorExtension, DecompressorExtensionInterface } from '../../decompressor/DecompressorExtension'

const _abi = [
    {
        inputs: [
            {
                internalType: 'uint256',
                name: 'value',
                type: 'uint256',
            },
        ],
        name: 'IncorrectDictAccess',
        type: 'error',
    },
    {
        inputs: [],
        name: 'MAX_DICT_LEN',
        outputs: [
            {
                internalType: 'uint256',
                name: '',
                type: 'uint256',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [],
        name: 'RESERVE_DICT_LEN',
        outputs: [
            {
                internalType: 'uint256',
                name: '',
                type: 'uint256',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [],
        name: 'decompress',
        outputs: [],
        stateMutability: 'payable',
        type: 'function',
    },
    {
        inputs: [],
        name: 'decompressed',
        outputs: [
            {
                internalType: 'bytes',
                name: 'raw',
                type: 'bytes',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [
            {
                internalType: 'uint256',
                name: 'begin',
                type: 'uint256',
            },
            {
                internalType: 'uint256',
                name: 'end',
                type: 'uint256',
            },
        ],
        name: 'getData',
        outputs: [
            {
                internalType: 'bytes32[]',
                name: 'res',
                type: 'bytes32[]',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
] as const

export class DecompressorExtension__factory {
    static readonly abi = _abi
    static createInterface(): DecompressorExtensionInterface {
        return new utils.Interface(_abi) as DecompressorExtensionInterface
    }
    static connect(address: string, signerOrProvider: Signer | Provider): DecompressorExtension {
        return new Contract(address, _abi, signerOrProvider) as DecompressorExtension
    }
}
