/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers'
import type { Provider, TransactionRequest } from '@ethersproject/providers'
import type { PromiseOrValue } from '../../common'
import type { BlockedMessageLib, BlockedMessageLibInterface } from '../../messagelib/BlockedMessageLib'

const _abi = [
    {
        inputs: [],
        name: 'LZ_NotImplemented',
        type: 'error',
    },
    {
        stateMutability: 'nonpayable',
        type: 'fallback',
    },
    {
        inputs: [
            {
                internalType: 'uint32',
                name: '',
                type: 'uint32',
            },
        ],
        name: 'isSupportedEid',
        outputs: [
            {
                internalType: 'bool',
                name: '',
                type: 'bool',
            },
        ],
        stateMutability: 'pure',
        type: 'function',
    },
    {
        inputs: [],
        name: 'messageLibType',
        outputs: [
            {
                internalType: 'enum MessageLibType',
                name: '',
                type: 'uint8',
            },
        ],
        stateMutability: 'pure',
        type: 'function',
    },
    {
        inputs: [
            {
                internalType: 'bytes4',
                name: 'interfaceId',
                type: 'bytes4',
            },
        ],
        name: 'supportsInterface',
        outputs: [
            {
                internalType: 'bool',
                name: '',
                type: 'bool',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [],
        name: 'version',
        outputs: [
            {
                internalType: 'uint64',
                name: 'major',
                type: 'uint64',
            },
            {
                internalType: 'uint8',
                name: 'minor',
                type: 'uint8',
            },
            {
                internalType: 'uint8',
                name: 'endpointVersion',
                type: 'uint8',
            },
        ],
        stateMutability: 'pure',
        type: 'function',
    },
] as const

const _bytecode =
    '0x608060405234801561001057600080fd5b5061026f806100206000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806301ffc9a71461007e5780631881d94d146100a657806354fd4d50146100b55780636750cd4c146100dc575b6040517f2657b6c300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61009161008c366004610189565b6100f0565b60405190151581526020015b60405180910390f35b600260405161009d91906101d2565b6040805167ffffffffffffffff815260ff602082015260029181019190915260600161009d565b6100916100ea366004610213565b50600190565b60007fffffffff0000000000000000000000000000000000000000000000000000000082167f97f0258400000000000000000000000000000000000000000000000000000000148061018357507f01ffc9a7000000000000000000000000000000000000000000000000000000007fffffffff000000000000000000000000000000000000000000000000000000008316145b92915050565b60006020828403121561019b57600080fd5b81357fffffffff00000000000000000000000000000000000000000000000000000000811681146101cb57600080fd5b9392505050565b602081016003831061020d577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b91905290565b60006020828403121561022557600080fd5b813563ffffffff811681146101cb57600080fdfea2646970667358221220468116af6289d47cca395a20001eab24a8adf35da1e528b23e346fe87a8bc04064736f6c63430008160033'

type BlockedMessageLibConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>

const isSuperArgs = (xs: BlockedMessageLibConstructorParams): xs is ConstructorParameters<typeof ContractFactory> =>
    xs.length > 1

export class BlockedMessageLib__factory extends ContractFactory {
    constructor(...args: BlockedMessageLibConstructorParams) {
        if (isSuperArgs(args)) {
            super(...args)
        } else {
            super(_abi, _bytecode, args[0])
        }
    }

    override deploy(overrides?: Overrides & { from?: PromiseOrValue<string> }): Promise<BlockedMessageLib> {
        return super.deploy(overrides || {}) as Promise<BlockedMessageLib>
    }
    override getDeployTransaction(overrides?: Overrides & { from?: PromiseOrValue<string> }): TransactionRequest {
        return super.getDeployTransaction(overrides || {})
    }
    override attach(address: string): BlockedMessageLib {
        return super.attach(address) as BlockedMessageLib
    }
    override connect(signer: Signer): BlockedMessageLib__factory {
        return super.connect(signer) as BlockedMessageLib__factory
    }

    static readonly bytecode = _bytecode
    static readonly abi = _abi
    static createInterface(): BlockedMessageLibInterface {
        return new utils.Interface(_abi) as BlockedMessageLibInterface
    }
    static connect(address: string, signerOrProvider: Signer | Provider): BlockedMessageLib {
        return new Contract(address, _abi, signerOrProvider) as BlockedMessageLib
    }
}
