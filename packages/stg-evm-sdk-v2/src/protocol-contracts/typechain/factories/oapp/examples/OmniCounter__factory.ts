/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers'
import type { Provider, TransactionRequest } from '@ethersproject/providers'
import type { PromiseOrValue } from '../../../common'
import type { OmniCounter, OmniCounterInterface } from '../../../oapp/examples/OmniCounter'

const _abi = [
    {
        inputs: [
            {
                internalType: 'address',
                name: '_endpoint',
                type: 'address',
            },
            {
                internalType: 'address',
                name: '_delegate',
                type: 'address',
            },
        ],
        stateMutability: 'nonpayable',
        type: 'constructor',
    },
    {
        inputs: [],
        name: 'InvalidDelegate',
        type: 'error',
    },
    {
        inputs: [],
        name: 'InvalidEndpointCall',
        type: 'error',
    },
    {
        inputs: [
            {
                internalType: 'uint16',
                name: 'optionType',
                type: 'uint16',
            },
        ],
        name: 'InvalidOptionType',
        type: 'error',
    },
    {
        inputs: [],
        name: 'LzTokenUnavailable',
        type: 'error',
    },
    {
        inputs: [
            {
                internalType: 'uint32',
                name: 'eid',
                type: 'uint32',
            },
        ],
        name: 'NoPeer',
        type: 'error',
    },
    {
        inputs: [
            {
                internalType: 'uint256',
                name: 'msgValue',
                type: 'uint256',
            },
        ],
        name: 'NotEnoughNative',
        type: 'error',
    },
    {
        inputs: [
            {
                internalType: 'address',
                name: 'addr',
                type: 'address',
            },
        ],
        name: 'OnlyEndpoint',
        type: 'error',
    },
    {
        inputs: [
            {
                internalType: 'uint32',
                name: 'eid',
                type: 'uint32',
            },
            {
                internalType: 'bytes32',
                name: 'sender',
                type: 'bytes32',
            },
        ],
        name: 'OnlyPeer',
        type: 'error',
    },
    {
        inputs: [],
        name: 'OnlySelf',
        type: 'error',
    },
    {
        inputs: [
            {
                internalType: 'bytes',
                name: 'result',
                type: 'bytes',
            },
        ],
        name: 'SimulationResult',
        type: 'error',
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: 'address',
                name: 'previousOwner',
                type: 'address',
            },
            {
                indexed: true,
                internalType: 'address',
                name: 'newOwner',
                type: 'address',
            },
        ],
        name: 'OwnershipTransferred',
        type: 'event',
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: 'uint32',
                name: 'eid',
                type: 'uint32',
            },
            {
                indexed: false,
                internalType: 'bytes32',
                name: 'peer',
                type: 'bytes32',
            },
        ],
        name: 'PeerSet',
        type: 'event',
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: 'address',
                name: 'preCrimeAddress',
                type: 'address',
            },
        ],
        name: 'PreCrimeSet',
        type: 'event',
    },
    {
        stateMutability: 'payable',
        type: 'fallback',
    },
    {
        inputs: [],
        name: 'admin',
        outputs: [
            {
                internalType: 'address',
                name: '',
                type: 'address',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [
            {
                components: [
                    {
                        internalType: 'uint32',
                        name: 'srcEid',
                        type: 'uint32',
                    },
                    {
                        internalType: 'bytes32',
                        name: 'sender',
                        type: 'bytes32',
                    },
                    {
                        internalType: 'uint64',
                        name: 'nonce',
                        type: 'uint64',
                    },
                ],
                internalType: 'struct Origin',
                name: 'origin',
                type: 'tuple',
            },
        ],
        name: 'allowInitializePath',
        outputs: [
            {
                internalType: 'bool',
                name: '',
                type: 'bool',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [
            {
                internalType: 'uint32[]',
                name: '_eids',
                type: 'uint32[]',
            },
            {
                internalType: 'uint8[]',
                name: '_types',
                type: 'uint8[]',
            },
            {
                internalType: 'bytes[]',
                name: '_options',
                type: 'bytes[]',
            },
        ],
        name: 'batchIncrement',
        outputs: [],
        stateMutability: 'payable',
        type: 'function',
    },
    {
        inputs: [
            {
                internalType: 'uint32',
                name: '_eid',
                type: 'uint32',
            },
            {
                internalType: 'uint8',
                name: '_type',
                type: 'uint8',
            },
            {
                internalType: 'bytes',
                name: '_options',
                type: 'bytes',
            },
        ],
        name: 'brokenIncrement',
        outputs: [],
        stateMutability: 'payable',
        type: 'function',
    },
    {
        inputs: [],
        name: 'composedCount',
        outputs: [
            {
                internalType: 'uint256',
                name: '',
                type: 'uint256',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [],
        name: 'count',
        outputs: [
            {
                internalType: 'uint256',
                name: '',
                type: 'uint256',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [],
        name: 'eid',
        outputs: [
            {
                internalType: 'uint32',
                name: '',
                type: 'uint32',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [],
        name: 'endpoint',
        outputs: [
            {
                internalType: 'contract ILayerZeroEndpointV2',
                name: '',
                type: 'address',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [
            {
                internalType: 'uint32',
                name: 'srcEid',
                type: 'uint32',
            },
        ],
        name: 'inboundCount',
        outputs: [
            {
                internalType: 'uint256',
                name: 'count',
                type: 'uint256',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [
            {
                internalType: 'uint32',
                name: '_eid',
                type: 'uint32',
            },
            {
                internalType: 'uint8',
                name: '_type',
                type: 'uint8',
            },
            {
                internalType: 'bytes',
                name: '_options',
                type: 'bytes',
            },
        ],
        name: 'increment',
        outputs: [],
        stateMutability: 'payable',
        type: 'function',
    },
    {
        inputs: [
            {
                components: [
                    {
                        internalType: 'uint32',
                        name: 'srcEid',
                        type: 'uint32',
                    },
                    {
                        internalType: 'bytes32',
                        name: 'sender',
                        type: 'bytes32',
                    },
                    {
                        internalType: 'uint64',
                        name: 'nonce',
                        type: 'uint64',
                    },
                ],
                internalType: 'struct Origin',
                name: '',
                type: 'tuple',
            },
            {
                internalType: 'bytes',
                name: '',
                type: 'bytes',
            },
            {
                internalType: 'address',
                name: '_sender',
                type: 'address',
            },
        ],
        name: 'isComposeMsgSender',
        outputs: [
            {
                internalType: 'bool',
                name: '',
                type: 'bool',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [
            {
                internalType: 'uint32',
                name: '_eid',
                type: 'uint32',
            },
            {
                internalType: 'bytes32',
                name: '_peer',
                type: 'bytes32',
            },
        ],
        name: 'isPeer',
        outputs: [
            {
                internalType: 'bool',
                name: '',
                type: 'bool',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [
            {
                internalType: 'address',
                name: '_oApp',
                type: 'address',
            },
            {
                internalType: 'bytes32',
                name: '',
                type: 'bytes32',
            },
            {
                internalType: 'bytes',
                name: '_message',
                type: 'bytes',
            },
            {
                internalType: 'address',
                name: '',
                type: 'address',
            },
            {
                internalType: 'bytes',
                name: '',
                type: 'bytes',
            },
        ],
        name: 'lzCompose',
        outputs: [],
        stateMutability: 'payable',
        type: 'function',
    },
    {
        inputs: [
            {
                components: [
                    {
                        internalType: 'uint32',
                        name: 'srcEid',
                        type: 'uint32',
                    },
                    {
                        internalType: 'bytes32',
                        name: 'sender',
                        type: 'bytes32',
                    },
                    {
                        internalType: 'uint64',
                        name: 'nonce',
                        type: 'uint64',
                    },
                ],
                internalType: 'struct Origin',
                name: '_origin',
                type: 'tuple',
            },
            {
                internalType: 'bytes32',
                name: '_guid',
                type: 'bytes32',
            },
            {
                internalType: 'bytes',
                name: '_message',
                type: 'bytes',
            },
            {
                internalType: 'address',
                name: '_executor',
                type: 'address',
            },
            {
                internalType: 'bytes',
                name: '_extraData',
                type: 'bytes',
            },
        ],
        name: 'lzReceive',
        outputs: [],
        stateMutability: 'payable',
        type: 'function',
    },
    {
        inputs: [
            {
                components: [
                    {
                        components: [
                            {
                                internalType: 'uint32',
                                name: 'srcEid',
                                type: 'uint32',
                            },
                            {
                                internalType: 'bytes32',
                                name: 'sender',
                                type: 'bytes32',
                            },
                            {
                                internalType: 'uint64',
                                name: 'nonce',
                                type: 'uint64',
                            },
                        ],
                        internalType: 'struct Origin',
                        name: 'origin',
                        type: 'tuple',
                    },
                    {
                        internalType: 'uint32',
                        name: 'dstEid',
                        type: 'uint32',
                    },
                    {
                        internalType: 'address',
                        name: 'receiver',
                        type: 'address',
                    },
                    {
                        internalType: 'bytes32',
                        name: 'guid',
                        type: 'bytes32',
                    },
                    {
                        internalType: 'uint256',
                        name: 'value',
                        type: 'uint256',
                    },
                    {
                        internalType: 'address',
                        name: 'executor',
                        type: 'address',
                    },
                    {
                        internalType: 'bytes',
                        name: 'message',
                        type: 'bytes',
                    },
                    {
                        internalType: 'bytes',
                        name: 'extraData',
                        type: 'bytes',
                    },
                ],
                internalType: 'struct InboundPacket[]',
                name: '_packets',
                type: 'tuple[]',
            },
        ],
        name: 'lzReceiveAndRevert',
        outputs: [],
        stateMutability: 'payable',
        type: 'function',
    },
    {
        inputs: [
            {
                components: [
                    {
                        internalType: 'uint32',
                        name: 'srcEid',
                        type: 'uint32',
                    },
                    {
                        internalType: 'bytes32',
                        name: 'sender',
                        type: 'bytes32',
                    },
                    {
                        internalType: 'uint64',
                        name: 'nonce',
                        type: 'uint64',
                    },
                ],
                internalType: 'struct Origin',
                name: '_origin',
                type: 'tuple',
            },
            {
                internalType: 'bytes32',
                name: '_guid',
                type: 'bytes32',
            },
            {
                internalType: 'bytes',
                name: '_message',
                type: 'bytes',
            },
            {
                internalType: 'address',
                name: '_executor',
                type: 'address',
            },
            {
                internalType: 'bytes',
                name: '_extraData',
                type: 'bytes',
            },
        ],
        name: 'lzReceiveSimulate',
        outputs: [],
        stateMutability: 'payable',
        type: 'function',
    },
    {
        inputs: [
            {
                internalType: 'uint32',
                name: '_srcEid',
                type: 'uint32',
            },
            {
                internalType: 'bytes32',
                name: '_sender',
                type: 'bytes32',
            },
        ],
        name: 'nextNonce',
        outputs: [
            {
                internalType: 'uint64',
                name: '',
                type: 'uint64',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [],
        name: 'oApp',
        outputs: [
            {
                internalType: 'address',
                name: '',
                type: 'address',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [],
        name: 'oAppVersion',
        outputs: [
            {
                internalType: 'uint64',
                name: 'senderVersion',
                type: 'uint64',
            },
            {
                internalType: 'uint64',
                name: 'receiverVersion',
                type: 'uint64',
            },
        ],
        stateMutability: 'pure',
        type: 'function',
    },
    {
        inputs: [
            {
                internalType: 'uint32',
                name: 'dstEid',
                type: 'uint32',
            },
        ],
        name: 'outboundCount',
        outputs: [
            {
                internalType: 'uint256',
                name: 'count',
                type: 'uint256',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [],
        name: 'owner',
        outputs: [
            {
                internalType: 'address',
                name: '',
                type: 'address',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [
            {
                internalType: 'uint32',
                name: 'eid',
                type: 'uint32',
            },
        ],
        name: 'peers',
        outputs: [
            {
                internalType: 'bytes32',
                name: 'peer',
                type: 'bytes32',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [],
        name: 'preCrime',
        outputs: [
            {
                internalType: 'address',
                name: '',
                type: 'address',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [
            {
                internalType: 'uint32',
                name: '_eid',
                type: 'uint32',
            },
            {
                internalType: 'uint8',
                name: '_type',
                type: 'uint8',
            },
            {
                internalType: 'bytes',
                name: '_options',
                type: 'bytes',
            },
        ],
        name: 'quote',
        outputs: [
            {
                internalType: 'uint256',
                name: 'nativeFee',
                type: 'uint256',
            },
            {
                internalType: 'uint256',
                name: 'lzTokenFee',
                type: 'uint256',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [],
        name: 'renounceOwnership',
        outputs: [],
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        inputs: [
            {
                internalType: 'address',
                name: '_admin',
                type: 'address',
            },
        ],
        name: 'setAdmin',
        outputs: [],
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        inputs: [
            {
                internalType: 'address',
                name: '_delegate',
                type: 'address',
            },
        ],
        name: 'setDelegate',
        outputs: [],
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        inputs: [
            {
                internalType: 'bool',
                name: '_orderedNonce',
                type: 'bool',
            },
        ],
        name: 'setOrderedNonce',
        outputs: [],
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        inputs: [
            {
                internalType: 'uint32',
                name: '_eid',
                type: 'uint32',
            },
            {
                internalType: 'bytes32',
                name: '_peer',
                type: 'bytes32',
            },
        ],
        name: 'setPeer',
        outputs: [],
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        inputs: [
            {
                internalType: 'address',
                name: '_preCrime',
                type: 'address',
            },
        ],
        name: 'setPreCrime',
        outputs: [],
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        inputs: [
            {
                internalType: 'uint32',
                name: '_srcEid',
                type: 'uint32',
            },
            {
                internalType: 'bytes32',
                name: '_sender',
                type: 'bytes32',
            },
            {
                internalType: 'uint64',
                name: '_nonce',
                type: 'uint64',
            },
        ],
        name: 'skipInboundNonce',
        outputs: [],
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        inputs: [
            {
                internalType: 'address',
                name: 'newOwner',
                type: 'address',
            },
        ],
        name: 'transferOwnership',
        outputs: [],
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        inputs: [
            {
                internalType: 'address payable',
                name: '_to',
                type: 'address',
            },
            {
                internalType: 'uint256',
                name: '_amount',
                type: 'uint256',
            },
        ],
        name: 'withdraw',
        outputs: [],
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        stateMutability: 'payable',
        type: 'receive',
    },
] as const

const _bytecode =
    ''

type OmniCounterConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>

const isSuperArgs = (xs: OmniCounterConstructorParams): xs is ConstructorParameters<typeof ContractFactory> =>
    xs.length > 1

export class OmniCounter__factory extends ContractFactory {
    constructor(...args: OmniCounterConstructorParams) {
        if (isSuperArgs(args)) {
            super(...args)
        } else {
            super(_abi, _bytecode, args[0])
        }
    }

    override deploy(
        _endpoint: PromiseOrValue<string>,
        _delegate: PromiseOrValue<string>,
        overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<OmniCounter> {
        return super.deploy(_endpoint, _delegate, overrides || {}) as Promise<OmniCounter>
    }
    override getDeployTransaction(
        _endpoint: PromiseOrValue<string>,
        _delegate: PromiseOrValue<string>,
        overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): TransactionRequest {
        return super.getDeployTransaction(_endpoint, _delegate, overrides || {})
    }
    override attach(address: string): OmniCounter {
        return super.attach(address) as OmniCounter
    }
    override connect(signer: Signer): OmniCounter__factory {
        return super.connect(signer) as OmniCounter__factory
    }

    static readonly bytecode = _bytecode
    static readonly abi = _abi
    static createInterface(): OmniCounterInterface {
        return new utils.Interface(_abi) as OmniCounterInterface
    }
    static connect(address: string, signerOrProvider: Signer | Provider): OmniCounter {
        return new Contract(address, _abi, signerOrProvider) as OmniCounter
    }
}
