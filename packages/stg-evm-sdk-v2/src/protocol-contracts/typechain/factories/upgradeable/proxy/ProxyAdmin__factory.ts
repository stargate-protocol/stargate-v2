/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers'
import type { Provider, TransactionRequest } from '@ethersproject/providers'
import type { PromiseOrValue } from '../../../common'
import type { ProxyAdmin, ProxyAdminInterface } from '../../../upgradeable/proxy/ProxyAdmin'

const _abi = [
    {
        inputs: [
            {
                internalType: 'address',
                name: 'initialOwner',
                type: 'address',
            },
        ],
        stateMutability: 'nonpayable',
        type: 'constructor',
    },
    {
        inputs: [],
        name: 'AdminCallFailed',
        type: 'error',
    },
    {
        inputs: [],
        name: 'ImplementationCallFailed',
        type: 'error',
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: 'address',
                name: 'previousOwner',
                type: 'address',
            },
            {
                indexed: true,
                internalType: 'address',
                name: 'newOwner',
                type: 'address',
            },
        ],
        name: 'OwnershipTransferred',
        type: 'event',
    },
    {
        inputs: [
            {
                internalType: 'contract TransparentUpgradeableProxy',
                name: 'proxy',
                type: 'address',
            },
            {
                internalType: 'address',
                name: 'newAdmin',
                type: 'address',
            },
        ],
        name: 'changeProxyAdmin',
        outputs: [],
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        inputs: [
            {
                internalType: 'contract TransparentUpgradeableProxy',
                name: 'proxy',
                type: 'address',
            },
        ],
        name: 'getProxyAdmin',
        outputs: [
            {
                internalType: 'address',
                name: '',
                type: 'address',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [
            {
                internalType: 'contract TransparentUpgradeableProxy',
                name: 'proxy',
                type: 'address',
            },
        ],
        name: 'getProxyImplementation',
        outputs: [
            {
                internalType: 'address',
                name: '',
                type: 'address',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [],
        name: 'owner',
        outputs: [
            {
                internalType: 'address',
                name: '',
                type: 'address',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [],
        name: 'renounceOwnership',
        outputs: [],
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        inputs: [
            {
                internalType: 'address',
                name: 'newOwner',
                type: 'address',
            },
        ],
        name: 'transferOwnership',
        outputs: [],
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        inputs: [
            {
                internalType: 'contract TransparentUpgradeableProxy',
                name: 'proxy',
                type: 'address',
            },
            {
                internalType: 'address',
                name: 'implementation',
                type: 'address',
            },
        ],
        name: 'upgrade',
        outputs: [],
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        inputs: [
            {
                internalType: 'contract TransparentUpgradeableProxy',
                name: 'proxy',
                type: 'address',
            },
            {
                internalType: 'address',
                name: 'implementation',
                type: 'address',
            },
            {
                internalType: 'bytes',
                name: 'data',
                type: 'bytes',
            },
        ],
        name: 'upgradeAndCall',
        outputs: [],
        stateMutability: 'payable',
        type: 'function',
    },
] as const

const _bytecode =
    '0x608060405234801561001057600080fd5b506040516109e53803806109e583398101604081905261002f91610097565b61003833610047565b61004181610047565b506100c7565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156100a957600080fd5b81516001600160a01b03811681146100c057600080fd5b9392505050565b61090f806100d66000396000f3fe60806040526004361061007b5760003560e01c80639623609d1161004e5780639623609d1461012b57806399a88ec41461013e578063f2fde38b1461015e578063f3b7dead1461017e57600080fd5b8063204e1c7a14610080578063715018a6146100c95780637eff275e146100e05780638da5cb5b14610100575b600080fd5b34801561008c57600080fd5b506100a061009b3660046106b1565b61019e565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200160405180910390f35b3480156100d557600080fd5b506100de610282565b005b3480156100ec57600080fd5b506100de6100fb3660046106d5565b610296565b34801561010c57600080fd5b5060005473ffffffffffffffffffffffffffffffffffffffff166100a0565b6100de61013936600461073d565b610324565b34801561014a57600080fd5b506100de6101593660046106d5565b6103b9565b34801561016a57600080fd5b506100de6101793660046106b1565b610415565b34801561018a57600080fd5b506100a06101993660046106b1565b6104d1565b60008060008373ffffffffffffffffffffffffffffffffffffffff166040516101ea907f5c60da1b00000000000000000000000000000000000000000000000000000000815260040190565b600060405180830381855afa9150503d8060008114610225576040519150601f19603f3d011682016040523d82523d6000602084013e61022a565b606091505b509150915081610266576040517f6bce18d700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8080602001905181019061027a9190610831565b949350505050565b61028a610599565b610294600061061a565b565b61029e610599565b6040517f8f28397000000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8281166004830152831690638f283970906024015b600060405180830381600087803b15801561030857600080fd5b505af115801561031c573d6000803e3d6000fd5b505050505050565b61032c610599565b6040517f4f1ef28600000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff841690634f1ef286903490610382908690869060040161084e565b6000604051808303818588803b15801561039b57600080fd5b505af11580156103af573d6000803e3d6000fd5b5050505050505050565b6103c1610599565b6040517f3659cfe600000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8281166004830152831690633659cfe6906024016102ee565b61041d610599565b73ffffffffffffffffffffffffffffffffffffffff81166104c5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b6104ce8161061a565b50565b60008060008373ffffffffffffffffffffffffffffffffffffffff1660405161051d907ff851a44000000000000000000000000000000000000000000000000000000000815260040190565b600060405180830381855afa9150503d8060008114610558576040519150601f19603f3d011682016040523d82523d6000602084013e61055d565b606091505b509150915081610266576040517f1545a42500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005473ffffffffffffffffffffffffffffffffffffffff163314610294576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016104bc565b6000805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b73ffffffffffffffffffffffffffffffffffffffff811681146104ce57600080fd5b6000602082840312156106c357600080fd5b81356106ce8161068f565b9392505050565b600080604083850312156106e857600080fd5b82356106f38161068f565b915060208301356107038161068f565b809150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60008060006060848603121561075257600080fd5b833561075d8161068f565b9250602084013561076d8161068f565b9150604084013567ffffffffffffffff8082111561078a57600080fd5b818601915086601f83011261079e57600080fd5b8135818111156107b0576107b061070e565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f011681019083821181831017156107f6576107f661070e565b8160405282815289602084870101111561080f57600080fd5b8260208601602083013760006020848301015280955050505050509250925092565b60006020828403121561084357600080fd5b81516106ce8161068f565b73ffffffffffffffffffffffffffffffffffffffff831681526000602060406020840152835180604085015260005b818110156108995785810183015185820160600152820161087d565b5060006060828601015260607fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f83011685010192505050939250505056fea2646970667358221220bcc00f0dbe515bb8f4bfec9b831d173383f10d30791c438f0b188c4765a3865f64736f6c63430008160033'

type ProxyAdminConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>

const isSuperArgs = (xs: ProxyAdminConstructorParams): xs is ConstructorParameters<typeof ContractFactory> =>
    xs.length > 1

export class ProxyAdmin__factory extends ContractFactory {
    constructor(...args: ProxyAdminConstructorParams) {
        if (isSuperArgs(args)) {
            super(...args)
        } else {
            super(_abi, _bytecode, args[0])
        }
    }

    override deploy(
        initialOwner: PromiseOrValue<string>,
        overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ProxyAdmin> {
        return super.deploy(initialOwner, overrides || {}) as Promise<ProxyAdmin>
    }
    override getDeployTransaction(
        initialOwner: PromiseOrValue<string>,
        overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): TransactionRequest {
        return super.getDeployTransaction(initialOwner, overrides || {})
    }
    override attach(address: string): ProxyAdmin {
        return super.attach(address) as ProxyAdmin
    }
    override connect(signer: Signer): ProxyAdmin__factory {
        return super.connect(signer) as ProxyAdmin__factory
    }

    static readonly bytecode = _bytecode
    static readonly abi = _abi
    static createInterface(): ProxyAdminInterface {
        return new utils.Interface(_abi) as ProxyAdminInterface
    }
    static connect(address: string, signerOrProvider: Signer | Provider): ProxyAdmin {
        return new Contract(address, _abi, signerOrProvider) as ProxyAdmin
    }
}
