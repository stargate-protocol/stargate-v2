/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers'
import type { Provider, TransactionRequest } from '@ethersproject/providers'
import type { PromiseOrValue } from '../common'
import type { EndpointV2View, EndpointV2ViewInterface } from '../EndpointV2View'

const _abi = [
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: 'uint8',
                name: 'version',
                type: 'uint8',
            },
        ],
        name: 'Initialized',
        type: 'event',
    },
    {
        inputs: [],
        name: 'EMPTY_PAYLOAD_HASH',
        outputs: [
            {
                internalType: 'bytes32',
                name: '',
                type: 'bytes32',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [],
        name: 'NIL_PAYLOAD_HASH',
        outputs: [
            {
                internalType: 'bytes32',
                name: '',
                type: 'bytes32',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [],
        name: 'endpoint',
        outputs: [
            {
                internalType: 'contract ILayerZeroEndpointV2',
                name: '',
                type: 'address',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [
            {
                components: [
                    {
                        internalType: 'uint32',
                        name: 'srcEid',
                        type: 'uint32',
                    },
                    {
                        internalType: 'bytes32',
                        name: 'sender',
                        type: 'bytes32',
                    },
                    {
                        internalType: 'uint64',
                        name: 'nonce',
                        type: 'uint64',
                    },
                ],
                internalType: 'struct Origin',
                name: '_origin',
                type: 'tuple',
            },
            {
                internalType: 'address',
                name: '_receiver',
                type: 'address',
            },
        ],
        name: 'executable',
        outputs: [
            {
                internalType: 'enum ExecutionState',
                name: '',
                type: 'uint8',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [
            {
                components: [
                    {
                        internalType: 'uint32',
                        name: 'srcEid',
                        type: 'uint32',
                    },
                    {
                        internalType: 'bytes32',
                        name: 'sender',
                        type: 'bytes32',
                    },
                    {
                        internalType: 'uint64',
                        name: 'nonce',
                        type: 'uint64',
                    },
                ],
                internalType: 'struct Origin',
                name: '_origin',
                type: 'tuple',
            },
            {
                internalType: 'address',
                name: '_receiver',
                type: 'address',
            },
        ],
        name: 'initializable',
        outputs: [
            {
                internalType: 'bool',
                name: '',
                type: 'bool',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [
            {
                internalType: 'address',
                name: '_endpoint',
                type: 'address',
            },
        ],
        name: 'initialize',
        outputs: [],
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        inputs: [
            {
                components: [
                    {
                        internalType: 'uint32',
                        name: 'srcEid',
                        type: 'uint32',
                    },
                    {
                        internalType: 'bytes32',
                        name: 'sender',
                        type: 'bytes32',
                    },
                    {
                        internalType: 'uint64',
                        name: 'nonce',
                        type: 'uint64',
                    },
                ],
                internalType: 'struct Origin',
                name: '_origin',
                type: 'tuple',
            },
            {
                internalType: 'address',
                name: '_receiver',
                type: 'address',
            },
            {
                internalType: 'address',
                name: '_receiveLib',
                type: 'address',
            },
            {
                internalType: 'bytes32',
                name: '_payloadHash',
                type: 'bytes32',
            },
        ],
        name: 'verifiable',
        outputs: [
            {
                internalType: 'bool',
                name: '',
                type: 'bool',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
] as const

const _bytecode =
    '0x608060405234801561001057600080fd5b50610d32806100206000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c8063861e1ca51161005b578063861e1ca514610127578063c4d66de81461014a578063cb5026b91461015f578063e1e3a7df1461016757600080fd5b80632baf0be7146100825780634b4b2efb146100bc5780635e280f11146100dc575b600080fd5b6100a97fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81565b6040519081526020015b60405180910390f35b6100cf6100ca366004610bc1565b61017a565b6040516100b39190610bf5565b6000546101029062010000900473ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016100b3565b61013a610135366004610bc1565b610487565b60405190151581526020016100b3565b61015d610158366004610c36565b610577565b005b6100a9600081565b61013a610175366004610c58565b6107b6565b600080548351602085015160408087015190517fc9fc7bcd00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff878116600483015263ffffffff9094166024820152604481019290925267ffffffffffffffff16606482015283926201000090049091169063c9fc7bcd90608401602060405180830381865afa158015610223573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102479190610ca4565b9050801580156103235750600054845160208601516040517f5b17bb7000000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff878116600483015263ffffffff90931660248201526044810191909152620100009092041690635b17bb7090606401602060405180830381865afa1580156102e3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103079190610cbd565b67ffffffffffffffff16846040015167ffffffffffffffff1611155b15610332576003915050610481565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff811480159061042e5750600054845160208601516040517fa0dd43fc00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff878116600483015263ffffffff9093166024820152604481019190915262010000909204169063a0dd43fc90606401602060405180830381865afa1580156103ee573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104129190610cbd565b67ffffffffffffffff16846040015167ffffffffffffffff1611155b1561043d576002915050610481565b801580159061046c57507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114155b1561047b576001915050610481565b60009150505b92915050565b60008054604080517f861e1ca5000000000000000000000000000000000000000000000000000000008152855163ffffffff166004820152602086015160248201529085015167ffffffffffffffff16604482015273ffffffffffffffffffffffffffffffffffffffff8481166064830152620100009092049091169063861e1ca590608401602060405180830381865afa925050508015610564575060408051601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016820190925261056191810190610cda565b60015b61057057506000610481565b9050610481565b60006105a17fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61035490565b905073ffffffffffffffffffffffffffffffffffffffff81166105fa5773ffffffffffffffffffffffffffffffffffffffff7fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61035561061c565b3373ffffffffffffffffffffffffffffffffffffffff82161461061c57600080fd5b600054610100900460ff161580801561063c5750600054600160ff909116105b806106565750303b158015610656575060005460ff166001145b6106e7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a656400000000000000000000000000000000000060648201526084015b60405180910390fd5b600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001179055801561074557600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff166101001790555b61074e8361095e565b80156107b157600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b505050565b6000805485516040517f9d7f977500000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff878116600483015263ffffffff90921660248201528582166044820152620100009092041690639d7f977590606401602060405180830381865afa158015610843573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108679190610cda565b61087357506000610956565b600054604080517fc9a54a99000000000000000000000000000000000000000000000000000000008152875163ffffffff166004820152602088015160248201529087015167ffffffffffffffff16604482015273ffffffffffffffffffffffffffffffffffffffff8681166064830152620100009092049091169063c9a54a9990608401602060405180830381865afa158015610915573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109399190610cda565b61094557506000610956565b8161095257506000610956565b5060015b949350505050565b600054610100900460ff166109f5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201527f6e697469616c697a696e6700000000000000000000000000000000000000000060648201526084016106de565b6109fe81610a01565b50565b600054610100900460ff16610a98576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201527f6e697469616c697a696e6700000000000000000000000000000000000000000060648201526084016106de565b6000805473ffffffffffffffffffffffffffffffffffffffff90921662010000027fffffffffffffffffffff0000000000000000000000000000000000000000ffff909216919091179055565b67ffffffffffffffff811681146109fe57600080fd5b600060608284031215610b0d57600080fd5b6040516060810181811067ffffffffffffffff82111715610b57577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604052905080823563ffffffff81168114610b7157600080fd5b8152602083810135908201526040830135610b8b81610ae5565b6040919091015292915050565b803573ffffffffffffffffffffffffffffffffffffffff81168114610bbc57600080fd5b919050565b60008060808385031215610bd457600080fd5b610bde8484610afb565b9150610bec60608401610b98565b90509250929050565b6020810160048310610c30577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b91905290565b600060208284031215610c4857600080fd5b610c5182610b98565b9392505050565b60008060008060c08587031215610c6e57600080fd5b610c788686610afb565b9350610c8660608601610b98565b9250610c9460808601610b98565b9396929550929360a00135925050565b600060208284031215610cb657600080fd5b5051919050565b600060208284031215610ccf57600080fd5b8151610c5181610ae5565b600060208284031215610cec57600080fd5b81518015158114610c5157600080fdfea2646970667358221220163f262373e2299f486fa9bb3ba79263b6ce79b9d48696b15a23967fc426e57064736f6c63430008160033'

type EndpointV2ViewConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>

const isSuperArgs = (xs: EndpointV2ViewConstructorParams): xs is ConstructorParameters<typeof ContractFactory> =>
    xs.length > 1

export class EndpointV2View__factory extends ContractFactory {
    constructor(...args: EndpointV2ViewConstructorParams) {
        if (isSuperArgs(args)) {
            super(...args)
        } else {
            super(_abi, _bytecode, args[0])
        }
    }

    override deploy(overrides?: Overrides & { from?: PromiseOrValue<string> }): Promise<EndpointV2View> {
        return super.deploy(overrides || {}) as Promise<EndpointV2View>
    }
    override getDeployTransaction(overrides?: Overrides & { from?: PromiseOrValue<string> }): TransactionRequest {
        return super.getDeployTransaction(overrides || {})
    }
    override attach(address: string): EndpointV2View {
        return super.attach(address) as EndpointV2View
    }
    override connect(signer: Signer): EndpointV2View__factory {
        return super.connect(signer) as EndpointV2View__factory
    }

    static readonly bytecode = _bytecode
    static readonly abi = _abi
    static createInterface(): EndpointV2ViewInterface {
        return new utils.Interface(_abi) as EndpointV2ViewInterface
    }
    static connect(address: string, signerOrProvider: Signer | Provider): EndpointV2View {
        return new Contract(address, _abi, signerOrProvider) as EndpointV2View
    }
}
