/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, BigNumberish, Overrides } from 'ethers'
import type { Provider, TransactionRequest } from '@ethersproject/providers'
import type { PromiseOrValue } from '../common'
import type { ExecutorFeeLib, ExecutorFeeLibInterface } from '../ExecutorFeeLib'

const _abi = [
    {
        inputs: [
            {
                internalType: 'uint32',
                name: '_localEidV2',
                type: 'uint32',
            },
            {
                internalType: 'uint256',
                name: '_nativeDecimalsRate',
                type: 'uint256',
            },
        ],
        stateMutability: 'nonpayable',
        type: 'constructor',
    },
    {
        inputs: [
            {
                internalType: 'uint32',
                name: 'eid',
                type: 'uint32',
            },
        ],
        name: 'Executor_EidNotSupported',
        type: 'error',
    },
    {
        inputs: [
            {
                internalType: 'uint256',
                name: 'cursor',
                type: 'uint256',
            },
        ],
        name: 'Executor_InvalidExecutorOptions',
        type: 'error',
    },
    {
        inputs: [],
        name: 'Executor_InvalidLzComposeOption',
        type: 'error',
    },
    {
        inputs: [],
        name: 'Executor_InvalidLzReadOption',
        type: 'error',
    },
    {
        inputs: [],
        name: 'Executor_InvalidLzReceiveOption',
        type: 'error',
    },
    {
        inputs: [],
        name: 'Executor_InvalidNativeDropOption',
        type: 'error',
    },
    {
        inputs: [
            {
                internalType: 'uint256',
                name: 'amount',
                type: 'uint256',
            },
            {
                internalType: 'uint256',
                name: 'cap',
                type: 'uint256',
            },
        ],
        name: 'Executor_NativeAmountExceedsCap',
        type: 'error',
    },
    {
        inputs: [],
        name: 'Executor_NoOptions',
        type: 'error',
    },
    {
        inputs: [
            {
                internalType: 'uint8',
                name: 'optionType',
                type: 'uint8',
            },
        ],
        name: 'Executor_UnsupportedOptionType',
        type: 'error',
    },
    {
        inputs: [],
        name: 'Executor_ZeroCalldataSizeProvided',
        type: 'error',
    },
    {
        inputs: [],
        name: 'Executor_ZeroLzComposeGasProvided',
        type: 'error',
    },
    {
        inputs: [],
        name: 'Executor_ZeroLzReceiveGasProvided',
        type: 'error',
    },
    {
        inputs: [
            {
                internalType: 'address',
                name: '_to',
                type: 'address',
            },
            {
                internalType: 'uint256',
                name: '_value',
                type: 'uint256',
            },
        ],
        name: 'Transfer_NativeFailed',
        type: 'error',
    },
    {
        inputs: [],
        name: 'Transfer_ToAddressIsZero',
        type: 'error',
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: 'address',
                name: 'previousOwner',
                type: 'address',
            },
            {
                indexed: true,
                internalType: 'address',
                name: 'newOwner',
                type: 'address',
            },
        ],
        name: 'OwnershipTransferred',
        type: 'event',
    },
    {
        inputs: [
            {
                components: [
                    {
                        internalType: 'address',
                        name: 'priceFeed',
                        type: 'address',
                    },
                    {
                        internalType: 'address',
                        name: 'sender',
                        type: 'address',
                    },
                    {
                        internalType: 'uint16',
                        name: 'defaultMultiplierBps',
                        type: 'uint16',
                    },
                ],
                internalType: 'struct IExecutorFeeLib.FeeParamsForRead',
                name: '_params',
                type: 'tuple',
            },
            {
                components: [
                    {
                        internalType: 'uint64',
                        name: 'lzReceiveBaseGas',
                        type: 'uint64',
                    },
                    {
                        internalType: 'uint16',
                        name: 'multiplierBps',
                        type: 'uint16',
                    },
                    {
                        internalType: 'uint128',
                        name: 'floorMarginUSD',
                        type: 'uint128',
                    },
                    {
                        internalType: 'uint128',
                        name: 'nativeCap',
                        type: 'uint128',
                    },
                    {
                        internalType: 'uint64',
                        name: 'lzComposeBaseGas',
                        type: 'uint64',
                    },
                ],
                internalType: 'struct IExecutor.DstConfig',
                name: '_dstConfig',
                type: 'tuple',
            },
            {
                internalType: 'bytes',
                name: '_options',
                type: 'bytes',
            },
        ],
        name: 'getFee',
        outputs: [
            {
                internalType: 'uint256',
                name: 'fee',
                type: 'uint256',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [
            {
                components: [
                    {
                        internalType: 'address',
                        name: 'priceFeed',
                        type: 'address',
                    },
                    {
                        internalType: 'uint32',
                        name: 'dstEid',
                        type: 'uint32',
                    },
                    {
                        internalType: 'address',
                        name: 'sender',
                        type: 'address',
                    },
                    {
                        internalType: 'uint256',
                        name: 'calldataSize',
                        type: 'uint256',
                    },
                    {
                        internalType: 'uint16',
                        name: 'defaultMultiplierBps',
                        type: 'uint16',
                    },
                ],
                internalType: 'struct IExecutorFeeLib.FeeParams',
                name: '_params',
                type: 'tuple',
            },
            {
                components: [
                    {
                        internalType: 'uint64',
                        name: 'lzReceiveBaseGas',
                        type: 'uint64',
                    },
                    {
                        internalType: 'uint16',
                        name: 'multiplierBps',
                        type: 'uint16',
                    },
                    {
                        internalType: 'uint128',
                        name: 'floorMarginUSD',
                        type: 'uint128',
                    },
                    {
                        internalType: 'uint128',
                        name: 'nativeCap',
                        type: 'uint128',
                    },
                    {
                        internalType: 'uint64',
                        name: 'lzComposeBaseGas',
                        type: 'uint64',
                    },
                ],
                internalType: 'struct IExecutor.DstConfig',
                name: '_dstConfig',
                type: 'tuple',
            },
            {
                internalType: 'bytes',
                name: '_options',
                type: 'bytes',
            },
        ],
        name: 'getFee',
        outputs: [
            {
                internalType: 'uint256',
                name: 'fee',
                type: 'uint256',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [
            {
                components: [
                    {
                        internalType: 'address',
                        name: 'priceFeed',
                        type: 'address',
                    },
                    {
                        internalType: 'uint32',
                        name: 'dstEid',
                        type: 'uint32',
                    },
                    {
                        internalType: 'address',
                        name: 'sender',
                        type: 'address',
                    },
                    {
                        internalType: 'uint256',
                        name: 'calldataSize',
                        type: 'uint256',
                    },
                    {
                        internalType: 'uint16',
                        name: 'defaultMultiplierBps',
                        type: 'uint16',
                    },
                ],
                internalType: 'struct IExecutorFeeLib.FeeParams',
                name: '_params',
                type: 'tuple',
            },
            {
                components: [
                    {
                        internalType: 'uint64',
                        name: 'lzReceiveBaseGas',
                        type: 'uint64',
                    },
                    {
                        internalType: 'uint16',
                        name: 'multiplierBps',
                        type: 'uint16',
                    },
                    {
                        internalType: 'uint128',
                        name: 'floorMarginUSD',
                        type: 'uint128',
                    },
                    {
                        internalType: 'uint128',
                        name: 'nativeCap',
                        type: 'uint128',
                    },
                    {
                        internalType: 'uint64',
                        name: 'lzComposeBaseGas',
                        type: 'uint64',
                    },
                ],
                internalType: 'struct IExecutor.DstConfig',
                name: '_dstConfig',
                type: 'tuple',
            },
            {
                internalType: 'bytes',
                name: '_options',
                type: 'bytes',
            },
        ],
        name: 'getFeeOnSend',
        outputs: [
            {
                internalType: 'uint256',
                name: 'fee',
                type: 'uint256',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [
            {
                components: [
                    {
                        internalType: 'address',
                        name: 'priceFeed',
                        type: 'address',
                    },
                    {
                        internalType: 'address',
                        name: 'sender',
                        type: 'address',
                    },
                    {
                        internalType: 'uint16',
                        name: 'defaultMultiplierBps',
                        type: 'uint16',
                    },
                ],
                internalType: 'struct IExecutorFeeLib.FeeParamsForRead',
                name: '_params',
                type: 'tuple',
            },
            {
                components: [
                    {
                        internalType: 'uint64',
                        name: 'lzReceiveBaseGas',
                        type: 'uint64',
                    },
                    {
                        internalType: 'uint16',
                        name: 'multiplierBps',
                        type: 'uint16',
                    },
                    {
                        internalType: 'uint128',
                        name: 'floorMarginUSD',
                        type: 'uint128',
                    },
                    {
                        internalType: 'uint128',
                        name: 'nativeCap',
                        type: 'uint128',
                    },
                    {
                        internalType: 'uint64',
                        name: 'lzComposeBaseGas',
                        type: 'uint64',
                    },
                ],
                internalType: 'struct IExecutor.DstConfig',
                name: '_dstConfig',
                type: 'tuple',
            },
            {
                internalType: 'bytes',
                name: '_options',
                type: 'bytes',
            },
        ],
        name: 'getFeeOnSend',
        outputs: [
            {
                internalType: 'uint256',
                name: 'fee',
                type: 'uint256',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [],
        name: 'owner',
        outputs: [
            {
                internalType: 'address',
                name: '',
                type: 'address',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [],
        name: 'renounceOwnership',
        outputs: [],
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        inputs: [
            {
                internalType: 'address',
                name: 'newOwner',
                type: 'address',
            },
        ],
        name: 'transferOwnership',
        outputs: [],
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        inputs: [],
        name: 'version',
        outputs: [
            {
                internalType: 'uint64',
                name: 'major',
                type: 'uint64',
            },
            {
                internalType: 'uint8',
                name: 'minor',
                type: 'uint8',
            },
        ],
        stateMutability: 'pure',
        type: 'function',
    },
    {
        inputs: [
            {
                internalType: 'address',
                name: '_token',
                type: 'address',
            },
            {
                internalType: 'address',
                name: '_to',
                type: 'address',
            },
            {
                internalType: 'uint256',
                name: '_amount',
                type: 'uint256',
            },
        ],
        name: 'withdrawToken',
        outputs: [],
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        stateMutability: 'payable',
        type: 'receive',
    },
] as const

const _bytecode =
    '0x60c06040523480156200001157600080fd5b5060405162001ec038038062001ec08339810160408190526200003491620000a3565b6200003f3362000053565b63ffffffff90911660a052608052620000dc565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60008060408385031215620000b757600080fd5b825163ffffffff81168114620000cc57600080fd5b6020939093015192949293505050565b60805160a051611db7620001096000396000818161024b0152610301015260006108f80152611db76000f3fe60806040526004361061009a5760003560e01c8063566ef76211610069578063715018a61161004e578063715018a61461017c5780638da5cb5b14610191578063f2fde38b146101c657600080fd5b8063566ef7621461013c578063650037841461015c57600080fd5b806301e33667146100a6578063337c7a9e146100c8578063434ee016146100fb57806354fd4d501461011b57600080fd5b366100a157005b600080fd5b3480156100b257600080fd5b506100c66100c13660046117f3565b6101e6565b005b3480156100d457600080fd5b506100e86100e3366004611890565b6101fe565b6040519081526020015b60405180910390f35b34801561010757600080fd5b506100e86101163660046118fc565b61042c565b34801561012757600080fd5b506040805160018082526020820152016100f2565b34801561014857600080fd5b506100e86101573660046118fc565b610652565b34801561016857600080fd5b506100e8610177366004611890565b610669565b34801561018857600080fd5b506100c6610677565b34801561019d57600080fd5b5060005460405173ffffffffffffffffffffffffffffffffffffffff90911681526020016100f2565b3480156101d257600080fd5b506100c66101e1366004611949565b61068b565b6101ee610742565b6101f98383836107c3565b505050565b600061020d602085018561196b565b67ffffffffffffffff1660000361027d576040517fc3baa0b700000000000000000000000000000000000000000000000000000000815263ffffffff7f00000000000000000000000000000000000000000000000000000000000000001660048201526024015b60405180910390fd5b600080806102bb60018261029460208b018b61196b565b6102a460a08c0160808d0161196b565b6102b460808d0160608e016119b3565b8b8b6107f3565b9194509250905060008080806102d460208d018d611949565b6040517f88a4124c00000000000000000000000000000000000000000000000000000000815263ffffffff7f000000000000000000000000000000000000000000000000000000000000000081166004830152871660248201526044810188905273ffffffffffffffffffffffffffffffffffffffff91909116906388a4124c90606401608060405180830381865afa158015610375573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061039991906119d0565b9296509094509250905060006103b560408d0160208e01611a25565b61ffff16156103d3576103ce60408d0160208e01611a25565b6103e3565b6103e360608e0160408f01611a25565b905061040385828e60400160208101906103fd91906119b3565b85610885565b985061041188858584610966565b61041b908a611a78565b9d9c50505050505050505050505050565b600061043b602085018561196b565b67ffffffffffffffff166000036104975761045c6040860160208701611a91565b6040517fc3baa0b700000000000000000000000000000000000000000000000000000000815263ffffffff9091166004820152602401610274565b6000806104f4816104c06104b160408b0160208c01611a91565b61753063ffffffff9091161090565b6104cd60208a018a61196b565b6104dd60a08b0160808c0161196b565b6104ed60808c0160608d016119b3565b8a8a6107f3565b509092509050600080808061050c60208c018c611949565b73ffffffffffffffffffffffffffffffffffffffff166388a4124c61053760408e0160208f01611a91565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b16815263ffffffff91909116600482015260608e0135602482015260448101889052606401608060405180830381865afa1580156105a2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105c691906119d0565b9296509094509250905060006105e260408c0160208d01611a25565b61ffff1615610600576105fb60408c0160208d01611a25565b610610565b61061060a08d0160808e01611a25565b905061062a85828d60400160208101906103fd91906119b3565b975061063887858584610966565b6106429089611a78565b9c9b505050505050505050505050565b60006106608585858561042c565b95945050505050565b6000610660858585856101fe565b61067f610742565b61068960006109c5565b565b610693610742565b73ffffffffffffffffffffffffffffffffffffffff8116610736576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401610274565b61073f816109c5565b50565b60005473ffffffffffffffffffffffffffffffffffffffff163314610689576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610274565b73ffffffffffffffffffffffffffffffffffffffff83166107e8576101f98282610a3a565b6101f9838383610b40565b60008060008061080686868d8d8b610bae565b805160608201516080830151919650935090915061082e9067ffffffffffffffff8a16611ab7565b60208201516108479067ffffffffffffffff8c16611a78565b6108519190611a78565b925080604001511561087757606461086a846066611ab7565b6108749190611ace565b92505b509750975097945050505050565b60008061271061089961ffff871688611ab7565b6108a39190611ace565b90506fffffffffffffffffffffffffffffffff831615806108d457506fffffffffffffffffffffffffffffffff8416155b156108e057905061095e565b600086846fffffffffffffffffffffffffffffffff167f0000000000000000000000000000000000000000000000000000000000000000876fffffffffffffffffffffffffffffffff166109349190611ab7565b61093e9190611ace565b6109489190611a78565b90508181116109575781610959565b805b925050505b949350505050565b6000841561095e576127108261ffff16846fffffffffffffffffffffffffffffffff16866fffffffffffffffffffffffffffffffff16886109a79190611ab7565b6109b19190611ace565b6109bb9190611ab7565b6106609190611ace565b6000805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b73ffffffffffffffffffffffffffffffffffffffff8216610a87576040517f6b7a931000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008273ffffffffffffffffffffffffffffffffffffffff168260405160006040518083038185875af1925050503d8060008114610ae1576040519150601f19603f3d011682016040523d82523d6000602084013e610ae6565b606091505b50509050806101f9576040517f465bc83400000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8416600482015260248101839052604401610274565b73ffffffffffffffffffffffffffffffffffffffff8216610b8d576040517f6b7a931000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6101f973ffffffffffffffffffffffffffffffffffffffff841683836111dc565b610be86040518060a001604052806000815260200160008152602001600015158152602001600063ffffffff168152602001600081525090565b6000859003610c22576040517e575ea100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600080805b87831015611088576000368180610c3f8d8d89611269565b9950919550935091508690507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60ff851601610d6a578a15610cb2576040517f052e551500000000000000000000000000000000000000000000000000000000815260ff85166004820152602401610274565b600080610cbf85856112bf565b915091508b8015610ce257506000816fffffffffffffffffffffffffffffffff16115b15610d1e576040517f052e551500000000000000000000000000000000000000000000000000000000815260ff87166004820152602401610274565b806fffffffffffffffffffffffffffffffff168a600001818151610d429190611a78565b905250610d616fffffffffffffffffffffffffffffffff831689611a78565b9750505061107f565b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe60ff851601610e0e578a15610dd1576040517f052e551500000000000000000000000000000000000000000000000000000000815260ff85166004820152602401610274565b6000610ddd848461133d565b509050806fffffffffffffffffffffffffffffffff1689600001818151610e049190611a78565b90525061107f9050565b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffd60ff851601610f3e578915610e75576040517f052e551500000000000000000000000000000000000000000000000000000000815260ff85166004820152602401610274565b600080610e828585611394565b9250925050816fffffffffffffffffffffffffffffffff16600003610ed3576040517fa169d0e100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b806fffffffffffffffffffffffffffffffff168a600001818151610ef79190611a78565b90525060208a0180516fffffffffffffffffffffffffffffffff84169190610f20908390611a78565b90525060808a01805190610f3382611b09565b81525050505061107f565b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc60ff851601610f74576001604089015261107f565b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffb60ff851601611048578a610fda576040517f052e551500000000000000000000000000000000000000000000000000000000815260ff85166004820152602401610274565b6000806000610fe98686611421565b925092509250806fffffffffffffffffffffffffffffffff168b6000018181516110139190611a78565b9052506110326fffffffffffffffffffffffffffffffff84168a611a78565b985061103e8289611b41565b975050505061107f565b6040517f052e551500000000000000000000000000000000000000000000000000000000815260ff85166004820152602401610274565b50505050610c27565b8288146110c4576040517f990776ea00000000000000000000000000000000000000000000000000000000815260048101849052602401610274565b83516fffffffffffffffffffffffffffffffff8616101561112e5783516040517e84ce0200000000000000000000000000000000000000000000000000000000815260048101919091526fffffffffffffffffffffffffffffffff86166024820152604401610274565b81600003611168576040517fe5eb8f3000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b868015611179575063ffffffff8116155b156111b0576040517f6cc33f0600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b81846020018181516111c29190611a78565b90525063ffffffff16606084015250909695505050505050565b6040805173ffffffffffffffffffffffffffffffffffffffff8416602482015260448082018490528251808303909101815260649091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fa9059cbb000000000000000000000000000000000000000000000000000000001790526101f99084906114a5565b60003681600184018161127d8888846115b4565b6002929092019190506112918888846115db565b94506001820161ffff821683016112aa81838b8d611b65565b979b909a50969850505061ffff160193505050565b600080601083148015906112d4575060208314155b1561130b576040517f4796aee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61131784846000611600565b915060208314611328576000611334565b61133484846010611600565b90509250929050565b6000806030831461137a576040517fc3a1858e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61138684846000611600565b915061133484846010611627565b60008080601284148015906113aa575060228414155b156113e1576040517f8b4aa70b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6113ed858560006115b4565b92506113fb85856002611600565b91506022841461140c576000611418565b61141885856012611600565b90509250925092565b6000808060148414801590611437575060248414155b1561146e576040517fdeb7fe4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61147a85856000611600565b925061148885856010611642565b915060248414611499576000611418565b61141885856014611600565b6000611507826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff166116699092919063ffffffff16565b90508051600014806115285750808060200190518101906115289190611b8f565b6101f9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f742073756363656564000000000000000000000000000000000000000000006064820152608401610274565b6000600282016115c681848688611b65565b6115cf91611bb1565b60f01c95945050505050565b60008383838181106115ef576115ef611bf9565b919091013560f81c95945050505050565b60006010820161161281848688611b65565b61161b91611c28565b60801c95945050505050565b60006020820161163981848688611b65565b61066091611c6e565b60006004820161165481848688611b65565b61165d91611caa565b60e01c95945050505050565b606061095e8484600085856000808673ffffffffffffffffffffffffffffffffffffffff16858760405161169d9190611d14565b60006040518083038185875af1925050503d80600081146116da576040519150601f19603f3d011682016040523d82523d6000602084013e6116df565b606091505b5091509150610959878383876060831561178157825160000361177a5773ffffffffffffffffffffffffffffffffffffffff85163b61177a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610274565b508161095e565b61095e83838151156117965781518083602001fd5b806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102749190611d30565b803573ffffffffffffffffffffffffffffffffffffffff811681146117ee57600080fd5b919050565b60008060006060848603121561180857600080fd5b611811846117ca565b925061181f602085016117ca565b9150604084013590509250925092565b600060a0828403121561184157600080fd5b50919050565b60008083601f84011261185957600080fd5b50813567ffffffffffffffff81111561187157600080fd5b60208301915083602082850101111561188957600080fd5b9250929050565b6000806000808486036101208112156118a857600080fd5b60608112156118b657600080fd5b508493506118c7866060870161182f565b925061010085013567ffffffffffffffff8111156118e457600080fd5b6118f087828801611847565b95989497509550505050565b600080600080610160858703121561191357600080fd5b61191d868661182f565b935061192c8660a0870161182f565b925061014085013567ffffffffffffffff8111156118e457600080fd5b60006020828403121561195b57600080fd5b611964826117ca565b9392505050565b60006020828403121561197d57600080fd5b813567ffffffffffffffff8116811461196457600080fd5b6fffffffffffffffffffffffffffffffff8116811461073f57600080fd5b6000602082840312156119c557600080fd5b813561196481611995565b600080600080608085870312156119e657600080fd5b8451935060208501516119f881611995565b6040860151909350611a0981611995565b6060860151909250611a1a81611995565b939692955090935050565b600060208284031215611a3757600080fd5b813561ffff8116811461196457600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b80820180821115611a8b57611a8b611a49565b92915050565b600060208284031215611aa357600080fd5b813563ffffffff8116811461196457600080fd5b8082028115828204841417611a8b57611a8b611a49565b600082611b04577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500490565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611b3a57611b3a611a49565b5060010190565b63ffffffff818116838216019080821115611b5e57611b5e611a49565b5092915050565b60008085851115611b7557600080fd5b83861115611b8257600080fd5b5050820193919092039150565b600060208284031215611ba157600080fd5b8151801515811461196457600080fd5b7fffff0000000000000000000000000000000000000000000000000000000000008135818116916002851015611bf15780818660020360031b1b83161692505b505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7fffffffffffffffffffffffffffffffff000000000000000000000000000000008135818116916010851015611bf15760109490940360031b84901b1690921692915050565b80356020831015611a8b577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff602084900360031b1b1692915050565b7fffffffff000000000000000000000000000000000000000000000000000000008135818116916004851015611bf15760049490940360031b84901b1690921692915050565b60005b83811015611d0b578181015183820152602001611cf3565b50506000910152565b60008251611d26818460208701611cf0565b9190910192915050565b6020815260008251806020840152611d4f816040850160208701611cf0565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016919091016040019291505056fea264697066735822122002027a1c65da4d2341ca67ee5e46f91da95122fdc1a90ba2e31bc0473ad6717864736f6c63430008160033'

type ExecutorFeeLibConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>

const isSuperArgs = (xs: ExecutorFeeLibConstructorParams): xs is ConstructorParameters<typeof ContractFactory> =>
    xs.length > 1

export class ExecutorFeeLib__factory extends ContractFactory {
    constructor(...args: ExecutorFeeLibConstructorParams) {
        if (isSuperArgs(args)) {
            super(...args)
        } else {
            super(_abi, _bytecode, args[0])
        }
    }

    override deploy(
        _localEidV2: PromiseOrValue<BigNumberish>,
        _nativeDecimalsRate: PromiseOrValue<BigNumberish>,
        overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ExecutorFeeLib> {
        return super.deploy(_localEidV2, _nativeDecimalsRate, overrides || {}) as Promise<ExecutorFeeLib>
    }
    override getDeployTransaction(
        _localEidV2: PromiseOrValue<BigNumberish>,
        _nativeDecimalsRate: PromiseOrValue<BigNumberish>,
        overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): TransactionRequest {
        return super.getDeployTransaction(_localEidV2, _nativeDecimalsRate, overrides || {})
    }
    override attach(address: string): ExecutorFeeLib {
        return super.attach(address) as ExecutorFeeLib
    }
    override connect(signer: Signer): ExecutorFeeLib__factory {
        return super.connect(signer) as ExecutorFeeLib__factory
    }

    static readonly bytecode = _bytecode
    static readonly abi = _abi
    static createInterface(): ExecutorFeeLibInterface {
        return new utils.Interface(_abi) as ExecutorFeeLibInterface
    }
    static connect(address: string, signerOrProvider: Signer | Provider): ExecutorFeeLib {
        return new Contract(address, _abi, signerOrProvider) as ExecutorFeeLib
    }
}
