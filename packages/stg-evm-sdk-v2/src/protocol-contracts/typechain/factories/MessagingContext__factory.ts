/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from 'ethers'
import type { Provider } from '@ethersproject/providers'
import type { MessagingContext, MessagingContextInterface } from '../MessagingContext'

const _abi = [
    {
        inputs: [],
        name: 'getSendContext',
        outputs: [
            {
                internalType: 'uint32',
                name: '',
                type: 'uint32',
            },
            {
                internalType: 'address',
                name: '',
                type: 'address',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [],
        name: 'isSendingMessage',
        outputs: [
            {
                internalType: 'bool',
                name: '',
                type: 'bool',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
] as const

export class MessagingContext__factory {
    static readonly abi = _abi
    static createInterface(): MessagingContextInterface {
        return new utils.Interface(_abi) as MessagingContextInterface
    }
    static connect(address: string, signerOrProvider: Signer | Provider): MessagingContext {
        return new Contract(address, _abi, signerOrProvider) as MessagingContext
    }
}
