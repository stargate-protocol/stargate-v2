/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from 'ethers'
import type { Provider } from '@ethersproject/providers'
import type { MessageLibManager, MessageLibManagerInterface } from '../MessageLibManager'

const _abi = [
    {
        inputs: [],
        name: 'LZ_AlreadyRegistered',
        type: 'error',
    },
    {
        inputs: [],
        name: 'LZ_DefaultReceiveLibUnavailable',
        type: 'error',
    },
    {
        inputs: [],
        name: 'LZ_DefaultSendLibUnavailable',
        type: 'error',
    },
    {
        inputs: [],
        name: 'LZ_InvalidExpiry',
        type: 'error',
    },
    {
        inputs: [],
        name: 'LZ_OnlyNonDefaultLib',
        type: 'error',
    },
    {
        inputs: [],
        name: 'LZ_OnlyReceiveLib',
        type: 'error',
    },
    {
        inputs: [],
        name: 'LZ_OnlyRegisteredLib',
        type: 'error',
    },
    {
        inputs: [],
        name: 'LZ_OnlyRegisteredOrDefaultLib',
        type: 'error',
    },
    {
        inputs: [],
        name: 'LZ_OnlySendLib',
        type: 'error',
    },
    {
        inputs: [],
        name: 'LZ_SameValue',
        type: 'error',
    },
    {
        inputs: [],
        name: 'LZ_UnsupportedEid',
        type: 'error',
    },
    {
        inputs: [],
        name: 'LZ_UnsupportedInterface',
        type: 'error',
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: 'uint32',
                name: 'eid',
                type: 'uint32',
            },
            {
                indexed: false,
                internalType: 'address',
                name: 'newLib',
                type: 'address',
            },
        ],
        name: 'DefaultReceiveLibrarySet',
        type: 'event',
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: 'uint32',
                name: 'eid',
                type: 'uint32',
            },
            {
                indexed: false,
                internalType: 'address',
                name: 'oldLib',
                type: 'address',
            },
            {
                indexed: false,
                internalType: 'uint256',
                name: 'expiry',
                type: 'uint256',
            },
        ],
        name: 'DefaultReceiveLibraryTimeoutSet',
        type: 'event',
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: 'uint32',
                name: 'eid',
                type: 'uint32',
            },
            {
                indexed: false,
                internalType: 'address',
                name: 'newLib',
                type: 'address',
            },
        ],
        name: 'DefaultSendLibrarySet',
        type: 'event',
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: 'address',
                name: 'newLib',
                type: 'address',
            },
        ],
        name: 'LibraryRegistered',
        type: 'event',
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: 'address',
                name: 'previousOwner',
                type: 'address',
            },
            {
                indexed: true,
                internalType: 'address',
                name: 'newOwner',
                type: 'address',
            },
        ],
        name: 'OwnershipTransferred',
        type: 'event',
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: 'address',
                name: 'receiver',
                type: 'address',
            },
            {
                indexed: false,
                internalType: 'uint32',
                name: 'eid',
                type: 'uint32',
            },
            {
                indexed: false,
                internalType: 'address',
                name: 'newLib',
                type: 'address',
            },
        ],
        name: 'ReceiveLibrarySet',
        type: 'event',
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: 'address',
                name: 'receiver',
                type: 'address',
            },
            {
                indexed: false,
                internalType: 'uint32',
                name: 'eid',
                type: 'uint32',
            },
            {
                indexed: false,
                internalType: 'address',
                name: 'oldLib',
                type: 'address',
            },
            {
                indexed: false,
                internalType: 'uint256',
                name: 'timeout',
                type: 'uint256',
            },
        ],
        name: 'ReceiveLibraryTimeoutSet',
        type: 'event',
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: 'address',
                name: 'sender',
                type: 'address',
            },
            {
                indexed: false,
                internalType: 'uint32',
                name: 'eid',
                type: 'uint32',
            },
            {
                indexed: false,
                internalType: 'address',
                name: 'newLib',
                type: 'address',
            },
        ],
        name: 'SendLibrarySet',
        type: 'event',
    },
    {
        inputs: [],
        name: 'blockedLibrary',
        outputs: [
            {
                internalType: 'address',
                name: '',
                type: 'address',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [
            {
                internalType: 'uint32',
                name: 'srcEid',
                type: 'uint32',
            },
        ],
        name: 'defaultReceiveLibrary',
        outputs: [
            {
                internalType: 'address',
                name: 'lib',
                type: 'address',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [
            {
                internalType: 'uint32',
                name: 'srcEid',
                type: 'uint32',
            },
        ],
        name: 'defaultReceiveLibraryTimeout',
        outputs: [
            {
                internalType: 'address',
                name: 'lib',
                type: 'address',
            },
            {
                internalType: 'uint256',
                name: 'expiry',
                type: 'uint256',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [
            {
                internalType: 'uint32',
                name: 'dstEid',
                type: 'uint32',
            },
        ],
        name: 'defaultSendLibrary',
        outputs: [
            {
                internalType: 'address',
                name: 'lib',
                type: 'address',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [
            {
                internalType: 'address',
                name: '_oapp',
                type: 'address',
            },
            {
                internalType: 'address',
                name: '_lib',
                type: 'address',
            },
            {
                internalType: 'uint32',
                name: '_eid',
                type: 'uint32',
            },
            {
                internalType: 'uint32',
                name: '_configType',
                type: 'uint32',
            },
        ],
        name: 'getConfig',
        outputs: [
            {
                internalType: 'bytes',
                name: 'config',
                type: 'bytes',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [
            {
                internalType: 'address',
                name: '_receiver',
                type: 'address',
            },
            {
                internalType: 'uint32',
                name: '_srcEid',
                type: 'uint32',
            },
        ],
        name: 'getReceiveLibrary',
        outputs: [
            {
                internalType: 'address',
                name: 'lib',
                type: 'address',
            },
            {
                internalType: 'bool',
                name: 'isDefault',
                type: 'bool',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [],
        name: 'getRegisteredLibraries',
        outputs: [
            {
                internalType: 'address[]',
                name: '',
                type: 'address[]',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [
            {
                internalType: 'address',
                name: '_sender',
                type: 'address',
            },
            {
                internalType: 'uint32',
                name: '_dstEid',
                type: 'uint32',
            },
        ],
        name: 'getSendLibrary',
        outputs: [
            {
                internalType: 'address',
                name: 'lib',
                type: 'address',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [
            {
                internalType: 'address',
                name: '_sender',
                type: 'address',
            },
            {
                internalType: 'uint32',
                name: '_dstEid',
                type: 'uint32',
            },
        ],
        name: 'isDefaultSendLibrary',
        outputs: [
            {
                internalType: 'bool',
                name: '',
                type: 'bool',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [
            {
                internalType: 'address',
                name: 'lib',
                type: 'address',
            },
        ],
        name: 'isRegisteredLibrary',
        outputs: [
            {
                internalType: 'bool',
                name: '',
                type: 'bool',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [
            {
                internalType: 'uint32',
                name: '_eid',
                type: 'uint32',
            },
        ],
        name: 'isSupportedEid',
        outputs: [
            {
                internalType: 'bool',
                name: '',
                type: 'bool',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [
            {
                internalType: 'address',
                name: '_receiver',
                type: 'address',
            },
            {
                internalType: 'uint32',
                name: '_srcEid',
                type: 'uint32',
            },
            {
                internalType: 'address',
                name: '_actualReceiveLib',
                type: 'address',
            },
        ],
        name: 'isValidReceiveLibrary',
        outputs: [
            {
                internalType: 'bool',
                name: '',
                type: 'bool',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [],
        name: 'owner',
        outputs: [
            {
                internalType: 'address',
                name: '',
                type: 'address',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [
            {
                internalType: 'address',
                name: 'receiver',
                type: 'address',
            },
            {
                internalType: 'uint32',
                name: 'srcEid',
                type: 'uint32',
            },
        ],
        name: 'receiveLibraryTimeout',
        outputs: [
            {
                internalType: 'address',
                name: 'lib',
                type: 'address',
            },
            {
                internalType: 'uint256',
                name: 'expiry',
                type: 'uint256',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [
            {
                internalType: 'address',
                name: '_lib',
                type: 'address',
            },
        ],
        name: 'registerLibrary',
        outputs: [],
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        inputs: [],
        name: 'renounceOwnership',
        outputs: [],
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        inputs: [
            {
                internalType: 'address',
                name: '_oapp',
                type: 'address',
            },
            {
                internalType: 'address',
                name: '_lib',
                type: 'address',
            },
            {
                components: [
                    {
                        internalType: 'uint32',
                        name: 'eid',
                        type: 'uint32',
                    },
                    {
                        internalType: 'uint32',
                        name: 'configType',
                        type: 'uint32',
                    },
                    {
                        internalType: 'bytes',
                        name: 'config',
                        type: 'bytes',
                    },
                ],
                internalType: 'struct SetConfigParam[]',
                name: '_params',
                type: 'tuple[]',
            },
        ],
        name: 'setConfig',
        outputs: [],
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        inputs: [
            {
                internalType: 'uint32',
                name: '_eid',
                type: 'uint32',
            },
            {
                internalType: 'address',
                name: '_newLib',
                type: 'address',
            },
            {
                internalType: 'uint256',
                name: '_gracePeriod',
                type: 'uint256',
            },
        ],
        name: 'setDefaultReceiveLibrary',
        outputs: [],
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        inputs: [
            {
                internalType: 'uint32',
                name: '_eid',
                type: 'uint32',
            },
            {
                internalType: 'address',
                name: '_lib',
                type: 'address',
            },
            {
                internalType: 'uint256',
                name: '_expiry',
                type: 'uint256',
            },
        ],
        name: 'setDefaultReceiveLibraryTimeout',
        outputs: [],
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        inputs: [
            {
                internalType: 'uint32',
                name: '_eid',
                type: 'uint32',
            },
            {
                internalType: 'address',
                name: '_newLib',
                type: 'address',
            },
        ],
        name: 'setDefaultSendLibrary',
        outputs: [],
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        inputs: [
            {
                internalType: 'address',
                name: '_oapp',
                type: 'address',
            },
            {
                internalType: 'uint32',
                name: '_eid',
                type: 'uint32',
            },
            {
                internalType: 'address',
                name: '_newLib',
                type: 'address',
            },
            {
                internalType: 'uint256',
                name: '_gracePeriod',
                type: 'uint256',
            },
        ],
        name: 'setReceiveLibrary',
        outputs: [],
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        inputs: [
            {
                internalType: 'address',
                name: '_oapp',
                type: 'address',
            },
            {
                internalType: 'uint32',
                name: '_eid',
                type: 'uint32',
            },
            {
                internalType: 'address',
                name: '_lib',
                type: 'address',
            },
            {
                internalType: 'uint256',
                name: '_expiry',
                type: 'uint256',
            },
        ],
        name: 'setReceiveLibraryTimeout',
        outputs: [],
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        inputs: [
            {
                internalType: 'address',
                name: '_oapp',
                type: 'address',
            },
            {
                internalType: 'uint32',
                name: '_eid',
                type: 'uint32',
            },
            {
                internalType: 'address',
                name: '_newLib',
                type: 'address',
            },
        ],
        name: 'setSendLibrary',
        outputs: [],
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        inputs: [
            {
                internalType: 'address',
                name: 'newOwner',
                type: 'address',
            },
        ],
        name: 'transferOwnership',
        outputs: [],
        stateMutability: 'nonpayable',
        type: 'function',
    },
] as const

export class MessageLibManager__factory {
    static readonly abi = _abi
    static createInterface(): MessageLibManagerInterface {
        return new utils.Interface(_abi) as MessageLibManagerInterface
    }
    static connect(address: string, signerOrProvider: Signer | Provider): MessageLibManager {
        return new Contract(address, _abi, signerOrProvider) as MessageLibManager
    }
}
