/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from 'ethers'
import type { Provider } from '@ethersproject/providers'
import type { PreCrime, PreCrimeInterface } from '../../precrime/PreCrime'

const _abi = [
    {
        inputs: [
            {
                internalType: 'bytes',
                name: 'crime',
                type: 'bytes',
            },
        ],
        name: 'CrimeFound',
        type: 'error',
    },
    {
        inputs: [
            {
                internalType: 'uint32',
                name: 'eid',
                type: 'uint32',
            },
            {
                internalType: 'bytes',
                name: 'reason',
                type: 'bytes',
            },
        ],
        name: 'InvalidSimulationResult',
        type: 'error',
    },
    {
        inputs: [],
        name: 'OnlyOffChain',
        type: 'error',
    },
    {
        inputs: [
            {
                internalType: 'uint256',
                name: 'max',
                type: 'uint256',
            },
            {
                internalType: 'uint256',
                name: 'actual',
                type: 'uint256',
            },
        ],
        name: 'PacketOversize',
        type: 'error',
    },
    {
        inputs: [],
        name: 'PacketUnsorted',
        type: 'error',
    },
    {
        inputs: [
            {
                internalType: 'bytes',
                name: 'reason',
                type: 'bytes',
            },
        ],
        name: 'SimulationFailed',
        type: 'error',
    },
    {
        inputs: [
            {
                internalType: 'uint32',
                name: 'eid',
                type: 'uint32',
            },
        ],
        name: 'SimulationResultNotFound',
        type: 'error',
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: 'address',
                name: 'previousOwner',
                type: 'address',
            },
            {
                indexed: true,
                internalType: 'address',
                name: 'newOwner',
                type: 'address',
            },
        ],
        name: 'OwnershipTransferred',
        type: 'event',
    },
    {
        inputs: [],
        name: 'buildSimulationResult',
        outputs: [
            {
                internalType: 'bytes',
                name: '',
                type: 'bytes',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [
            {
                internalType: 'bytes[]',
                name: '_packets',
                type: 'bytes[]',
            },
            {
                internalType: 'uint256[]',
                name: '_packetMsgValues',
                type: 'uint256[]',
            },
        ],
        name: 'getConfig',
        outputs: [
            {
                internalType: 'bytes',
                name: '',
                type: 'bytes',
            },
        ],
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        inputs: [],
        name: 'getPreCrimePeers',
        outputs: [
            {
                components: [
                    {
                        internalType: 'uint32',
                        name: 'eid',
                        type: 'uint32',
                    },
                    {
                        internalType: 'bytes32',
                        name: 'preCrime',
                        type: 'bytes32',
                    },
                    {
                        internalType: 'bytes32',
                        name: 'oApp',
                        type: 'bytes32',
                    },
                ],
                internalType: 'struct PreCrimePeer[]',
                name: '',
                type: 'tuple[]',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [],
        name: 'maxBatchSize',
        outputs: [
            {
                internalType: 'uint64',
                name: '',
                type: 'uint64',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [],
        name: 'oApp',
        outputs: [
            {
                internalType: 'address',
                name: '',
                type: 'address',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [],
        name: 'owner',
        outputs: [
            {
                internalType: 'address',
                name: '',
                type: 'address',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [
            {
                internalType: 'bytes[]',
                name: '_packets',
                type: 'bytes[]',
            },
            {
                internalType: 'uint256[]',
                name: '_packetMsgValues',
                type: 'uint256[]',
            },
            {
                internalType: 'bytes[]',
                name: '_simulations',
                type: 'bytes[]',
            },
        ],
        name: 'preCrime',
        outputs: [],
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        inputs: [],
        name: 'renounceOwnership',
        outputs: [],
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        inputs: [
            {
                internalType: 'uint64',
                name: '_maxBatchSize',
                type: 'uint64',
            },
        ],
        name: 'setMaxBatchSize',
        outputs: [],
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        inputs: [
            {
                components: [
                    {
                        internalType: 'uint32',
                        name: 'eid',
                        type: 'uint32',
                    },
                    {
                        internalType: 'bytes32',
                        name: 'preCrime',
                        type: 'bytes32',
                    },
                    {
                        internalType: 'bytes32',
                        name: 'oApp',
                        type: 'bytes32',
                    },
                ],
                internalType: 'struct PreCrimePeer[]',
                name: '_preCrimePeers',
                type: 'tuple[]',
            },
        ],
        name: 'setPreCrimePeers',
        outputs: [],
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        inputs: [
            {
                internalType: 'bytes[]',
                name: '_packets',
                type: 'bytes[]',
            },
            {
                internalType: 'uint256[]',
                name: '_packetMsgValues',
                type: 'uint256[]',
            },
        ],
        name: 'simulate',
        outputs: [
            {
                internalType: 'bytes',
                name: '',
                type: 'bytes',
            },
        ],
        stateMutability: 'payable',
        type: 'function',
    },
    {
        inputs: [],
        name: 'simulator',
        outputs: [
            {
                internalType: 'address',
                name: '',
                type: 'address',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [
            {
                internalType: 'address',
                name: 'newOwner',
                type: 'address',
            },
        ],
        name: 'transferOwnership',
        outputs: [],
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        inputs: [],
        name: 'version',
        outputs: [
            {
                internalType: 'uint64',
                name: 'major',
                type: 'uint64',
            },
            {
                internalType: 'uint8',
                name: 'minor',
                type: 'uint8',
            },
        ],
        stateMutability: 'pure',
        type: 'function',
    },
] as const

export class PreCrime__factory {
    static readonly abi = _abi
    static createInterface(): PreCrimeInterface {
        return new utils.Interface(_abi) as PreCrimeInterface
    }
    static connect(address: string, signerOrProvider: Signer | Provider): PreCrime {
        return new Contract(address, _abi, signerOrProvider) as PreCrime
    }
}
