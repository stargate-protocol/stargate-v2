/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from 'ethers'
import type { Provider } from '@ethersproject/providers'
import type { ILayerZeroPriceFeed, ILayerZeroPriceFeedInterface } from '../../interfaces/ILayerZeroPriceFeed'

const _abi = [
    {
        inputs: [
            {
                internalType: 'uint256',
                name: 'provided',
                type: 'uint256',
            },
            {
                internalType: 'uint256',
                name: 'required',
                type: 'uint256',
            },
        ],
        name: 'LZ_PriceFeed_InsufficientFee',
        type: 'error',
    },
    {
        inputs: [
            {
                internalType: 'uint32',
                name: 'l2Eid',
                type: 'uint32',
            },
        ],
        name: 'LZ_PriceFeed_NotAnOPStack',
        type: 'error',
    },
    {
        inputs: [],
        name: 'LZ_PriceFeed_OnlyPriceUpdater',
        type: 'error',
    },
    {
        inputs: [
            {
                internalType: 'uint32',
                name: '_dstEid',
                type: 'uint32',
            },
            {
                internalType: 'uint256',
                name: '_callDataSize',
                type: 'uint256',
            },
            {
                internalType: 'uint256',
                name: '_gas',
                type: 'uint256',
            },
        ],
        name: 'estimateFeeByEid',
        outputs: [
            {
                internalType: 'uint256',
                name: 'fee',
                type: 'uint256',
            },
            {
                internalType: 'uint128',
                name: 'priceRatio',
                type: 'uint128',
            },
            {
                internalType: 'uint128',
                name: 'priceRatioDenominator',
                type: 'uint128',
            },
            {
                internalType: 'uint128',
                name: 'nativePriceUSD',
                type: 'uint128',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [
            {
                internalType: 'uint32',
                name: '_dstEid',
                type: 'uint32',
            },
            {
                internalType: 'uint256',
                name: '_callDataSize',
                type: 'uint256',
            },
            {
                internalType: 'uint256',
                name: '_gas',
                type: 'uint256',
            },
        ],
        name: 'estimateFeeOnSend',
        outputs: [
            {
                internalType: 'uint256',
                name: 'fee',
                type: 'uint256',
            },
            {
                internalType: 'uint128',
                name: 'priceRatio',
                type: 'uint128',
            },
            {
                internalType: 'uint128',
                name: 'priceRatioDenominator',
                type: 'uint128',
            },
            {
                internalType: 'uint128',
                name: 'nativePriceUSD',
                type: 'uint128',
            },
        ],
        stateMutability: 'payable',
        type: 'function',
    },
    {
        inputs: [
            {
                internalType: 'uint32',
                name: '_dstEid',
                type: 'uint32',
            },
            {
                internalType: 'uint256',
                name: '_callDataSize',
                type: 'uint256',
            },
            {
                internalType: 'uint256',
                name: '_gas',
                type: 'uint256',
            },
        ],
        name: 'getFee',
        outputs: [
            {
                internalType: 'uint256',
                name: '',
                type: 'uint256',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [
            {
                internalType: 'uint32',
                name: '_dstEid',
                type: 'uint32',
            },
        ],
        name: 'getPrice',
        outputs: [
            {
                components: [
                    {
                        internalType: 'uint128',
                        name: 'priceRatio',
                        type: 'uint128',
                    },
                    {
                        internalType: 'uint64',
                        name: 'gasPriceInUnit',
                        type: 'uint64',
                    },
                    {
                        internalType: 'uint32',
                        name: 'gasPerByte',
                        type: 'uint32',
                    },
                ],
                internalType: 'struct ILayerZeroPriceFeed.Price',
                name: '',
                type: 'tuple',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [],
        name: 'getPriceRatioDenominator',
        outputs: [
            {
                internalType: 'uint128',
                name: '',
                type: 'uint128',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [],
        name: 'nativeTokenPriceUSD',
        outputs: [
            {
                internalType: 'uint128',
                name: '',
                type: 'uint128',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
] as const

export class ILayerZeroPriceFeed__factory {
    static readonly abi = _abi
    static createInterface(): ILayerZeroPriceFeedInterface {
        return new utils.Interface(_abi) as ILayerZeroPriceFeedInterface
    }
    static connect(address: string, signerOrProvider: Signer | Provider): ILayerZeroPriceFeed {
        return new Contract(address, _abi, signerOrProvider) as ILayerZeroPriceFeed
    }
}
