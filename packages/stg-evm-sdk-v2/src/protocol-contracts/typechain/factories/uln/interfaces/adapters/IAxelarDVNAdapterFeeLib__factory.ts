/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from 'ethers'
import type { Provider } from '@ethersproject/providers'
import type {
    IAxelarDVNAdapterFeeLib,
    IAxelarDVNAdapterFeeLibInterface,
} from '../../../../uln/interfaces/adapters/IAxelarDVNAdapterFeeLib'

const _abi = [
    {
        inputs: [
            {
                internalType: 'uint32',
                name: 'eid',
                type: 'uint32',
            },
        ],
        name: 'AxelarDVNAdapter_EidNotSupported',
        type: 'error',
    },
    {
        inputs: [
            {
                internalType: 'uint256',
                name: 'actual',
                type: 'uint256',
            },
            {
                internalType: 'uint256',
                name: 'requested',
                type: 'uint256',
            },
        ],
        name: 'AxelarDVNAdapter_InsufficientBalance',
        type: 'error',
    },
    {
        inputs: [],
        name: 'AxelarDVNAdapter_OptionsUnsupported',
        type: 'error',
    },
    {
        anonymous: false,
        inputs: [
            {
                components: [
                    {
                        internalType: 'uint32',
                        name: 'dstEid',
                        type: 'uint32',
                    },
                    {
                        internalType: 'uint64',
                        name: 'gas',
                        type: 'uint64',
                    },
                    {
                        internalType: 'uint128',
                        name: 'floorMarginUSD',
                        type: 'uint128',
                    },
                ],
                indexed: false,
                internalType: 'struct IAxelarDVNAdapterFeeLib.DstConfigParam[]',
                name: 'params',
                type: 'tuple[]',
            },
        ],
        name: 'DstConfigSet',
        type: 'event',
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: 'address',
                name: 'gasService',
                type: 'address',
            },
        ],
        name: 'GasServiceSet',
        type: 'event',
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: 'uint16',
                name: 'multiplierBps',
                type: 'uint16',
            },
        ],
        name: 'NativeGasFeeMultiplierBpsSet',
        type: 'event',
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: 'address',
                name: 'priceFeed',
                type: 'address',
            },
        ],
        name: 'PriceFeedSet',
        type: 'event',
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: 'address',
                name: 'token',
                type: 'address',
            },
            {
                indexed: false,
                internalType: 'address',
                name: 'to',
                type: 'address',
            },
            {
                indexed: false,
                internalType: 'uint256',
                name: 'amount',
                type: 'uint256',
            },
        ],
        name: 'TokenWithdrawn',
        type: 'event',
    },
    {
        inputs: [
            {
                components: [
                    {
                        internalType: 'uint32',
                        name: 'dstEid',
                        type: 'uint32',
                    },
                    {
                        internalType: 'uint64',
                        name: 'confirmations',
                        type: 'uint64',
                    },
                    {
                        internalType: 'address',
                        name: 'sender',
                        type: 'address',
                    },
                    {
                        internalType: 'uint16',
                        name: 'defaultMultiplierBps',
                        type: 'uint16',
                    },
                ],
                internalType: 'struct IAxelarDVNAdapterFeeLib.Param',
                name: '_params',
                type: 'tuple',
            },
            {
                components: [
                    {
                        internalType: 'string',
                        name: 'chainName',
                        type: 'string',
                    },
                    {
                        internalType: 'string',
                        name: 'peer',
                        type: 'string',
                    },
                    {
                        internalType: 'uint16',
                        name: 'multiplierBps',
                        type: 'uint16',
                    },
                    {
                        internalType: 'uint256',
                        name: 'nativeGasFee',
                        type: 'uint256',
                    },
                ],
                internalType: 'struct IAxelarDVNAdapter.DstConfig',
                name: '_dstConfig',
                type: 'tuple',
            },
            {
                internalType: 'bytes',
                name: '_options',
                type: 'bytes',
            },
        ],
        name: 'getFee',
        outputs: [
            {
                internalType: 'uint256',
                name: 'totalFee',
                type: 'uint256',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [
            {
                components: [
                    {
                        internalType: 'uint32',
                        name: 'dstEid',
                        type: 'uint32',
                    },
                    {
                        internalType: 'uint64',
                        name: 'confirmations',
                        type: 'uint64',
                    },
                    {
                        internalType: 'address',
                        name: 'sender',
                        type: 'address',
                    },
                    {
                        internalType: 'uint16',
                        name: 'defaultMultiplierBps',
                        type: 'uint16',
                    },
                ],
                internalType: 'struct IAxelarDVNAdapterFeeLib.Param',
                name: '_params',
                type: 'tuple',
            },
            {
                components: [
                    {
                        internalType: 'string',
                        name: 'chainName',
                        type: 'string',
                    },
                    {
                        internalType: 'string',
                        name: 'peer',
                        type: 'string',
                    },
                    {
                        internalType: 'uint16',
                        name: 'multiplierBps',
                        type: 'uint16',
                    },
                    {
                        internalType: 'uint256',
                        name: 'nativeGasFee',
                        type: 'uint256',
                    },
                ],
                internalType: 'struct IAxelarDVNAdapter.DstConfig',
                name: '_dstConfig',
                type: 'tuple',
            },
            {
                internalType: 'bytes',
                name: '_payload',
                type: 'bytes',
            },
            {
                internalType: 'bytes',
                name: '_options',
                type: 'bytes',
            },
            {
                internalType: 'address',
                name: '_sendLib',
                type: 'address',
            },
        ],
        name: 'getFeeOnSend',
        outputs: [
            {
                internalType: 'uint256',
                name: 'totalFee',
                type: 'uint256',
            },
        ],
        stateMutability: 'payable',
        type: 'function',
    },
] as const

export class IAxelarDVNAdapterFeeLib__factory {
    static readonly abi = _abi
    static createInterface(): IAxelarDVNAdapterFeeLibInterface {
        return new utils.Interface(_abi) as IAxelarDVNAdapterFeeLibInterface
    }
    static connect(address: string, signerOrProvider: Signer | Provider): IAxelarDVNAdapterFeeLib {
        return new Contract(address, _abi, signerOrProvider) as IAxelarDVNAdapterFeeLib
    }
}
