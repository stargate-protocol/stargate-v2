/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from 'ethers'
import type { Provider } from '@ethersproject/providers'
import type {
    ICCIPDVNAdapterFeeLib,
    ICCIPDVNAdapterFeeLibInterface,
} from '../../../../uln/interfaces/adapters/ICCIPDVNAdapterFeeLib'

const _abi = [
    {
        inputs: [
            {
                internalType: 'uint32',
                name: 'eid',
                type: 'uint32',
            },
        ],
        name: 'CCIPDVNAdapter_EidNotSupported',
        type: 'error',
    },
    {
        inputs: [],
        name: 'CCIPDVNAdapter_OptionsUnsupported',
        type: 'error',
    },
    {
        anonymous: false,
        inputs: [
            {
                components: [
                    {
                        internalType: 'uint32',
                        name: 'dstEid',
                        type: 'uint32',
                    },
                    {
                        internalType: 'uint128',
                        name: 'floorMarginUSD',
                        type: 'uint128',
                    },
                ],
                indexed: false,
                internalType: 'struct ICCIPDVNAdapterFeeLib.DstConfigParam[]',
                name: 'params',
                type: 'tuple[]',
            },
        ],
        name: 'DstConfigSet',
        type: 'event',
    },
    {
        inputs: [
            {
                components: [
                    {
                        internalType: 'uint32',
                        name: 'dstEid',
                        type: 'uint32',
                    },
                    {
                        internalType: 'uint64',
                        name: 'confirmations',
                        type: 'uint64',
                    },
                    {
                        internalType: 'address',
                        name: 'sender',
                        type: 'address',
                    },
                    {
                        internalType: 'uint16',
                        name: 'defaultMultiplierBps',
                        type: 'uint16',
                    },
                ],
                internalType: 'struct ICCIPDVNAdapterFeeLib.Param',
                name: '_params',
                type: 'tuple',
            },
            {
                components: [
                    {
                        internalType: 'uint64',
                        name: 'chainSelector',
                        type: 'uint64',
                    },
                    {
                        internalType: 'uint16',
                        name: 'multiplierBps',
                        type: 'uint16',
                    },
                    {
                        internalType: 'bytes',
                        name: 'peer',
                        type: 'bytes',
                    },
                    {
                        internalType: 'uint256',
                        name: 'gas',
                        type: 'uint256',
                    },
                ],
                internalType: 'struct ICCIPDVNAdapter.DstConfig',
                name: '_dstConfig',
                type: 'tuple',
            },
            {
                components: [
                    {
                        internalType: 'bytes',
                        name: 'receiver',
                        type: 'bytes',
                    },
                    {
                        internalType: 'bytes',
                        name: 'data',
                        type: 'bytes',
                    },
                    {
                        components: [
                            {
                                internalType: 'address',
                                name: 'token',
                                type: 'address',
                            },
                            {
                                internalType: 'uint256',
                                name: 'amount',
                                type: 'uint256',
                            },
                        ],
                        internalType: 'struct Client.EVMTokenAmount[]',
                        name: 'tokenAmounts',
                        type: 'tuple[]',
                    },
                    {
                        internalType: 'address',
                        name: 'feeToken',
                        type: 'address',
                    },
                    {
                        internalType: 'bytes',
                        name: 'extraArgs',
                        type: 'bytes',
                    },
                ],
                internalType: 'struct Client.EVM2AnyMessage',
                name: '_message',
                type: 'tuple',
            },
            {
                internalType: 'bytes',
                name: '_options',
                type: 'bytes',
            },
            {
                internalType: 'contract IRouterClient',
                name: '_router',
                type: 'address',
            },
        ],
        name: 'getFee',
        outputs: [
            {
                internalType: 'uint256',
                name: 'totalFee',
                type: 'uint256',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [
            {
                components: [
                    {
                        internalType: 'uint32',
                        name: 'dstEid',
                        type: 'uint32',
                    },
                    {
                        internalType: 'uint64',
                        name: 'confirmations',
                        type: 'uint64',
                    },
                    {
                        internalType: 'address',
                        name: 'sender',
                        type: 'address',
                    },
                    {
                        internalType: 'uint16',
                        name: 'defaultMultiplierBps',
                        type: 'uint16',
                    },
                ],
                internalType: 'struct ICCIPDVNAdapterFeeLib.Param',
                name: '_params',
                type: 'tuple',
            },
            {
                components: [
                    {
                        internalType: 'uint64',
                        name: 'chainSelector',
                        type: 'uint64',
                    },
                    {
                        internalType: 'uint16',
                        name: 'multiplierBps',
                        type: 'uint16',
                    },
                    {
                        internalType: 'bytes',
                        name: 'peer',
                        type: 'bytes',
                    },
                    {
                        internalType: 'uint256',
                        name: 'gas',
                        type: 'uint256',
                    },
                ],
                internalType: 'struct ICCIPDVNAdapter.DstConfig',
                name: '_dstConfig',
                type: 'tuple',
            },
            {
                components: [
                    {
                        internalType: 'bytes',
                        name: 'receiver',
                        type: 'bytes',
                    },
                    {
                        internalType: 'bytes',
                        name: 'data',
                        type: 'bytes',
                    },
                    {
                        components: [
                            {
                                internalType: 'address',
                                name: 'token',
                                type: 'address',
                            },
                            {
                                internalType: 'uint256',
                                name: 'amount',
                                type: 'uint256',
                            },
                        ],
                        internalType: 'struct Client.EVMTokenAmount[]',
                        name: 'tokenAmounts',
                        type: 'tuple[]',
                    },
                    {
                        internalType: 'address',
                        name: 'feeToken',
                        type: 'address',
                    },
                    {
                        internalType: 'bytes',
                        name: 'extraArgs',
                        type: 'bytes',
                    },
                ],
                internalType: 'struct Client.EVM2AnyMessage',
                name: '_message',
                type: 'tuple',
            },
            {
                internalType: 'bytes',
                name: '_options',
                type: 'bytes',
            },
            {
                internalType: 'contract IRouterClient',
                name: '_router',
                type: 'address',
            },
        ],
        name: 'getFeeOnSend',
        outputs: [
            {
                internalType: 'uint256',
                name: 'ccipFee',
                type: 'uint256',
            },
            {
                internalType: 'uint256',
                name: 'totalFee',
                type: 'uint256',
            },
        ],
        stateMutability: 'payable',
        type: 'function',
    },
] as const

export class ICCIPDVNAdapterFeeLib__factory {
    static readonly abi = _abi
    static createInterface(): ICCIPDVNAdapterFeeLibInterface {
        return new utils.Interface(_abi) as ICCIPDVNAdapterFeeLibInterface
    }
    static connect(address: string, signerOrProvider: Signer | Provider): ICCIPDVNAdapterFeeLib {
        return new Contract(address, _abi, signerOrProvider) as ICCIPDVNAdapterFeeLib
    }
}
