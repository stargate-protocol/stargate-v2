/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from 'ethers'
import type { Provider } from '@ethersproject/providers'
import type {
    IAxelarDVNAdapter,
    IAxelarDVNAdapterInterface,
} from '../../../../uln/interfaces/adapters/IAxelarDVNAdapter'

const _abi = [
    {
        inputs: [],
        name: 'AxelarDVNAdapter_OnlyWorkerFeeLib',
        type: 'error',
    },
    {
        inputs: [
            {
                internalType: 'string',
                name: 'chainName',
                type: 'string',
            },
            {
                internalType: 'string',
                name: 'peer',
                type: 'string',
            },
        ],
        name: 'AxelarDVNAdapter_UntrustedPeer',
        type: 'error',
    },
    {
        anonymous: false,
        inputs: [
            {
                components: [
                    {
                        internalType: 'uint32',
                        name: 'eid',
                        type: 'uint32',
                    },
                    {
                        internalType: 'string',
                        name: 'chainName',
                        type: 'string',
                    },
                    {
                        internalType: 'string',
                        name: 'peer',
                        type: 'string',
                    },
                    {
                        internalType: 'uint16',
                        name: 'multiplierBps',
                        type: 'uint16',
                    },
                    {
                        internalType: 'uint256',
                        name: 'nativeGasFee',
                        type: 'uint256',
                    },
                ],
                indexed: false,
                internalType: 'struct IAxelarDVNAdapter.DstConfigParam[]',
                name: 'params',
                type: 'tuple[]',
            },
        ],
        name: 'DstConfigSet',
        type: 'event',
    },
    {
        anonymous: false,
        inputs: [
            {
                components: [
                    {
                        internalType: 'uint32',
                        name: 'dstEid',
                        type: 'uint32',
                    },
                    {
                        internalType: 'uint128',
                        name: 'floorMarginUSD',
                        type: 'uint128',
                    },
                ],
                indexed: false,
                internalType: 'struct IAxelarDVNAdapter.FloorMarginUSDParam[]',
                name: 'params',
                type: 'tuple[]',
            },
        ],
        name: 'FloorMarginUSDSet',
        type: 'event',
    },
    {
        anonymous: false,
        inputs: [
            {
                components: [
                    {
                        internalType: 'uint32',
                        name: 'dstEid',
                        type: 'uint32',
                    },
                    {
                        internalType: 'uint16',
                        name: 'multiplierBps',
                        type: 'uint16',
                    },
                ],
                indexed: false,
                internalType: 'struct IAxelarDVNAdapter.MultiplierParam[]',
                name: 'params',
                type: 'tuple[]',
            },
        ],
        name: 'MultiplierSet',
        type: 'event',
    },
    {
        anonymous: false,
        inputs: [
            {
                components: [
                    {
                        internalType: 'uint32',
                        name: 'dstEid',
                        type: 'uint32',
                    },
                    {
                        internalType: 'uint256',
                        name: 'nativeGasFee',
                        type: 'uint256',
                    },
                ],
                indexed: false,
                internalType: 'struct IAxelarDVNAdapter.NativeGasFeeParam[]',
                name: 'params',
                type: 'tuple[]',
            },
        ],
        name: 'NativeGasFeeSet',
        type: 'event',
    },
    {
        inputs: [
            {
                internalType: 'address',
                name: '_sendLib',
                type: 'address',
            },
        ],
        name: 'withdrawToFeeLib',
        outputs: [],
        stateMutability: 'nonpayable',
        type: 'function',
    },
] as const

export class IAxelarDVNAdapter__factory {
    static readonly abi = _abi
    static createInterface(): IAxelarDVNAdapterInterface {
        return new utils.Interface(_abi) as IAxelarDVNAdapterInterface
    }
    static connect(address: string, signerOrProvider: Signer | Provider): IAxelarDVNAdapter {
        return new Contract(address, _abi, signerOrProvider) as IAxelarDVNAdapter
    }
}
