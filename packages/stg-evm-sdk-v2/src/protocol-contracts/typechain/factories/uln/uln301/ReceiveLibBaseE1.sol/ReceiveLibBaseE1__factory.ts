/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from 'ethers'
import type { Provider } from '@ethersproject/providers'
import type {
    ReceiveLibBaseE1,
    ReceiveLibBaseE1Interface,
} from '../../../../uln/uln301/ReceiveLibBaseE1.sol/ReceiveLibBaseE1'

const _abi = [
    {
        inputs: [],
        name: 'AddressSizeConfig_AddressSizeAlreadySet',
        type: 'error',
    },
    {
        inputs: [],
        name: 'AddressSizeConfig_InvalidAddressSize',
        type: 'error',
    },
    {
        inputs: [],
        name: 'LZ_MessageLib_InvalidExecutor',
        type: 'error',
    },
    {
        inputs: [],
        name: 'LZ_MessageLib_OnlyEndpoint',
        type: 'error',
    },
    {
        inputs: [],
        name: 'LZ_MessageLib_OnlyExecutor',
        type: 'error',
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: 'uint16',
                name: 'eid',
                type: 'uint16',
            },
            {
                indexed: false,
                internalType: 'uint256',
                name: 'size',
                type: 'uint256',
            },
        ],
        name: 'AddressSizeSet',
        type: 'event',
    },
    {
        anonymous: false,
        inputs: [
            {
                components: [
                    {
                        internalType: 'uint32',
                        name: 'eid',
                        type: 'uint32',
                    },
                    {
                        internalType: 'address',
                        name: 'executor',
                        type: 'address',
                    },
                ],
                indexed: false,
                internalType: 'struct SetDefaultExecutorParam[]',
                name: 'params',
                type: 'tuple[]',
            },
        ],
        name: 'DefaultExecutorsSet',
        type: 'event',
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: 'address',
                name: 'oapp',
                type: 'address',
            },
            {
                indexed: false,
                internalType: 'uint32',
                name: 'eid',
                type: 'uint32',
            },
            {
                indexed: false,
                internalType: 'address',
                name: 'executor',
                type: 'address',
            },
        ],
        name: 'ExecutorSet',
        type: 'event',
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: 'uint16',
                name: 'srcChainId',
                type: 'uint16',
            },
            {
                indexed: false,
                internalType: 'bytes32',
                name: 'srcAddress',
                type: 'bytes32',
            },
            {
                indexed: true,
                internalType: 'address',
                name: 'dstAddress',
                type: 'address',
            },
            {
                indexed: false,
                internalType: 'uint64',
                name: 'nonce',
                type: 'uint64',
            },
            {
                indexed: false,
                internalType: 'bytes32',
                name: 'payloadHash',
                type: 'bytes32',
            },
        ],
        name: 'InvalidDst',
        type: 'event',
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: 'address',
                name: 'previousOwner',
                type: 'address',
            },
            {
                indexed: true,
                internalType: 'address',
                name: 'newOwner',
                type: 'address',
            },
        ],
        name: 'OwnershipTransferred',
        type: 'event',
    },
    {
        anonymous: false,
        inputs: [
            {
                components: [
                    {
                        internalType: 'uint32',
                        name: 'srcEid',
                        type: 'uint32',
                    },
                    {
                        internalType: 'bytes32',
                        name: 'sender',
                        type: 'bytes32',
                    },
                    {
                        internalType: 'uint64',
                        name: 'nonce',
                        type: 'uint64',
                    },
                ],
                indexed: false,
                internalType: 'struct Origin',
                name: 'origin',
                type: 'tuple',
            },
            {
                indexed: false,
                internalType: 'address',
                name: 'receiver',
                type: 'address',
            },
        ],
        name: 'PacketDelivered',
        type: 'event',
    },
    {
        inputs: [
            {
                internalType: 'uint32',
                name: 'dstEid',
                type: 'uint32',
            },
        ],
        name: 'addressSizes',
        outputs: [
            {
                internalType: 'uint256',
                name: 'size',
                type: 'uint256',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [
            {
                internalType: 'uint32',
                name: 'eid',
                type: 'uint32',
            },
        ],
        name: 'defaultExecutors',
        outputs: [
            {
                internalType: 'address',
                name: 'executor',
                type: 'address',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [
            {
                internalType: 'address',
                name: 'oapp',
                type: 'address',
            },
            {
                internalType: 'uint32',
                name: 'eid',
                type: 'uint32',
            },
        ],
        name: 'executors',
        outputs: [
            {
                internalType: 'address',
                name: 'executor',
                type: 'address',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [
            {
                internalType: 'uint16',
                name: '_chainId',
                type: 'uint16',
            },
            {
                internalType: 'address',
                name: '_userApplication',
                type: 'address',
            },
            {
                internalType: 'uint256',
                name: '_configType',
                type: 'uint256',
            },
        ],
        name: 'getConfig',
        outputs: [
            {
                internalType: 'bytes',
                name: '',
                type: 'bytes',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [
            {
                internalType: 'address',
                name: '_oapp',
                type: 'address',
            },
            {
                internalType: 'uint32',
                name: '_remoteEid',
                type: 'uint32',
            },
        ],
        name: 'getExecutor',
        outputs: [
            {
                internalType: 'address',
                name: '',
                type: 'address',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [],
        name: 'owner',
        outputs: [
            {
                internalType: 'address',
                name: '',
                type: 'address',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [],
        name: 'renounceOwnership',
        outputs: [],
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        inputs: [
            {
                internalType: 'uint16',
                name: '_eid',
                type: 'uint16',
            },
            {
                internalType: 'uint256',
                name: '_size',
                type: 'uint256',
            },
        ],
        name: 'setAddressSize',
        outputs: [],
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        inputs: [
            {
                internalType: 'uint16',
                name: '_chainId',
                type: 'uint16',
            },
            {
                internalType: 'address',
                name: '_userApplication',
                type: 'address',
            },
            {
                internalType: 'uint256',
                name: '_configType',
                type: 'uint256',
            },
            {
                internalType: 'bytes',
                name: '_config',
                type: 'bytes',
            },
        ],
        name: 'setConfig',
        outputs: [],
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        inputs: [
            {
                components: [
                    {
                        internalType: 'uint32',
                        name: 'eid',
                        type: 'uint32',
                    },
                    {
                        internalType: 'address',
                        name: 'executor',
                        type: 'address',
                    },
                ],
                internalType: 'struct SetDefaultExecutorParam[]',
                name: '_params',
                type: 'tuple[]',
            },
        ],
        name: 'setDefaultExecutors',
        outputs: [],
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        inputs: [
            {
                internalType: 'address',
                name: 'newOwner',
                type: 'address',
            },
        ],
        name: 'transferOwnership',
        outputs: [],
        stateMutability: 'nonpayable',
        type: 'function',
    },
] as const

export class ReceiveLibBaseE1__factory {
    static readonly abi = _abi
    static createInterface(): ReceiveLibBaseE1Interface {
        return new utils.Interface(_abi) as ReceiveLibBaseE1Interface
    }
    static connect(address: string, signerOrProvider: Signer | Provider): ReceiveLibBaseE1 {
        return new Contract(address, _abi, signerOrProvider) as ReceiveLibBaseE1
    }
}
