/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers'
import type { Provider, TransactionRequest } from '@ethersproject/providers'
import type { PromiseOrValue } from '../../../../common'
import type {
    ReceiveUln301View,
    ReceiveUln301ViewInterface,
} from '../../../../uln/uln301/ReceiveUln301View.sol/ReceiveUln301View'

const _abi = [
    {
        inputs: [],
        name: 'AddressCast_InvalidSizeForAddress',
        type: 'error',
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: 'uint8',
                name: 'version',
                type: 'uint8',
            },
        ],
        name: 'Initialized',
        type: 'event',
    },
    {
        inputs: [],
        name: 'endpoint',
        outputs: [
            {
                internalType: 'contract ILayerZeroEndpoint',
                name: '',
                type: 'address',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [
            {
                internalType: 'bytes',
                name: '_packetHeader',
                type: 'bytes',
            },
            {
                internalType: 'bytes32',
                name: '_payloadHash',
                type: 'bytes32',
            },
        ],
        name: 'executable',
        outputs: [
            {
                internalType: 'enum ExecutionState',
                name: '',
                type: 'uint8',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [
            {
                internalType: 'address',
                name: '_endpoint',
                type: 'address',
            },
            {
                internalType: 'uint32',
                name: '_localEid',
                type: 'uint32',
            },
            {
                internalType: 'address',
                name: '_receiveUln301',
                type: 'address',
            },
        ],
        name: 'initialize',
        outputs: [],
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        inputs: [],
        name: 'receiveUln301',
        outputs: [
            {
                internalType: 'contract IReceiveUln301',
                name: '',
                type: 'address',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [
            {
                internalType: 'bytes',
                name: '_packetHeader',
                type: 'bytes',
            },
            {
                internalType: 'bytes32',
                name: '_payloadHash',
                type: 'bytes32',
            },
        ],
        name: 'verifiable',
        outputs: [
            {
                internalType: 'enum VerificationState',
                name: '',
                type: 'uint8',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
] as const

const _bytecode =
    '0x608060405234801561001057600080fd5b5061112c806100206000396000f3fe608060405234801561001057600080fd5b50600436106100675760003560e01c80637401fccc116100505780637401fccc146100e0578063c1554a4b14610100578063c2803b2c1461011557600080fd5b806327d12cd91461006c5780635e280f1114610095575b600080fd5b61007f61007a366004610a0d565b610135565b60405161008c9190610ab4565b60405180910390f35b6000546100bb9062010000900473ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200161008c565b6100f36100ee366004610a0d565b61016c565b60405161008c9190610ace565b61011361010e366004610b07565b610579565b005b6001546100bb9073ffffffffffffffffffffffffffffffffffffffff1681565b60008061014385858561016c565b600381111561015457610154610a85565b0361016157506000610165565b5060025b9392505050565b6001546040517fc40ff83500000000000000000000000000000000000000000000000000000000815260009173ffffffffffffffffffffffffffffffffffffffff81169163c40ff835916101e691889188917401000000000000000000000000000000000000000090910463ffffffff1690600401610b5b565b60006040518083038186803b1580156101fe57600080fd5b505afa158015610212573d6000803e3d6000fd5b505050506000610222858561084a565b9050600061023e6102338787610865565b63ffffffff16610888565b9050600061024c8787610920565b6001546040517f0f8355c000000000000000000000000000000000000000000000000000000000815261ffff851660048201529192506000916102fa9173ffffffffffffffffffffffffffffffffffffffff1690630f8355c090602401602060405180830381865afa1580156102c6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102ea9190610bb8565b6102f48a8a610943565b9061095c565b8460405160200161030c929190610bf5565b604080518083037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0018152908290526000547ffdc07c7000000000000000000000000000000000000000000000000000000000835290925062010000900473ffffffffffffffffffffffffffffffffffffffff169063fdc07c70906103979086908590600401610c3f565b602060405180830381865afa1580156103b4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103d89190610cb8565b67ffffffffffffffff168267ffffffffffffffff16116103ff576003945050505050610165565b6001546040517f43ea4fa900000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff868116600483015261ffff861660248301529091169063e084d9529082906343ea4fa990604401600060405180830381865afa158015610481573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526104c79190810190610e01565b8a8a6040516104d7929190610ed6565b6040519081900381207fffffffff0000000000000000000000000000000000000000000000000000000060e085901b16825261051892918b90600401610f38565b602060405180830381865afa158015610535573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105599190610fe0565b1561056b576002945050505050610165565b506000979650505050505050565b60006105a37fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61035490565b905073ffffffffffffffffffffffffffffffffffffffff81166105fc5773ffffffffffffffffffffffffffffffffffffffff7fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61035561061e565b3373ffffffffffffffffffffffffffffffffffffffff82161461061e57600080fd5b600054610100900460ff161580801561063e5750600054600160ff909116105b806106585750303b158015610658575060005460ff166001145b6106e9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a656400000000000000000000000000000000000060648201526084015b60405180910390fd5b600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001179055801561074757600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff166101001790555b600180546000805473ffffffffffffffffffffffffffffffffffffffff89811662010000027fffffffffffffffffffff0000000000000000000000000000000000000000ffff9092169190911790915563ffffffff871674010000000000000000000000000000000000000000027fffffffffffffffff00000000000000000000000000000000000000000000000090921690861617179055801561084357600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b5050505050565b600061085c61085984846109fd565b90565b90505b92915050565b6000610875600d60098486611002565b61087e9161102c565b60e01c9392505050565b600061ffff82111561091c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203160448201527f362062697473000000000000000000000000000000000000000000000000000060648201526084016106e0565b5090565b6000610930600960018486611002565b61093991611074565b60c01c9392505050565b6000610953602d600d8486611002565b61085c916110ba565b606081158061096b5750602082115b156109a2576040517f18456c9b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8167ffffffffffffffff8111156109bb576109bb610cd3565b6040519080825280601f01601f1916602001820160405280156109e5576020820181803683370190505b506008909202610100039290921b6020820152919050565b6000610953605160318486611002565b600080600060408486031215610a2257600080fd5b833567ffffffffffffffff80821115610a3a57600080fd5b818601915086601f830112610a4e57600080fd5b813581811115610a5d57600080fd5b876020828501011115610a6f57600080fd5b6020928301989097509590910135949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6020810160038310610ac857610ac8610a85565b91905290565b6020810160048310610ac857610ac8610a85565b73ffffffffffffffffffffffffffffffffffffffff81168114610b0457600080fd5b50565b600080600060608486031215610b1c57600080fd5b8335610b2781610ae2565b9250602084013563ffffffff81168114610b4057600080fd5b91506040840135610b5081610ae2565b809150509250925092565b6040815282604082015282846060830137600060608483010152600060607fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f860116830101905063ffffffff83166020830152949350505050565b600060208284031215610bca57600080fd5b5051919050565b60005b83811015610bec578181015183820152602001610bd4565b50506000910152565b60008351610c07818460208801610bd1565b60609390931b7fffffffffffffffffffffffffffffffffffffffff000000000000000000000000169190920190815260140192915050565b61ffff831681526040602082015260008251806040840152610c68816060850160208701610bd1565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016919091016060019392505050565b805167ffffffffffffffff81168114610cb357600080fd5b919050565b600060208284031215610cca57600080fd5b61085c82610c9b565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60405160c0810167ffffffffffffffff81118282101715610d2557610d25610cd3565b60405290565b805160ff81168114610cb357600080fd5b600082601f830112610d4d57600080fd5b8151602067ffffffffffffffff80831115610d6a57610d6a610cd3565b8260051b6040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0603f83011681018181108482111715610dad57610dad610cd3565b6040529384526020818701810194908101925087851115610dcd57600080fd5b6020870191505b84821015610df6578151610de781610ae2565b83529183019190830190610dd4565b979650505050505050565b600060208284031215610e1357600080fd5b815167ffffffffffffffff80821115610e2b57600080fd5b9083019060c08286031215610e3f57600080fd5b610e47610d02565b610e5083610c9b565b8152610e5e60208401610d2b565b6020820152610e6f60408401610d2b565b6040820152610e8060608401610d2b565b6060820152608083015182811115610e9757600080fd5b610ea387828601610d3c565b60808301525060a083015182811115610ebb57600080fd5b610ec787828601610d3c565b60a08301525095945050505050565b8183823760009101908152919050565b60008151808452602080850194506020840160005b83811015610f2d57815173ffffffffffffffffffffffffffffffffffffffff1687529582019590820190600101610efb565b509495945050505050565b6060815267ffffffffffffffff845116606082015260ff602085015116608082015260ff60408501511660a082015260ff60608501511660c08201526000608085015160c060e0840152610f90610120840182610ee6565b905060a08601517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa084830301610100850152610fcc8282610ee6565b602085019690965250505060400152919050565b600060208284031215610ff257600080fd5b8151801515811461016557600080fd5b6000808585111561101257600080fd5b8386111561101f57600080fd5b5050820193919092039150565b7fffffffff00000000000000000000000000000000000000000000000000000000813581811691600485101561106c5780818660040360031b1b83161692505b505092915050565b7fffffffffffffffff000000000000000000000000000000000000000000000000813581811691600885101561106c5760089490940360031b84901b1690921692915050565b8035602083101561085f577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff602084900360031b1b169291505056fea2646970667358221220ede9b159d562c48ddcf9bd58a6b41287d8341e03bb1e156bb9e3204d2d1ef41664736f6c63430008160033'

type ReceiveUln301ViewConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>

const isSuperArgs = (xs: ReceiveUln301ViewConstructorParams): xs is ConstructorParameters<typeof ContractFactory> =>
    xs.length > 1

export class ReceiveUln301View__factory extends ContractFactory {
    constructor(...args: ReceiveUln301ViewConstructorParams) {
        if (isSuperArgs(args)) {
            super(...args)
        } else {
            super(_abi, _bytecode, args[0])
        }
    }

    override deploy(overrides?: Overrides & { from?: PromiseOrValue<string> }): Promise<ReceiveUln301View> {
        return super.deploy(overrides || {}) as Promise<ReceiveUln301View>
    }
    override getDeployTransaction(overrides?: Overrides & { from?: PromiseOrValue<string> }): TransactionRequest {
        return super.getDeployTransaction(overrides || {})
    }
    override attach(address: string): ReceiveUln301View {
        return super.attach(address) as ReceiveUln301View
    }
    override connect(signer: Signer): ReceiveUln301View__factory {
        return super.connect(signer) as ReceiveUln301View__factory
    }

    static readonly bytecode = _bytecode
    static readonly abi = _abi
    static createInterface(): ReceiveUln301ViewInterface {
        return new utils.Interface(_abi) as ReceiveUln301ViewInterface
    }
    static connect(address: string, signerOrProvider: Signer | Provider): ReceiveUln301View {
        return new Contract(address, _abi, signerOrProvider) as ReceiveUln301View
    }
}
