/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from 'ethers'
import type { Provider } from '@ethersproject/providers'
import type { INonceContract, INonceContractInterface } from '../../../../uln/uln301/interfaces/INonceContract'

const _abi = [
    {
        inputs: [
            {
                internalType: 'uint16',
                name: '_chainId',
                type: 'uint16',
            },
            {
                internalType: 'address',
                name: '_ua',
                type: 'address',
            },
            {
                internalType: 'bytes',
                name: '_path',
                type: 'bytes',
            },
        ],
        name: 'increment',
        outputs: [
            {
                internalType: 'uint64',
                name: '',
                type: 'uint64',
            },
        ],
        stateMutability: 'nonpayable',
        type: 'function',
    },
] as const

export class INonceContract__factory {
    static readonly abi = _abi
    static createInterface(): INonceContractInterface {
        return new utils.Interface(_abi) as INonceContractInterface
    }
    static connect(address: string, signerOrProvider: Signer | Provider): INonceContract {
        return new Contract(address, _abi, signerOrProvider) as INonceContract
    }
}
