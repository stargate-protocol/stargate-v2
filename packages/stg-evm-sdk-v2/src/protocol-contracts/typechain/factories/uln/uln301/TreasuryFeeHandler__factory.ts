/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers'
import type { Provider, TransactionRequest } from '@ethersproject/providers'
import type { PromiseOrValue } from '../../../common'
import type { TreasuryFeeHandler, TreasuryFeeHandlerInterface } from '../../../uln/uln301/TreasuryFeeHandler'

const _abi = [
    {
        inputs: [
            {
                internalType: 'address',
                name: '_endpoint',
                type: 'address',
            },
        ],
        stateMutability: 'nonpayable',
        type: 'constructor',
    },
    {
        inputs: [
            {
                internalType: 'uint256',
                name: 'required',
                type: 'uint256',
            },
            {
                internalType: 'uint256',
                name: 'supplied',
                type: 'uint256',
            },
        ],
        name: 'LZ_TreasuryFeeHandler_InvalidAmount',
        type: 'error',
    },
    {
        inputs: [],
        name: 'LZ_TreasuryFeeHandler_OnlyOnSending',
        type: 'error',
    },
    {
        inputs: [],
        name: 'LZ_TreasuryFeeHandler_OnlySendLibrary',
        type: 'error',
    },
    {
        inputs: [],
        name: 'endpoint',
        outputs: [
            {
                internalType: 'contract ILayerZeroEndpoint',
                name: '',
                type: 'address',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [
            {
                internalType: 'address',
                name: '_lzToken',
                type: 'address',
            },
            {
                internalType: 'address',
                name: '_sender',
                type: 'address',
            },
            {
                internalType: 'uint256',
                name: '_required',
                type: 'uint256',
            },
            {
                internalType: 'uint256',
                name: '_supplied',
                type: 'uint256',
            },
            {
                internalType: 'address',
                name: '_treasury',
                type: 'address',
            },
        ],
        name: 'payFee',
        outputs: [],
        stateMutability: 'nonpayable',
        type: 'function',
    },
] as const

const _bytecode =
    '0x60a060405234801561001057600080fd5b506040516108be3803806108be83398101604081905261002f91610040565b6001600160a01b0316608052610070565b60006020828403121561005257600080fd5b81516001600160a01b038116811461006957600080fd5b9392505050565b6080516108276100976000396000818160400152818160e701526101a301526108276000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80635e280f111461003b5780637da56b4b1461008b575b600080fd5b6100627f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200160405180910390f35b61009e6100993660046106bb565b6100a0565b005b6040517f9c729da100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff858116600483015233917f000000000000000000000000000000000000000000000000000000000000000090911690639c729da190602401602060405180830381865afa158015610130573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610154919061071a565b73ffffffffffffffffffffffffffffffffffffffff16146101a1576040517fc857f60c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663e97a448a6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561020c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610230919061073e565b610266576040517fbae51fef00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b818311156102af576040517f901cc98000000000000000000000000000000000000000000000000000000000815260048101849052602481018390526044015b60405180910390fd5b6102d173ffffffffffffffffffffffffffffffffffffffff86168583866102d8565b5050505050565b6040805173ffffffffffffffffffffffffffffffffffffffff85811660248301528416604482015260648082018490528251808303909101815260849091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f23b872dd0000000000000000000000000000000000000000000000000000000017905261036d908590610373565b50505050565b60006103d5826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff166104879092919063ffffffff16565b90508051600014806103f65750808060200190518101906103f6919061073e565b610482576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f7420737563636565640000000000000000000000000000000000000000000060648201526084016102a6565b505050565b6060610496848460008561049e565b949350505050565b606082471015610530576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c000000000000000000000000000000000000000000000000000060648201526084016102a6565b6000808673ffffffffffffffffffffffffffffffffffffffff1685876040516105599190610784565b60006040518083038185875af1925050503d8060008114610596576040519150601f19603f3d011682016040523d82523d6000602084013e61059b565b606091505b50915091506105ac878383876105b7565b979650505050505050565b6060831561064d5782516000036106465773ffffffffffffffffffffffffffffffffffffffff85163b610646576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016102a6565b5081610496565b61049683838151156106625781518083602001fd5b806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102a691906107a0565b73ffffffffffffffffffffffffffffffffffffffff811681146106b857600080fd5b50565b600080600080600060a086880312156106d357600080fd5b85356106de81610696565b945060208601356106ee81610696565b93506040860135925060608601359150608086013561070c81610696565b809150509295509295909350565b60006020828403121561072c57600080fd5b815161073781610696565b9392505050565b60006020828403121561075057600080fd5b8151801515811461073757600080fd5b60005b8381101561077b578181015183820152602001610763565b50506000910152565b60008251610796818460208701610760565b9190910192915050565b60208152600082518060208401526107bf816040850160208701610760565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016919091016040019291505056fea264697066735822122033836599f62f3941cda07d09389fb27e65f0954323bd1aaeee4df0461cf04d1a64736f6c63430008160033'

type TreasuryFeeHandlerConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>

const isSuperArgs = (xs: TreasuryFeeHandlerConstructorParams): xs is ConstructorParameters<typeof ContractFactory> =>
    xs.length > 1

export class TreasuryFeeHandler__factory extends ContractFactory {
    constructor(...args: TreasuryFeeHandlerConstructorParams) {
        if (isSuperArgs(args)) {
            super(...args)
        } else {
            super(_abi, _bytecode, args[0])
        }
    }

    override deploy(
        _endpoint: PromiseOrValue<string>,
        overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<TreasuryFeeHandler> {
        return super.deploy(_endpoint, overrides || {}) as Promise<TreasuryFeeHandler>
    }
    override getDeployTransaction(
        _endpoint: PromiseOrValue<string>,
        overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): TransactionRequest {
        return super.getDeployTransaction(_endpoint, overrides || {})
    }
    override attach(address: string): TreasuryFeeHandler {
        return super.attach(address) as TreasuryFeeHandler
    }
    override connect(signer: Signer): TreasuryFeeHandler__factory {
        return super.connect(signer) as TreasuryFeeHandler__factory
    }

    static readonly bytecode = _bytecode
    static readonly abi = _abi
    static createInterface(): TreasuryFeeHandlerInterface {
        return new utils.Interface(_abi) as TreasuryFeeHandlerInterface
    }
    static connect(address: string, signerOrProvider: Signer | Provider): TreasuryFeeHandler {
        return new Contract(address, _abi, signerOrProvider) as TreasuryFeeHandler
    }
}
