/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, BigNumberish, Overrides } from 'ethers'
import type { Provider, TransactionRequest } from '@ethersproject/providers'
import type { PromiseOrValue } from '../../../common'
import type { DVNFeeLib, DVNFeeLibInterface } from '../../../uln/dvn/DVNFeeLib'

const _abi = [
    {
        inputs: [
            {
                internalType: 'uint32',
                name: '_localEidV2',
                type: 'uint32',
            },
            {
                internalType: 'uint256',
                name: '_nativeDecimalsRate',
                type: 'uint256',
            },
        ],
        stateMutability: 'nonpayable',
        type: 'constructor',
    },
    {
        inputs: [
            {
                internalType: 'uint32',
                name: 'eid',
                type: 'uint32',
            },
        ],
        name: 'DVN_EidNotSupported',
        type: 'error',
    },
    {
        inputs: [],
        name: 'DVN_INVALID_INPUT_LENGTH',
        type: 'error',
    },
    {
        inputs: [
            {
                internalType: 'uint256',
                name: 'cursor',
                type: 'uint256',
            },
        ],
        name: 'DVN_InvalidDVNOptions',
        type: 'error',
    },
    {
        inputs: [
            {
                internalType: 'uint32',
                name: 'eid',
                type: 'uint32',
            },
            {
                internalType: 'uint64',
                name: 'timestamp',
                type: 'uint64',
            },
        ],
        name: 'DVN_TimestampOutOfRange',
        type: 'error',
    },
    {
        inputs: [
            {
                internalType: 'uint8',
                name: 'optionType',
                type: 'uint8',
            },
        ],
        name: 'DVN_UnsupportedOptionType',
        type: 'error',
    },
    {
        inputs: [],
        name: 'InvalidCmd',
        type: 'error',
    },
    {
        inputs: [],
        name: 'InvalidType',
        type: 'error',
    },
    {
        inputs: [],
        name: 'InvalidVersion',
        type: 'error',
    },
    {
        inputs: [
            {
                internalType: 'address',
                name: '_to',
                type: 'address',
            },
            {
                internalType: 'uint256',
                name: '_value',
                type: 'uint256',
            },
        ],
        name: 'Transfer_NativeFailed',
        type: 'error',
    },
    {
        inputs: [],
        name: 'Transfer_ToAddressIsZero',
        type: 'error',
    },
    {
        inputs: [],
        name: 'UnsupportedTargetEid',
        type: 'error',
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: 'address',
                name: 'previousOwner',
                type: 'address',
            },
            {
                indexed: true,
                internalType: 'address',
                name: 'newOwner',
                type: 'address',
            },
        ],
        name: 'OwnershipTransferred',
        type: 'event',
    },
    {
        inputs: [
            {
                internalType: 'uint32',
                name: 'dstEid',
                type: 'uint32',
            },
        ],
        name: 'dstBlockTimeConfigs',
        outputs: [
            {
                internalType: 'uint32',
                name: 'avgBlockTime',
                type: 'uint32',
            },
            {
                internalType: 'uint64',
                name: 'blockNum',
                type: 'uint64',
            },
            {
                internalType: 'uint64',
                name: 'timestamp',
                type: 'uint64',
            },
            {
                internalType: 'uint32',
                name: 'maxPastRetention',
                type: 'uint32',
            },
            {
                internalType: 'uint32',
                name: 'maxFutureRetention',
                type: 'uint32',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [],
        name: 'getCmdFees',
        outputs: [
            {
                internalType: 'uint120',
                name: '',
                type: 'uint120',
            },
            {
                internalType: 'uint120',
                name: '',
                type: 'uint120',
            },
            {
                internalType: 'uint16',
                name: '',
                type: 'uint16',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [
            {
                components: [
                    {
                        internalType: 'address',
                        name: 'priceFeed',
                        type: 'address',
                    },
                    {
                        internalType: 'uint32',
                        name: 'dstEid',
                        type: 'uint32',
                    },
                    {
                        internalType: 'uint64',
                        name: 'confirmations',
                        type: 'uint64',
                    },
                    {
                        internalType: 'address',
                        name: 'sender',
                        type: 'address',
                    },
                    {
                        internalType: 'uint64',
                        name: 'quorum',
                        type: 'uint64',
                    },
                    {
                        internalType: 'uint16',
                        name: 'defaultMultiplierBps',
                        type: 'uint16',
                    },
                ],
                internalType: 'struct IDVNFeeLib.FeeParams',
                name: '_params',
                type: 'tuple',
            },
            {
                components: [
                    {
                        internalType: 'uint64',
                        name: 'gas',
                        type: 'uint64',
                    },
                    {
                        internalType: 'uint16',
                        name: 'multiplierBps',
                        type: 'uint16',
                    },
                    {
                        internalType: 'uint128',
                        name: 'floorMarginUSD',
                        type: 'uint128',
                    },
                ],
                internalType: 'struct IDVN.DstConfig',
                name: '_dstConfig',
                type: 'tuple',
            },
            {
                internalType: 'bytes',
                name: '_options',
                type: 'bytes',
            },
        ],
        name: 'getFee',
        outputs: [
            {
                internalType: 'uint256',
                name: '',
                type: 'uint256',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [
            {
                components: [
                    {
                        internalType: 'address',
                        name: 'priceFeed',
                        type: 'address',
                    },
                    {
                        internalType: 'address',
                        name: 'sender',
                        type: 'address',
                    },
                    {
                        internalType: 'uint64',
                        name: 'quorum',
                        type: 'uint64',
                    },
                    {
                        internalType: 'uint16',
                        name: 'defaultMultiplierBps',
                        type: 'uint16',
                    },
                ],
                internalType: 'struct IDVNFeeLib.FeeParamsForRead',
                name: '_params',
                type: 'tuple',
            },
            {
                components: [
                    {
                        internalType: 'uint64',
                        name: 'gas',
                        type: 'uint64',
                    },
                    {
                        internalType: 'uint16',
                        name: 'multiplierBps',
                        type: 'uint16',
                    },
                    {
                        internalType: 'uint128',
                        name: 'floorMarginUSD',
                        type: 'uint128',
                    },
                ],
                internalType: 'struct IDVN.DstConfig',
                name: '_dstConfig',
                type: 'tuple',
            },
            {
                internalType: 'bytes',
                name: '_cmd',
                type: 'bytes',
            },
            {
                internalType: 'bytes',
                name: '_options',
                type: 'bytes',
            },
        ],
        name: 'getFee',
        outputs: [
            {
                internalType: 'uint256',
                name: '',
                type: 'uint256',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [
            {
                components: [
                    {
                        internalType: 'address',
                        name: 'priceFeed',
                        type: 'address',
                    },
                    {
                        internalType: 'address',
                        name: 'sender',
                        type: 'address',
                    },
                    {
                        internalType: 'uint64',
                        name: 'quorum',
                        type: 'uint64',
                    },
                    {
                        internalType: 'uint16',
                        name: 'defaultMultiplierBps',
                        type: 'uint16',
                    },
                ],
                internalType: 'struct IDVNFeeLib.FeeParamsForRead',
                name: '_params',
                type: 'tuple',
            },
            {
                components: [
                    {
                        internalType: 'uint64',
                        name: 'gas',
                        type: 'uint64',
                    },
                    {
                        internalType: 'uint16',
                        name: 'multiplierBps',
                        type: 'uint16',
                    },
                    {
                        internalType: 'uint128',
                        name: 'floorMarginUSD',
                        type: 'uint128',
                    },
                ],
                internalType: 'struct IDVN.DstConfig',
                name: '_dstConfig',
                type: 'tuple',
            },
            {
                internalType: 'bytes',
                name: '_cmd',
                type: 'bytes',
            },
            {
                internalType: 'bytes',
                name: '_options',
                type: 'bytes',
            },
        ],
        name: 'getFeeOnSend',
        outputs: [
            {
                internalType: 'uint256',
                name: 'fee',
                type: 'uint256',
            },
        ],
        stateMutability: 'payable',
        type: 'function',
    },
    {
        inputs: [
            {
                components: [
                    {
                        internalType: 'address',
                        name: 'priceFeed',
                        type: 'address',
                    },
                    {
                        internalType: 'uint32',
                        name: 'dstEid',
                        type: 'uint32',
                    },
                    {
                        internalType: 'uint64',
                        name: 'confirmations',
                        type: 'uint64',
                    },
                    {
                        internalType: 'address',
                        name: 'sender',
                        type: 'address',
                    },
                    {
                        internalType: 'uint64',
                        name: 'quorum',
                        type: 'uint64',
                    },
                    {
                        internalType: 'uint16',
                        name: 'defaultMultiplierBps',
                        type: 'uint16',
                    },
                ],
                internalType: 'struct IDVNFeeLib.FeeParams',
                name: '_params',
                type: 'tuple',
            },
            {
                components: [
                    {
                        internalType: 'uint64',
                        name: 'gas',
                        type: 'uint64',
                    },
                    {
                        internalType: 'uint16',
                        name: 'multiplierBps',
                        type: 'uint16',
                    },
                    {
                        internalType: 'uint128',
                        name: 'floorMarginUSD',
                        type: 'uint128',
                    },
                ],
                internalType: 'struct IDVN.DstConfig',
                name: '_dstConfig',
                type: 'tuple',
            },
            {
                internalType: 'bytes',
                name: '_options',
                type: 'bytes',
            },
        ],
        name: 'getFeeOnSend',
        outputs: [
            {
                internalType: 'uint256',
                name: '',
                type: 'uint256',
            },
        ],
        stateMutability: 'payable',
        type: 'function',
    },
    {
        inputs: [
            {
                internalType: 'uint32',
                name: '_targetEid',
                type: 'uint32',
            },
        ],
        name: 'getSupportedCmdTypes',
        outputs: [
            {
                internalType: 'BitMap256',
                name: '',
                type: 'uint256',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [],
        name: 'owner',
        outputs: [
            {
                internalType: 'address',
                name: '',
                type: 'address',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [],
        name: 'renounceOwnership',
        outputs: [],
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        inputs: [
            {
                internalType: 'uint120',
                name: '_evmCallRequestV1FeeUSD',
                type: 'uint120',
            },
            {
                internalType: 'uint120',
                name: '_evmCallComputeV1ReduceFeeUSD',
                type: 'uint120',
            },
            {
                internalType: 'uint16',
                name: '_evmCallComputeV1MapBps',
                type: 'uint16',
            },
        ],
        name: 'setCmdFees',
        outputs: [],
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        inputs: [
            {
                internalType: 'uint32[]',
                name: 'dstEids',
                type: 'uint32[]',
            },
            {
                components: [
                    {
                        internalType: 'uint32',
                        name: 'avgBlockTime',
                        type: 'uint32',
                    },
                    {
                        internalType: 'uint64',
                        name: 'blockNum',
                        type: 'uint64',
                    },
                    {
                        internalType: 'uint64',
                        name: 'timestamp',
                        type: 'uint64',
                    },
                    {
                        internalType: 'uint32',
                        name: 'maxPastRetention',
                        type: 'uint32',
                    },
                    {
                        internalType: 'uint32',
                        name: 'maxFutureRetention',
                        type: 'uint32',
                    },
                ],
                internalType: 'struct DVNFeeLib.BlockTimeConfig[]',
                name: '_blockConfigs',
                type: 'tuple[]',
            },
        ],
        name: 'setDstBlockTimeConfigs',
        outputs: [],
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        inputs: [
            {
                components: [
                    {
                        internalType: 'uint32',
                        name: 'targetEid',
                        type: 'uint32',
                    },
                    {
                        internalType: 'BitMap256',
                        name: 'types',
                        type: 'uint256',
                    },
                ],
                internalType: 'struct DVNFeeLib.SetSupportedCmdTypesParam[]',
                name: '_params',
                type: 'tuple[]',
            },
        ],
        name: 'setSupportedCmdTypes',
        outputs: [],
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        inputs: [
            {
                internalType: 'address',
                name: 'newOwner',
                type: 'address',
            },
        ],
        name: 'transferOwnership',
        outputs: [],
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        inputs: [],
        name: 'version',
        outputs: [
            {
                internalType: 'uint64',
                name: 'major',
                type: 'uint64',
            },
            {
                internalType: 'uint8',
                name: 'minor',
                type: 'uint8',
            },
        ],
        stateMutability: 'pure',
        type: 'function',
    },
    {
        inputs: [
            {
                internalType: 'address',
                name: '_token',
                type: 'address',
            },
            {
                internalType: 'address',
                name: '_to',
                type: 'address',
            },
            {
                internalType: 'uint256',
                name: '_amount',
                type: 'uint256',
            },
        ],
        name: 'withdrawToken',
        outputs: [],
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        stateMutability: 'payable',
        type: 'receive',
    },
] as const

const _bytecode =
    '0x60c06040523480156200001157600080fd5b50604051620027f0380380620027f08339810160408190526200003491620000a3565b6200003f3362000053565b63ffffffff90911660a052608052620000dc565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60008060408385031215620000b757600080fd5b825163ffffffff81168114620000cc57600080fd5b6020939093015192949293505050565b60805160a0516126e062000110600039600081816107d1015261084d01526000818161093d0152610d7401526126e06000f3fe6080604052600436106100ec5760003560e01c80638da5cb5b1161008a578063de0a93c311610059578063de0a93c314610335578063df2b057e146103aa578063f2fde38b146103bd578063f5ff608f146103dd57600080fd5b80638da5cb5b146102ad5780639ac23d28146102e2578063bbc5a33b14610302578063d358b3001461031557600080fd5b806339f26dfc116100c657806339f26dfc1461023757806354fd4d5014610257578063715018a6146102785780637bfa20a91461028d57600080fd5b806301e33667146100f857806310b65f761461011a5780632565c2451461016057600080fd5b366100f357005b600080fd5b34801561010457600080fd5b50610118610113366004611d1f565b6103fd565b005b34801561012657600080fd5b5061014d610135366004611d6d565b63ffffffff1660009081526001602052604090205490565b6040519081526020015b60405180910390f35b34801561016c57600080fd5b506101f761017b366004611d6d565b60036020526000908152604090205463ffffffff8082169167ffffffffffffffff64010000000082048116926c0100000000000000000000000083049091169174010000000000000000000000000000000000000000810482169178010000000000000000000000000000000000000000000000009091041685565b6040805163ffffffff968716815267ffffffffffffffff95861660208201529390941693830193909352831660608201529116608082015260a001610157565b34801561024357600080fd5b50610118610252366004611dc2565b610415565b34801561026357600080fd5b50604080516001808252602082015201610157565b34801561028457600080fd5b506101186104c5565b34801561029957600080fd5b5061014d6102a8366004611e66565b6104d9565b3480156102b957600080fd5b5060005460405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610157565b3480156102ee57600080fd5b506101186102fd366004611ed2565b6106a9565b61014d610310366004611f9a565b610769565b34801561032157600080fd5b5061014d610330366004611f9a565b610784565b34801561034157600080fd5b50600254604080516effffffffffffffffffffffffffffff80841682526f0100000000000000000000000000000084041660208201527e0100000000000000000000000000000000000000000000000000000000000090920461ffff1690820152606001610157565b61014d6103b8366004611e66565b6109c7565b3480156103c957600080fd5b506101186103d8366004612036565b6109de565b3480156103e957600080fd5b506101186103f8366004612051565b610a95565b610405610b12565b610410838383610b93565b505050565b61041d610b12565b6002805461ffff9092167e01000000000000000000000000000000000000000000000000000000000000027dffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6effffffffffffffffffffffffffffff9485166f01000000000000000000000000000000027fffff00000000000000000000000000000000000000000000000000000000000090941694909516939093179190911792909216179055565b6104cd610b12565b6104d76000610bc3565b565b60006104e860208501856120dc565b67ffffffffffffffff16600003610549576105096040860160208701611d6d565b6040517fd009138a00000000000000000000000000000000000000000000000000000000815263ffffffff90911660048201526024015b60405180910390fd5b6105538383610c38565b50600061057861056960a08801608089016120dc565b67ffffffffffffffff16610cdc565b905060008061058a6020890189612036565b73ffffffffffffffffffffffffffffffffffffffff166388a4124c6105b560408b0160208c01611d6d565b856105c360208c018c6120dc565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e086901b16815263ffffffff939093166004840152602483019190915267ffffffffffffffff166044820152606401608060405180830381865afa158015610634573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106589190612117565b93505050915061069b82886020016020810190610675919061216c565b61068560c08c0160a08d0161216c565b61069560608c0160408d01612187565b85610cea565b93505050505b949350505050565b6106b1610b12565b8281146106ea576040517fb54ecc3800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b8381101561076257828282818110610707576107076121a4565b905060a0020160036000878785818110610723576107236121a4565b90506020020160208101906107389190611d6d565b63ffffffff168152602081019190915260400160002061075882826121e0565b50506001016106ed565b5050505050565b6000610779878787878787610784565b979650505050505050565b600061079360208701876120dc565b67ffffffffffffffff166000036107fe576040517fd009138a00000000000000000000000000000000000000000000000000000000815263ffffffff7f0000000000000000000000000000000000000000000000000000000000000000166004820152602401610540565b6108088383610c38565b50600061081e61056960608a0160408b016120dc565b905060008061083060208b018b612036565b73ffffffffffffffffffffffffffffffffffffffff166388a4124c7f00000000000000000000000000000000000000000000000000000000000000008561087a60208e018e6120dc565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e086901b16815263ffffffff939093166004840152602483019190915267ffffffffffffffff166044820152606401608060405180830381865afa1580156108eb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061090f9190612117565b93505050915060006109218989610de2565b905060006fffffffffffffffffffffffffffffffff83166109627f0000000000000000000000000000000000000000000000000000000000000000846123a7565b61096c91906123ed565b90506109b761097b8286612401565b61098b60408e0160208f0161216c565b8e606001602081019061099e919061216c565b8e60400160208101906109b19190612187565b87610cea565b9c9b505050505050505050505050565b60006109d5858585856104d9565b95945050505050565b6109e6610b12565b73ffffffffffffffffffffffffffffffffffffffff8116610a89576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401610540565b610a9281610bc3565b50565b610a9d610b12565b60005b8181101561041057828282818110610aba57610aba6121a4565b9050604002016020013560016000016000858585818110610add57610add6121a4565b610af39260206040909202019081019150611d6d565b63ffffffff168152602081019190915260400160002055600101610aa0565b60005473ffffffffffffffffffffffffffffffffffffffff1633146104d7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610540565b73ffffffffffffffffffffffffffffffffffffffff8316610bb8576104108282610ecb565b610410838383610fd1565b6000805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000808215610c9457600080610c4f86868561103f565b6040517f7085244b00000000000000000000000000000000000000000000000000000000815260ff851660048201529096509294508593505060249091019050610540565b808314610cd0576040517f04eb6e0c00000000000000000000000000000000000000000000000000000000815260048101829052602401610540565b60009150505b92915050565b6000610cd682610120611099565b60008061ffff861615610cfd5785610cff565b845b90506000612710610d1461ffff84168a6123a7565b610d1e91906123ed565b90506fffffffffffffffffffffffffffffffff84161580610d4f57506fffffffffffffffffffffffffffffffff8516155b15610d5d5791506109d59050565b6000846fffffffffffffffffffffffffffffffff167f0000000000000000000000000000000000000000000000000000000000000000876fffffffffffffffffffffffffffffffff16610db091906123a7565b610dba91906123ed565b610dc4908a612401565b9050818111610dd35781610dd5565b805b9998505050505050505050565b600080610df284846110fe61130f565b6002548151919250610e1b916effffffffffffffffffffffffffffff9091169061ffff16612414565b6effffffffffffffffffffffffffffff169150806020015115610e865760025461271090610e6f907e01000000000000000000000000000000000000000000000000000000000000900461ffff16846123a7565b610e7991906123ed565b610e839083612401565b91505b806040015115610ec457600254610ec1906f0100000000000000000000000000000090046effffffffffffffffffffffffffffff1683612401565b91505b5092915050565b73ffffffffffffffffffffffffffffffffffffffff8216610f18576040517f6b7a931000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008273ffffffffffffffffffffffffffffffffffffffff168260405160006040518083038185875af1925050503d8060008114610f72576040519150601f19603f3d011682016040523d82523d6000602084013e610f77565b606091505b5050905080610410576040517f465bc83400000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8416600482015260248101839052604401610540565b73ffffffffffffffffffffffffffffffffffffffff821661101e576040517f6b7a931000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61041073ffffffffffffffffffffffffffffffffffffffff84168383611933565b6000368160018401816110538888846119c0565b600283019290915061106b90899089906003016119e7565b94506002820161ffff8216830161108481838b8d612447565b979b909a50969850505061ffff160193505050565b6000806110a76041856123a7565b90506110b4602082612471565b156110dc576110c4602082612471565b6110ce9082612485565b6110d9906020612401565b90505b806110e984610104612401565b6110f39190612401565b610ec1906020612401565b61110a60018583611a0c565b6111176001856002611a4d565b156113095763ffffffff808516600090815260036020908152604091829020825160a0810184529054808516825267ffffffffffffffff64010000000082048116938301939093526c010000000000000000000000008104909216928101929092527401000000000000000000000000000000000000000081048316606083015278010000000000000000000000000000000000000000000000009004909116608082015282841561126d57816020015167ffffffffffffffff168467ffffffffffffffff16111561122957815160208301516103e89163ffffffff16906111ff9087612498565b61120991906124b9565b61121391906124dd565b82604001516112229190612504565b905061126d565b6103e8826000015163ffffffff168584602001516112479190612498565b61125191906124b9565b61125b91906124dd565b826040015161126a9190612498565b90505b42826060015163ffffffff16826112849190612504565b67ffffffffffffffff1610806112b7575060808201516112aa9063ffffffff1642612401565b8167ffffffffffffffff16115b15611306576040517f0c5a8d2300000000000000000000000000000000000000000000000000000000815263ffffffff8716600482015267ffffffffffffffff82166024820152604401610540565b50505b50505050565b60408051606081018252600080825260208201819052918101829052908085818661133b826002612401565b9261134893929190612447565b61135191612525565b60f01c9050611361600283612401565b915061ffff81166001146113a1576040517fa9146eeb00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6113ac600283612401565b915060008683876113be826002612401565b926113cb93929190612447565b6113d491612525565b60f01c90506113e4600284612401565b92508061ffff16600003611424576040517f87a7f37900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61ffff1683525060005b826000015161ffff168161ffff161015611696576000868684818110611456576114566121a4565b919091013560f81c915061146d9050600184612401565b925060ff81166001146114ac576040517fa9146eeb00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6114b7600284612401565b925060008784886114c9826002612401565b926114d693929190612447565b6114df91612525565b60f01c90506114ef600285612401565b93507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff61ffff82160161165a57600088858961152c826002612401565b9261153993929190612447565b61154291612525565b60f01c9050611552600286612401565b94508460008a828b611565826004612401565b9261157293929190612447565b61157b9161256b565b60e01c905061158b600483612401565b915060008b8b848181106115a1576115a16121a4565b600192013560f81c821492506115b991905084612401565b925060008c848d6115cb826008612401565b926115d893929190612447565b6115e1916125b1565b60c01c90506115f783838360008f63ffffffff16565b508a925061160c91505061ffff831687612401565b1115611644576040517f87a7f37900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61165261ffff821686612401565b94505061168c565b6040517fb968846100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b505060010161142e565b50838110156118f25760008585838181106116b3576116b36121a4565b919091013560f81c91506116ca9050600183612401565b915060ff8116600114611709576040517fa9146eeb00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000868387611719826002612401565b9261172693929190612447565b61172f91612525565b60f01c905061173f600284612401565b925061ffff811660011461177f576040517fb968846100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000878785818110611793576117936121a4565b919091013560f81c91506117aa9050600185612401565b935060ff81166117c0576001602086015261182f565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60ff8216016117f6576001604086015261182f565b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe60ff82160161165a5760016020860181905260408601525b600088858961183f826004612401565b9261184c93929190612447565b6118559161256b565b60e01c9050611865600486612401565b9450600089898781811061187b5761187b6121a4565b600192013560f81c8214925061189391905087612401565b955060008a878b6118a5826008612401565b926118b293929190612447565b6118bb916125b1565b60c01c90506118cb600888612401565b96506118de83838360018d63ffffffff16565b6118e9601688612401565b96505050505050505b80841461192b576040517f87a7f37900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b509392505050565b6040805173ffffffffffffffffffffffffffffffffffffffff8416602482015260448082018490528251808303909101815260649091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fa9059cbb00000000000000000000000000000000000000000000000000000000179052610410908490611a73565b6000600282016119d281848688612447565b6119db91612525565b60f01c95945050505050565b60008383838181106119fb576119fb6121a4565b919091013560f81c95945050505050565b611a17838383611a4d565b610410576040517f50fae9eb00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b63ffffffff80831660009081526020859052604081205490916106a191908490611b8216565b6000611ad5826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff16611b919092919063ffffffff16565b9050805160001480611af6575080806020019051810190611af691906125f7565b610410576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f742073756363656564000000000000000000000000000000000000000000006064820152608401610540565b600160ff919091161b16151590565b60606106a18484600085856000808673ffffffffffffffffffffffffffffffffffffffff168587604051611bc5919061263d565b60006040518083038185875af1925050503d8060008114611c02576040519150601f19603f3d011682016040523d82523d6000602084013e611c07565b606091505b50915091506107798783838760608315611ca9578251600003611ca25773ffffffffffffffffffffffffffffffffffffffff85163b611ca2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610540565b50816106a1565b6106a18383815115611cbe5781518083602001fd5b806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105409190612659565b5050565b803573ffffffffffffffffffffffffffffffffffffffff81168114611d1a57600080fd5b919050565b600080600060608486031215611d3457600080fd5b611d3d84611cf6565b9250611d4b60208501611cf6565b9150604084013590509250925092565b63ffffffff81168114610a9257600080fd5b600060208284031215611d7f57600080fd5b8135611d8a81611d5b565b9392505050565b80356effffffffffffffffffffffffffffff81168114611d1a57600080fd5b803561ffff81168114611d1a57600080fd5b600080600060608486031215611dd757600080fd5b611de084611d91565b9250611dee60208501611d91565b9150611dfc60408501611db0565b90509250925092565b600060608284031215611e1757600080fd5b50919050565b60008083601f840112611e2f57600080fd5b50813567ffffffffffffffff811115611e4757600080fd5b602083019150836020828501011115611e5f57600080fd5b9250929050565b600080600080848603610140811215611e7e57600080fd5b60c0811215611e8c57600080fd5b50849350611e9d8660c08701611e05565b925061012085013567ffffffffffffffff811115611eba57600080fd5b611ec687828801611e1d565b95989497509550505050565b60008060008060408587031215611ee857600080fd5b843567ffffffffffffffff80821115611f0057600080fd5b818701915087601f830112611f1457600080fd5b813581811115611f2357600080fd5b8860208260051b8501011115611f3857600080fd5b602092830196509450908601359080821115611f5357600080fd5b818701915087601f830112611f6757600080fd5b813581811115611f7657600080fd5b88602060a083028501011115611f8b57600080fd5b95989497505060200194505050565b600080600080600080868803610120811215611fb557600080fd5b6080811215611fc357600080fd5b50869550611fd48860808901611e05565b945060e087013567ffffffffffffffff80821115611ff157600080fd5b611ffd8a838b01611e1d565b909650945061010089013591508082111561201757600080fd5b5061202489828a01611e1d565b979a9699509497509295939492505050565b60006020828403121561204857600080fd5b611d8a82611cf6565b6000806020838503121561206457600080fd5b823567ffffffffffffffff8082111561207c57600080fd5b818501915085601f83011261209057600080fd5b81358181111561209f57600080fd5b8660208260061b85010111156120b457600080fd5b60209290920196919550909350505050565b67ffffffffffffffff81168114610a9257600080fd5b6000602082840312156120ee57600080fd5b8135611d8a816120c6565b6fffffffffffffffffffffffffffffffff81168114610a9257600080fd5b6000806000806080858703121561212d57600080fd5b84519350602085015161213f816120f9565b6040860151909350612150816120f9565b6060860151909250612161816120f9565b939692955090935050565b60006020828403121561217e57600080fd5b611d8a82611db0565b60006020828403121561219957600080fd5b8135611d8a816120f9565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60008135610cd681611d5b565b81356121eb81611d5b565b63ffffffff811690508154817fffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000008216178355602084013561222b816120c6565b6bffffffffffffffff000000008160201b16905080837fffffffffffffffffffffffffffffffffffffffff0000000000000000000000008416171784556040850135612276816120c6565b73ffffffffffffffff0000000000000000000000008160601b169050837fffffffffffffffffffffffff0000000000000000000000000000000000000000841617935080848317178555606086013592506122d083611d5b565b77ffffffff00000000000000000000000000000000000000008360a01b167fffffffffffffffff00000000ffffffffffffffffffffffffffffffffffffffff85168317821717855550505050611cf261232b608084016121d3565b82547fffffffff00000000ffffffffffffffffffffffffffffffffffffffffffffffff1660c09190911b7bffffffff00000000000000000000000000000000000000000000000016178255565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b8082028115828204841417610cd657610cd6612378565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000826123fc576123fc6123be565b500490565b80820180821115610cd657610cd6612378565b6effffffffffffffffffffffffffffff81811683821602808216919082811461243f5761243f612378565b505092915050565b6000808585111561245757600080fd5b8386111561246457600080fd5b5050820193919092039150565b600082612480576124806123be565b500690565b81810381811115610cd657610cd6612378565b67ffffffffffffffff828116828216039080821115610ec457610ec4612378565b67ffffffffffffffff81811683821602808216919082811461243f5761243f612378565b600067ffffffffffffffff808416806124f8576124f86123be565b92169190910492915050565b67ffffffffffffffff818116838216019080821115610ec457610ec4612378565b7fffff000000000000000000000000000000000000000000000000000000000000813581811691600285101561243f5760029490940360031b84901b1690921692915050565b7fffffffff00000000000000000000000000000000000000000000000000000000813581811691600485101561243f5760049490940360031b84901b1690921692915050565b7fffffffffffffffff000000000000000000000000000000000000000000000000813581811691600885101561243f5760089490940360031b84901b1690921692915050565b60006020828403121561260957600080fd5b81518015158114611d8a57600080fd5b60005b8381101561263457818101518382015260200161261c565b50506000910152565b6000825161264f818460208701612619565b9190910192915050565b6020815260008251806020840152612678816040850160208701612619565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016919091016040019291505056fea26469706673582212205cef58f711b1d822a7fb674f92dee58950be225f8d621e732f682189c072d55d64736f6c63430008160033'

type DVNFeeLibConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>

const isSuperArgs = (xs: DVNFeeLibConstructorParams): xs is ConstructorParameters<typeof ContractFactory> =>
    xs.length > 1

export class DVNFeeLib__factory extends ContractFactory {
    constructor(...args: DVNFeeLibConstructorParams) {
        if (isSuperArgs(args)) {
            super(...args)
        } else {
            super(_abi, _bytecode, args[0])
        }
    }

    override deploy(
        _localEidV2: PromiseOrValue<BigNumberish>,
        _nativeDecimalsRate: PromiseOrValue<BigNumberish>,
        overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<DVNFeeLib> {
        return super.deploy(_localEidV2, _nativeDecimalsRate, overrides || {}) as Promise<DVNFeeLib>
    }
    override getDeployTransaction(
        _localEidV2: PromiseOrValue<BigNumberish>,
        _nativeDecimalsRate: PromiseOrValue<BigNumberish>,
        overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): TransactionRequest {
        return super.getDeployTransaction(_localEidV2, _nativeDecimalsRate, overrides || {})
    }
    override attach(address: string): DVNFeeLib {
        return super.attach(address) as DVNFeeLib
    }
    override connect(signer: Signer): DVNFeeLib__factory {
        return super.connect(signer) as DVNFeeLib__factory
    }

    static readonly bytecode = _bytecode
    static readonly abi = _abi
    static createInterface(): DVNFeeLibInterface {
        return new utils.Interface(_abi) as DVNFeeLibInterface
    }
    static connect(address: string, signerOrProvider: Signer | Provider): DVNFeeLib {
        return new Contract(address, _abi, signerOrProvider) as DVNFeeLib
    }
}
