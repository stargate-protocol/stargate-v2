/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from 'ethers'
import type { Provider } from '@ethersproject/providers'
import type { IReceiveUln, IReceiveUlnInterface } from '../../../../../uln/dvn/adapters/DVNAdapterBase.sol/IReceiveUln'

const _abi = [
    {
        inputs: [
            {
                internalType: 'bytes',
                name: '_packetHeader',
                type: 'bytes',
            },
            {
                internalType: 'bytes32',
                name: '_payloadHash',
                type: 'bytes32',
            },
            {
                internalType: 'uint64',
                name: '_confirmations',
                type: 'uint64',
            },
        ],
        name: 'verify',
        outputs: [],
        stateMutability: 'nonpayable',
        type: 'function',
    },
] as const

export class IReceiveUln__factory {
    static readonly abi = _abi
    static createInterface(): IReceiveUlnInterface {
        return new utils.Interface(_abi) as IReceiveUlnInterface
    }
    static connect(address: string, signerOrProvider: Signer | Provider): IReceiveUln {
        return new Contract(address, _abi, signerOrProvider) as IReceiveUln
    }
}
