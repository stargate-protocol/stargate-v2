/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers'
import type { Provider, TransactionRequest } from '@ethersproject/providers'
import type { PromiseOrValue } from '../../../../common'
import type {
    ReceiveUln302View,
    ReceiveUln302ViewInterface,
} from '../../../../uln/uln302/ReceiveUln302View.sol/ReceiveUln302View'

const _abi = [
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: 'uint8',
                name: 'version',
                type: 'uint8',
            },
        ],
        name: 'Initialized',
        type: 'event',
    },
    {
        inputs: [],
        name: 'EMPTY_PAYLOAD_HASH',
        outputs: [
            {
                internalType: 'bytes32',
                name: '',
                type: 'bytes32',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [],
        name: 'NIL_PAYLOAD_HASH',
        outputs: [
            {
                internalType: 'bytes32',
                name: '',
                type: 'bytes32',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [],
        name: 'endpoint',
        outputs: [
            {
                internalType: 'contract ILayerZeroEndpointV2',
                name: '',
                type: 'address',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [
            {
                components: [
                    {
                        internalType: 'uint32',
                        name: 'srcEid',
                        type: 'uint32',
                    },
                    {
                        internalType: 'bytes32',
                        name: 'sender',
                        type: 'bytes32',
                    },
                    {
                        internalType: 'uint64',
                        name: 'nonce',
                        type: 'uint64',
                    },
                ],
                internalType: 'struct Origin',
                name: '_origin',
                type: 'tuple',
            },
            {
                internalType: 'address',
                name: '_receiver',
                type: 'address',
            },
        ],
        name: 'executable',
        outputs: [
            {
                internalType: 'enum ExecutionState',
                name: '',
                type: 'uint8',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [
            {
                components: [
                    {
                        internalType: 'uint32',
                        name: 'srcEid',
                        type: 'uint32',
                    },
                    {
                        internalType: 'bytes32',
                        name: 'sender',
                        type: 'bytes32',
                    },
                    {
                        internalType: 'uint64',
                        name: 'nonce',
                        type: 'uint64',
                    },
                ],
                internalType: 'struct Origin',
                name: '_origin',
                type: 'tuple',
            },
            {
                internalType: 'address',
                name: '_receiver',
                type: 'address',
            },
        ],
        name: 'initializable',
        outputs: [
            {
                internalType: 'bool',
                name: '',
                type: 'bool',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [
            {
                internalType: 'address',
                name: '_endpoint',
                type: 'address',
            },
            {
                internalType: 'address',
                name: '_receiveUln302',
                type: 'address',
            },
        ],
        name: 'initialize',
        outputs: [],
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        inputs: [],
        name: 'receiveUln302',
        outputs: [
            {
                internalType: 'contract IReceiveUln302',
                name: '',
                type: 'address',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [
            {
                internalType: 'bytes',
                name: '_packetHeader',
                type: 'bytes',
            },
            {
                internalType: 'bytes32',
                name: '_payloadHash',
                type: 'bytes32',
            },
        ],
        name: 'verifiable',
        outputs: [
            {
                internalType: 'enum VerificationState',
                name: '',
                type: 'uint8',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [
            {
                components: [
                    {
                        internalType: 'uint32',
                        name: 'srcEid',
                        type: 'uint32',
                    },
                    {
                        internalType: 'bytes32',
                        name: 'sender',
                        type: 'bytes32',
                    },
                    {
                        internalType: 'uint64',
                        name: 'nonce',
                        type: 'uint64',
                    },
                ],
                internalType: 'struct Origin',
                name: '_origin',
                type: 'tuple',
            },
            {
                internalType: 'address',
                name: '_receiver',
                type: 'address',
            },
            {
                internalType: 'address',
                name: '_receiveLib',
                type: 'address',
            },
            {
                internalType: 'bytes32',
                name: '_payloadHash',
                type: 'bytes32',
            },
        ],
        name: 'verifiable',
        outputs: [
            {
                internalType: 'bool',
                name: '',
                type: 'bool',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
] as const

const _bytecode =
    '0x608060405234801561001057600080fd5b506117bf806100206000396000f3fe608060405234801561001057600080fd5b50600436106100a35760003560e01c80635e280f1111610076578063861e1ca51161005b578063861e1ca514610199578063cb5026b9146101bc578063e1e3a7df146101c457600080fd5b80635e280f111461012e578063843c7b0e1461017957600080fd5b806327d12cd9146100a85780632baf0be7146100d1578063485cc955146101065780634b4b2efb1461011b575b600080fd5b6100bb6100b6366004611077565b6101d7565b6040516100c89190611126565b60405180910390f35b6100f87fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81565b6040519081526020016100c8565b61011961011436600461115b565b610487565b005b6100bb610129366004611281565b6107b1565b6000546101549062010000900473ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016100c8565b6032546101549073ffffffffffffffffffffffffffffffffffffffff1681565b6101ac6101a7366004611281565b610abe565b60405190151581526020016100c8565b6100f8600081565b6101ac6101d23660046112ae565b610bae565b6032546040517fc40ff83500000000000000000000000000000000000000000000000000000000815260009173ffffffffffffffffffffffffffffffffffffffff81169163c40ff8359161025191889188917401000000000000000000000000000000000000000090910463ffffffff16906004016112fe565b60006040518083038186803b15801561026957600080fd5b505afa15801561027d573d6000803e3d6000fd5b50505050600061028d8585610d56565b9050600060405180606001604052806102a68888610d68565b63ffffffff1681526020016102bb8888610d8b565b81526020016102ca8888610da4565b67ffffffffffffffff16905290506102e28183610abe565b6102f157600392505050610480565b6102fc818386610dc7565b61030b57600292505050610480565b60325481516040517f43ea4fa900000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff858116600483015263ffffffff909216602482015291169063e084d9529082906343ea4fa990604401600060405180830381865afa158015610391573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526103d79190810190611441565b88886040516103e7929190611516565b6040519081900381207fffffffff0000000000000000000000000000000000000000000000000000000060e085901b16825261042892918990600401611578565b602060405180830381865afa158015610445573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104699190611620565b1561047957600192505050610480565b6000925050505b9392505050565b60006104b17fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61035490565b905073ffffffffffffffffffffffffffffffffffffffff811661050a5773ffffffffffffffffffffffffffffffffffffffff7fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61035561052c565b3373ffffffffffffffffffffffffffffffffffffffff82161461052c57600080fd5b600054610100900460ff161580801561054c5750600054600160ff909116105b806105665750303b158015610566575060005460ff166001145b6105f7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a656400000000000000000000000000000000000060648201526084015b60405180910390fd5b600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001179055801561065557600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff166101001790555b61065e84610ee0565b603280547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff85811691909117909155600054604080517f416ecebf0000000000000000000000000000000000000000000000000000000081529051620100009092049092169163416ecebf9160048083019260209291908290030181865afa158015610704573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107289190611642565b603260146101000a81548163ffffffff021916908363ffffffff16021790555080156107ab57600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50505050565b600080548351602085015160408087015190517fc9fc7bcd00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff878116600483015263ffffffff9094166024820152604481019290925267ffffffffffffffff16606482015283926201000090049091169063c9fc7bcd90608401602060405180830381865afa15801561085a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061087e919061165f565b90508015801561095a5750600054845160208601516040517f5b17bb7000000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff878116600483015263ffffffff90931660248201526044810191909152620100009092041690635b17bb7090606401602060405180830381865afa15801561091a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061093e9190611678565b67ffffffffffffffff16846040015167ffffffffffffffff1611155b15610969576003915050610ab8565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114801590610a655750600054845160208601516040517fa0dd43fc00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff878116600483015263ffffffff9093166024820152604481019190915262010000909204169063a0dd43fc90606401602060405180830381865afa158015610a25573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a499190611678565b67ffffffffffffffff16846040015167ffffffffffffffff1611155b15610a74576002915050610ab8565b8015801590610aa357507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114155b15610ab2576001915050610ab8565b60009150505b92915050565b60008054604080517f861e1ca5000000000000000000000000000000000000000000000000000000008152855163ffffffff166004820152602086015160248201529085015167ffffffffffffffff16604482015273ffffffffffffffffffffffffffffffffffffffff8481166064830152620100009092049091169063861e1ca590608401602060405180830381865afa925050508015610b9b575060408051601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201909252610b9891810190611620565b60015b610ba757506000610ab8565b9050610ab8565b6000805485516040517f9d7f977500000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff878116600483015263ffffffff90921660248201528582166044820152620100009092041690639d7f977590606401602060405180830381865afa158015610c3b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c5f9190611620565b610c6b57506000610d4e565b600054604080517fc9a54a99000000000000000000000000000000000000000000000000000000008152875163ffffffff166004820152602088015160248201529087015167ffffffffffffffff16604482015273ffffffffffffffffffffffffffffffffffffffff8681166064830152620100009092049091169063c9a54a9990608401602060405180830381865afa158015610d0d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d319190611620565b610d3d57506000610d4e565b81610d4a57506000610d4e565b5060015b949350505050565b6000610480610d658484610f83565b90565b6000610d78600d60098486611695565b610d81916116bf565b60e01c9392505050565b6000610d9b602d600d8486611695565b61048091611707565b6000610db4600960018486611695565b610dbd91611743565b60c01c9392505050565b603254600090610df1908590859073ffffffffffffffffffffffffffffffffffffffff1685610bae565b610dfd57506000610480565b6000548451602086015160408088015190517fc9fc7bcd00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff888116600483015263ffffffff9094166024820152604481019290925267ffffffffffffffff16606482015284926201000090049091169063c9fc7bcd90608401602060405180830381865afa158015610ea5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ec9919061165f565b03610ed657506000610480565b5060019392505050565b600054610100900460ff16610f77576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201527f6e697469616c697a696e6700000000000000000000000000000000000000000060648201526084016105ee565b610f8081610f93565b50565b6000610d9b605160318486611695565b600054610100900460ff1661102a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201527f6e697469616c697a696e6700000000000000000000000000000000000000000060648201526084016105ee565b6000805473ffffffffffffffffffffffffffffffffffffffff90921662010000027fffffffffffffffffffff0000000000000000000000000000000000000000ffff909216919091179055565b60008060006040848603121561108c57600080fd5b833567ffffffffffffffff808211156110a457600080fd5b818601915086601f8301126110b857600080fd5b8135818111156110c757600080fd5b8760208285010111156110d957600080fd5b6020928301989097509590910135949350505050565b60048110610f80577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60208101611133836110ef565b91905290565b73ffffffffffffffffffffffffffffffffffffffff81168114610f8057600080fd5b6000806040838503121561116e57600080fd5b823561117981611139565b9150602083013561118981611139565b809150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60405160c0810167ffffffffffffffff811182821017156111e6576111e6611194565b60405290565b63ffffffff81168114610f8057600080fd5b67ffffffffffffffff81168114610f8057600080fd5b60006060828403121561122657600080fd5b6040516060810181811067ffffffffffffffff8211171561124957611249611194565b604052905080823561125a816111ec565b8152602083810135908201526040830135611274816111fe565b6040919091015292915050565b6000806080838503121561129457600080fd5b61129e8484611214565b9150606083013561118981611139565b60008060008060c085870312156112c457600080fd5b6112ce8686611214565b935060608501356112de81611139565b925060808501356112ee81611139565b9396929550929360a00135925050565b6040815282604082015282846060830137600060608483010152600060607fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f860116830101905063ffffffff83166020830152949350505050565b8051611366816111fe565b919050565b805160ff8116811461136657600080fd5b600082601f83011261138d57600080fd5b8151602067ffffffffffffffff808311156113aa576113aa611194565b8260051b6040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0603f830116810181811084821117156113ed576113ed611194565b604052938452602081870181019490810192508785111561140d57600080fd5b6020870191505b8482101561143657815161142781611139565b83529183019190830190611414565b979650505050505050565b60006020828403121561145357600080fd5b815167ffffffffffffffff8082111561146b57600080fd5b9083019060c0828603121561147f57600080fd5b6114876111c3565b6114908361135b565b815261149e6020840161136b565b60208201526114af6040840161136b565b60408201526114c06060840161136b565b60608201526080830151828111156114d757600080fd5b6114e38782860161137c565b60808301525060a0830151828111156114fb57600080fd5b6115078782860161137c565b60a08301525095945050505050565b8183823760009101908152919050565b60008151808452602080850194506020840160005b8381101561156d57815173ffffffffffffffffffffffffffffffffffffffff168752958201959082019060010161153b565b509495945050505050565b6060815267ffffffffffffffff845116606082015260ff602085015116608082015260ff60408501511660a082015260ff60608501511660c08201526000608085015160c060e08401526115d0610120840182611526565b905060a08601517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa08483030161010085015261160c8282611526565b602085019690965250505060400152919050565b60006020828403121561163257600080fd5b8151801515811461048057600080fd5b60006020828403121561165457600080fd5b8151610480816111ec565b60006020828403121561167157600080fd5b5051919050565b60006020828403121561168a57600080fd5b8151610480816111fe565b600080858511156116a557600080fd5b838611156116b257600080fd5b5050820193919092039150565b7fffffffff0000000000000000000000000000000000000000000000000000000081358181169160048510156116ff5780818660040360031b1b83161692505b505092915050565b80356020831015610ab8577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff602084900360031b1b1692915050565b7fffffffffffffffff00000000000000000000000000000000000000000000000081358181169160088510156116ff5760089490940360031b84901b169092169291505056fea2646970667358221220d0d473c77807b487fecb423cc3083954c038668ead93f8f8e0586ef91987c93364736f6c63430008160033'

type ReceiveUln302ViewConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>

const isSuperArgs = (xs: ReceiveUln302ViewConstructorParams): xs is ConstructorParameters<typeof ContractFactory> =>
    xs.length > 1

export class ReceiveUln302View__factory extends ContractFactory {
    constructor(...args: ReceiveUln302ViewConstructorParams) {
        if (isSuperArgs(args)) {
            super(...args)
        } else {
            super(_abi, _bytecode, args[0])
        }
    }

    override deploy(overrides?: Overrides & { from?: PromiseOrValue<string> }): Promise<ReceiveUln302View> {
        return super.deploy(overrides || {}) as Promise<ReceiveUln302View>
    }
    override getDeployTransaction(overrides?: Overrides & { from?: PromiseOrValue<string> }): TransactionRequest {
        return super.getDeployTransaction(overrides || {})
    }
    override attach(address: string): ReceiveUln302View {
        return super.attach(address) as ReceiveUln302View
    }
    override connect(signer: Signer): ReceiveUln302View__factory {
        return super.connect(signer) as ReceiveUln302View__factory
    }

    static readonly bytecode = _bytecode
    static readonly abi = _abi
    static createInterface(): ReceiveUln302ViewInterface {
        return new utils.Interface(_abi) as ReceiveUln302ViewInterface
    }
    static connect(address: string, signerOrProvider: Signer | Provider): ReceiveUln302View {
        return new Contract(address, _abi, signerOrProvider) as ReceiveUln302View
    }
}
