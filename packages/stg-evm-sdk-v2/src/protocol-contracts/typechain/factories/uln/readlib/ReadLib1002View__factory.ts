/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers'
import type { Provider, TransactionRequest } from '@ethersproject/providers'
import type { PromiseOrValue } from '../../../common'
import type { ReadLib1002View, ReadLib1002ViewInterface } from '../../../uln/readlib/ReadLib1002View'

const _abi = [
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: 'uint8',
                name: 'version',
                type: 'uint8',
            },
        ],
        name: 'Initialized',
        type: 'event',
    },
    {
        inputs: [],
        name: 'EMPTY_PAYLOAD_HASH',
        outputs: [
            {
                internalType: 'bytes32',
                name: '',
                type: 'bytes32',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [],
        name: 'NIL_PAYLOAD_HASH',
        outputs: [
            {
                internalType: 'bytes32',
                name: '',
                type: 'bytes32',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [],
        name: 'endpoint',
        outputs: [
            {
                internalType: 'contract ILayerZeroEndpointV2',
                name: '',
                type: 'address',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [
            {
                components: [
                    {
                        internalType: 'uint32',
                        name: 'srcEid',
                        type: 'uint32',
                    },
                    {
                        internalType: 'bytes32',
                        name: 'sender',
                        type: 'bytes32',
                    },
                    {
                        internalType: 'uint64',
                        name: 'nonce',
                        type: 'uint64',
                    },
                ],
                internalType: 'struct Origin',
                name: '_origin',
                type: 'tuple',
            },
            {
                internalType: 'address',
                name: '_receiver',
                type: 'address',
            },
        ],
        name: 'executable',
        outputs: [
            {
                internalType: 'enum ExecutionState',
                name: '',
                type: 'uint8',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [
            {
                internalType: 'address',
                name: '_receiver',
                type: 'address',
            },
            {
                internalType: 'uint32',
                name: '_srcEid',
                type: 'uint32',
            },
            {
                internalType: 'bytes32',
                name: '_headerHash',
                type: 'bytes32',
            },
            {
                internalType: 'bytes32',
                name: '_cmdHash',
                type: 'bytes32',
            },
        ],
        name: 'getVerifiablePayloadHash',
        outputs: [
            {
                internalType: 'bytes32',
                name: '',
                type: 'bytes32',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [
            {
                components: [
                    {
                        internalType: 'uint32',
                        name: 'srcEid',
                        type: 'uint32',
                    },
                    {
                        internalType: 'bytes32',
                        name: 'sender',
                        type: 'bytes32',
                    },
                    {
                        internalType: 'uint64',
                        name: 'nonce',
                        type: 'uint64',
                    },
                ],
                internalType: 'struct Origin',
                name: '_origin',
                type: 'tuple',
            },
            {
                internalType: 'address',
                name: '_receiver',
                type: 'address',
            },
        ],
        name: 'initializable',
        outputs: [
            {
                internalType: 'bool',
                name: '',
                type: 'bool',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [
            {
                internalType: 'address',
                name: '_endpoint',
                type: 'address',
            },
            {
                internalType: 'address payable',
                name: '_readLib',
                type: 'address',
            },
        ],
        name: 'initialize',
        outputs: [],
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        inputs: [],
        name: 'readLib',
        outputs: [
            {
                internalType: 'contract ReadLib1002',
                name: '',
                type: 'address',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [
            {
                internalType: 'bytes',
                name: '_packetHeader',
                type: 'bytes',
            },
            {
                internalType: 'bytes32',
                name: '_cmdHash',
                type: 'bytes32',
            },
        ],
        name: 'verifiable',
        outputs: [
            {
                internalType: 'enum VerificationState',
                name: '',
                type: 'uint8',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [
            {
                components: [
                    {
                        internalType: 'uint32',
                        name: 'srcEid',
                        type: 'uint32',
                    },
                    {
                        internalType: 'bytes32',
                        name: 'sender',
                        type: 'bytes32',
                    },
                    {
                        internalType: 'uint64',
                        name: 'nonce',
                        type: 'uint64',
                    },
                ],
                internalType: 'struct Origin',
                name: '_origin',
                type: 'tuple',
            },
            {
                internalType: 'address',
                name: '_receiver',
                type: 'address',
            },
            {
                internalType: 'address',
                name: '_receiveLib',
                type: 'address',
            },
            {
                internalType: 'bytes32',
                name: '_payloadHash',
                type: 'bytes32',
            },
        ],
        name: 'verifiable',
        outputs: [
            {
                internalType: 'bool',
                name: '',
                type: 'bool',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
] as const

const _bytecode =
    '0x608060405234801561001057600080fd5b50611bb8806100206000396000f3fe608060405234801561001057600080fd5b50600436106100be5760003560e01c80635e280f1111610076578063b85852a21161005b578063b85852a2146101e4578063cb5026b9146101f7578063e1e3a7df146101ff57600080fd5b80635e280f111461019b578063861e1ca5146101c157600080fd5b8063485cc955116100a7578063485cc955146101215780634b4b2efb146101365780635ac9e90f1461015657600080fd5b806327d12cd9146100c35780632baf0be7146100ec575b600080fd5b6100d66100d13660046113cd565b610212565b6040516100e39190611474565b60405180910390f35b6101137fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81565b6040519081526020016100e3565b61013461012f3660046114b0565b61062c565b005b6101496101443660046115d6565b610956565b6040516100e39190611603565b6032546101769073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016100e3565b6000546101769062010000900473ffffffffffffffffffffffffffffffffffffffff1681565b6101d46101cf3660046115d6565b610c63565b60405190151581526020016100e3565b6101136101f2366004611617565b610d53565b610113600081565b6101d461020d36600461165d565b61101e565b60008061021f85856111c5565b9050600061022d86866111d7565b9050600060405180606001604052808363ffffffff16815260200161025289896111fa565b81526020016102618989611213565b67ffffffffffffffff16905290506102798184610c63565b6102895760039350505050610625565b600054604080517fc9a54a99000000000000000000000000000000000000000000000000000000008152835163ffffffff166004820152602084015160248201529083015167ffffffffffffffff16604482015273ffffffffffffffffffffffffffffffffffffffff8581166064830152620100009092049091169063c9a54a9990608401602060405180830381865afa15801561032b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061034f91906116ad565b61035f5760029350505050610625565b600061038484848a8a6040516103769291906116cf565b604051809103902089610d53565b9050806104735760008054602084015160408086015190517fc9fc7bcd00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff898116600483015263ffffffff89166024830152604482019390935267ffffffffffffffff909116606482015262010000909204169063c9fc7bcd90608401602060405180830381865afa158015610430573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061045491906116df565b14610466576002945050505050610625565b6000945050505050610625565b60325460408381015190517f1fb5122500000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff878116600483015263ffffffff8716602483015267ffffffffffffffff909216604482015288929190911690631fb5122590606401602060405180830381865afa158015610508573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061052c91906116df565b1461053e576004945050505050610625565b6000548251602084015160408086015190517fc9fc7bcd00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff898116600483015263ffffffff9094166024820152604481019290925267ffffffffffffffff16606482015283926201000090049091169063c9fc7bcd90608401602060405180830381865afa1580156105e6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061060a91906116df565b0361061c576002945050505050610625565b60019450505050505b9392505050565b60006106567fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61035490565b905073ffffffffffffffffffffffffffffffffffffffff81166106af5773ffffffffffffffffffffffffffffffffffffffff7fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103556106d1565b3373ffffffffffffffffffffffffffffffffffffffff8216146106d157600080fd5b600054610100900460ff16158080156106f15750600054600160ff909116105b8061070b5750303b15801561070b575060005460ff166001145b61079c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a656400000000000000000000000000000000000060648201526084015b60405180910390fd5b600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016600117905580156107fa57600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff166101001790555b61080384611236565b603280547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff85811691909117909155600054604080517f416ecebf0000000000000000000000000000000000000000000000000000000081529051620100009092049092169163416ecebf9160048083019260209291908290030181865afa1580156108a9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108cd91906116f8565b603260146101000a81548163ffffffff021916908363ffffffff160217905550801561095057600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50505050565b600080548351602085015160408087015190517fc9fc7bcd00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff878116600483015263ffffffff9094166024820152604481019290925267ffffffffffffffff16606482015283926201000090049091169063c9fc7bcd90608401602060405180830381865afa1580156109ff573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a2391906116df565b905080158015610aff5750600054845160208601516040517f5b17bb7000000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff878116600483015263ffffffff90931660248201526044810191909152620100009092041690635b17bb7090606401602060405180830381865afa158015610abf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ae39190611715565b67ffffffffffffffff16846040015167ffffffffffffffff1611155b15610b0e576003915050610c5d565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114801590610c0a5750600054845160208601516040517fa0dd43fc00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff878116600483015263ffffffff9093166024820152604481019190915262010000909204169063a0dd43fc90606401602060405180830381865afa158015610bca573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bee9190611715565b67ffffffffffffffff16846040015167ffffffffffffffff1611155b15610c19576002915050610c5d565b8015801590610c4857507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114155b15610c57576001915050610c5d565b60009150505b92915050565b60008054604080517f861e1ca5000000000000000000000000000000000000000000000000000000008152855163ffffffff166004820152602086015160248201529085015167ffffffffffffffff16604482015273ffffffffffffffffffffffffffffffffffffffff8481166064830152620100009092049091169063861e1ca590608401602060405180830381865afa925050508015610d40575060408051601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201909252610d3d918101906116ad565b60015b610d4c57506000610c5d565b9050610c5d565b6032546040517f8eb0bf3000000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff868116600483015263ffffffff861660248301526000928392911690638eb0bf3090604401600060405180830381865afa158015610dd3573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052610e199190810190611818565b9050600081604001518260200151610e31919061191c565b905060005b8160ff168160ff16101561100e576000836020015160ff168260ff1610610e8b5760a08401516020850151610e6b9084611935565b60ff1681518110610e7e57610e7e61194e565b6020026020010151610ead565b83608001518260ff1681518110610ea457610ea461194e565b60200260200101515b6032546040517f3c782a52000000000000000000000000000000000000000000000000000000008152600481018a90526024810189905273ffffffffffffffffffffffffffffffffffffffff808416604483015292935060009290911690633c782a5290606401602060405180830381865afa158015610f31573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f5591906116df565b6032546040517f052368ca00000000000000000000000000000000000000000000000000000000815291925073ffffffffffffffffffffffffffffffffffffffff169063052368ca90610fb29088908c908c9087906004016119cf565b602060405180830381865afa158015610fcf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ff391906116ad565b156110045794506110169350505050565b5050600101610e36565b506000925050505b949350505050565b6000805485516040517f9d7f977500000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff878116600483015263ffffffff90921660248201528582166044820152620100009092041690639d7f977590606401602060405180830381865afa1580156110ab573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110cf91906116ad565b6110db57506000611016565b600054604080517fc9a54a99000000000000000000000000000000000000000000000000000000008152875163ffffffff166004820152602088015160248201529087015167ffffffffffffffff16604482015273ffffffffffffffffffffffffffffffffffffffff8681166064830152620100009092049091169063c9a54a9990608401602060405180830381865afa15801561117d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111a191906116ad565b6111ad57506000611016565b816111ba57506000611016565b506001949350505050565b60006106256111d484846112d9565b90565b60006111e7600d60098486611a8e565b6111f091611ab8565b60e01c9392505050565b600061120a602d600d8486611a8e565b61062591611b00565b6000611223600960018486611a8e565b61122c91611b3c565b60c01c9392505050565b600054610100900460ff166112cd576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201527f6e697469616c697a696e670000000000000000000000000000000000000000006064820152608401610793565b6112d6816112e9565b50565b600061120a605160318486611a8e565b600054610100900460ff16611380576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201527f6e697469616c697a696e670000000000000000000000000000000000000000006064820152608401610793565b6000805473ffffffffffffffffffffffffffffffffffffffff90921662010000027fffffffffffffffffffff0000000000000000000000000000000000000000ffff909216919091179055565b6000806000604084860312156113e257600080fd5b833567ffffffffffffffff808211156113fa57600080fd5b818601915086601f83011261140e57600080fd5b81358181111561141d57600080fd5b87602082850101111561142f57600080fd5b6020928301989097509590910135949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b602081016005831061148857611488611445565b91905290565b73ffffffffffffffffffffffffffffffffffffffff811681146112d657600080fd5b600080604083850312156114c357600080fd5b82356114ce8161148e565b915060208301356114de8161148e565b809150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60405160c0810167ffffffffffffffff8111828210171561153b5761153b6114e9565b60405290565b63ffffffff811681146112d657600080fd5b67ffffffffffffffff811681146112d657600080fd5b60006060828403121561157b57600080fd5b6040516060810181811067ffffffffffffffff8211171561159e5761159e6114e9565b60405290508082356115af81611541565b81526020838101359082015260408301356115c981611553565b6040919091015292915050565b600080608083850312156115e957600080fd5b6115f38484611569565b915060608301356114de8161148e565b602081016004831061148857611488611445565b6000806000806080858703121561162d57600080fd5b84356116388161148e565b9350602085013561164881611541565b93969395505050506040820135916060013590565b60008060008060c0858703121561167357600080fd5b61167d8686611569565b9350606085013561168d8161148e565b9250608085013561169d8161148e565b9396929550929360a00135925050565b6000602082840312156116bf57600080fd5b8151801515811461062557600080fd5b8183823760009101908152919050565b6000602082840312156116f157600080fd5b5051919050565b60006020828403121561170a57600080fd5b815161062581611541565b60006020828403121561172757600080fd5b815161062581611553565b805161173d8161148e565b919050565b805160ff8116811461173d57600080fd5b600082601f83011261176457600080fd5b8151602067ffffffffffffffff80831115611781576117816114e9565b8260051b6040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0603f830116810181811084821117156117c4576117c46114e9565b60405293845260208187018101949081019250878511156117e457600080fd5b6020870191505b8482101561180d5781516117fe8161148e565b835291830191908301906117eb565b979650505050505050565b60006020828403121561182a57600080fd5b815167ffffffffffffffff8082111561184257600080fd5b9083019060c0828603121561185657600080fd5b61185e611518565b61186783611732565b815261187560208401611742565b602082015261188660408401611742565b604082015261189760608401611742565b60608201526080830151828111156118ae57600080fd5b6118ba87828601611753565b60808301525060a0830151828111156118d257600080fd5b6118de87828601611753565b60a08301525095945050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60ff8181168382160190811115610c5d57610c5d6118ed565b60ff8281168282160390811115610c5d57610c5d6118ed565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60008151808452602080850194506020840160005b838110156119c457815173ffffffffffffffffffffffffffffffffffffffff1687529582019590820190600101611992565b509495945050505050565b6080815273ffffffffffffffffffffffffffffffffffffffff855116608082015260ff60208601511660a082015260ff60408601511660c082015260ff60608601511660e08201526000608086015160c0610100840152611a3461014084018261197d565b905060a08701517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8084830301610120850152611a70828261197d565b60208501979097525050506040810192909252606090910152919050565b60008085851115611a9e57600080fd5b83861115611aab57600080fd5b5050820193919092039150565b7fffffffff000000000000000000000000000000000000000000000000000000008135818116916004851015611af85780818660040360031b1b83161692505b505092915050565b80356020831015610c5d577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff602084900360031b1b1692915050565b7fffffffffffffffff0000000000000000000000000000000000000000000000008135818116916008851015611af85760089490940360031b84901b169092169291505056fea26469706673582212200e024e15c327c35e710377a12003c29fae422472013fa43ca2e61ad80e138cd664736f6c63430008160033'

type ReadLib1002ViewConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>

const isSuperArgs = (xs: ReadLib1002ViewConstructorParams): xs is ConstructorParameters<typeof ContractFactory> =>
    xs.length > 1

export class ReadLib1002View__factory extends ContractFactory {
    constructor(...args: ReadLib1002ViewConstructorParams) {
        if (isSuperArgs(args)) {
            super(...args)
        } else {
            super(_abi, _bytecode, args[0])
        }
    }

    override deploy(overrides?: Overrides & { from?: PromiseOrValue<string> }): Promise<ReadLib1002View> {
        return super.deploy(overrides || {}) as Promise<ReadLib1002View>
    }
    override getDeployTransaction(overrides?: Overrides & { from?: PromiseOrValue<string> }): TransactionRequest {
        return super.getDeployTransaction(overrides || {})
    }
    override attach(address: string): ReadLib1002View {
        return super.attach(address) as ReadLib1002View
    }
    override connect(signer: Signer): ReadLib1002View__factory {
        return super.connect(signer) as ReadLib1002View__factory
    }

    static readonly bytecode = _bytecode
    static readonly abi = _abi
    static createInterface(): ReadLib1002ViewInterface {
        return new utils.Interface(_abi) as ReadLib1002ViewInterface
    }
    static connect(address: string, signerOrProvider: Signer | Provider): ReadLib1002View {
        return new Contract(address, _abi, signerOrProvider) as ReadLib1002View
    }
}
