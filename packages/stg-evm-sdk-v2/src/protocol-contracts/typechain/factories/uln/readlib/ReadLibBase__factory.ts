/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from 'ethers'
import type { Provider } from '@ethersproject/providers'
import type { ReadLibBase, ReadLibBaseInterface } from '../../../uln/readlib/ReadLibBase'

const _abi = [
    {
        inputs: [],
        name: 'LZ_RL_AtLeastOneDVN',
        type: 'error',
    },
    {
        inputs: [],
        name: 'LZ_RL_InvalidExecutor',
        type: 'error',
    },
    {
        inputs: [],
        name: 'LZ_RL_InvalidOptionalDVNCount',
        type: 'error',
    },
    {
        inputs: [],
        name: 'LZ_RL_InvalidOptionalDVNThreshold',
        type: 'error',
    },
    {
        inputs: [],
        name: 'LZ_RL_InvalidRequiredDVNCount',
        type: 'error',
    },
    {
        inputs: [],
        name: 'LZ_RL_Unsorted',
        type: 'error',
    },
    {
        inputs: [
            {
                internalType: 'uint32',
                name: 'eid',
                type: 'uint32',
            },
        ],
        name: 'LZ_RL_UnsupportedEid',
        type: 'error',
    },
    {
        anonymous: false,
        inputs: [
            {
                components: [
                    {
                        internalType: 'uint32',
                        name: 'eid',
                        type: 'uint32',
                    },
                    {
                        components: [
                            {
                                internalType: 'address',
                                name: 'executor',
                                type: 'address',
                            },
                            {
                                internalType: 'uint8',
                                name: 'requiredDVNCount',
                                type: 'uint8',
                            },
                            {
                                internalType: 'uint8',
                                name: 'optionalDVNCount',
                                type: 'uint8',
                            },
                            {
                                internalType: 'uint8',
                                name: 'optionalDVNThreshold',
                                type: 'uint8',
                            },
                            {
                                internalType: 'address[]',
                                name: 'requiredDVNs',
                                type: 'address[]',
                            },
                            {
                                internalType: 'address[]',
                                name: 'optionalDVNs',
                                type: 'address[]',
                            },
                        ],
                        internalType: 'struct ReadLibConfig',
                        name: 'config',
                        type: 'tuple',
                    },
                ],
                indexed: false,
                internalType: 'struct SetDefaultReadLibConfigParam[]',
                name: 'params',
                type: 'tuple[]',
            },
        ],
        name: 'DefaultReadLibConfigsSet',
        type: 'event',
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: 'address',
                name: 'previousOwner',
                type: 'address',
            },
            {
                indexed: true,
                internalType: 'address',
                name: 'newOwner',
                type: 'address',
            },
        ],
        name: 'OwnershipTransferred',
        type: 'event',
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: 'address',
                name: 'oapp',
                type: 'address',
            },
            {
                indexed: false,
                internalType: 'uint32',
                name: 'eid',
                type: 'uint32',
            },
            {
                components: [
                    {
                        internalType: 'address',
                        name: 'executor',
                        type: 'address',
                    },
                    {
                        internalType: 'uint8',
                        name: 'requiredDVNCount',
                        type: 'uint8',
                    },
                    {
                        internalType: 'uint8',
                        name: 'optionalDVNCount',
                        type: 'uint8',
                    },
                    {
                        internalType: 'uint8',
                        name: 'optionalDVNThreshold',
                        type: 'uint8',
                    },
                    {
                        internalType: 'address[]',
                        name: 'requiredDVNs',
                        type: 'address[]',
                    },
                    {
                        internalType: 'address[]',
                        name: 'optionalDVNs',
                        type: 'address[]',
                    },
                ],
                indexed: false,
                internalType: 'struct ReadLibConfig',
                name: 'config',
                type: 'tuple',
            },
        ],
        name: 'ReadLibConfigSet',
        type: 'event',
    },
    {
        inputs: [
            {
                internalType: 'address',
                name: '_oapp',
                type: 'address',
            },
            {
                internalType: 'uint32',
                name: '_remoteEid',
                type: 'uint32',
            },
        ],
        name: 'getAppReadLibConfig',
        outputs: [
            {
                components: [
                    {
                        internalType: 'address',
                        name: 'executor',
                        type: 'address',
                    },
                    {
                        internalType: 'uint8',
                        name: 'requiredDVNCount',
                        type: 'uint8',
                    },
                    {
                        internalType: 'uint8',
                        name: 'optionalDVNCount',
                        type: 'uint8',
                    },
                    {
                        internalType: 'uint8',
                        name: 'optionalDVNThreshold',
                        type: 'uint8',
                    },
                    {
                        internalType: 'address[]',
                        name: 'requiredDVNs',
                        type: 'address[]',
                    },
                    {
                        internalType: 'address[]',
                        name: 'optionalDVNs',
                        type: 'address[]',
                    },
                ],
                internalType: 'struct ReadLibConfig',
                name: '',
                type: 'tuple',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [
            {
                internalType: 'address',
                name: '_oapp',
                type: 'address',
            },
            {
                internalType: 'uint32',
                name: '_remoteEid',
                type: 'uint32',
            },
        ],
        name: 'getReadLibConfig',
        outputs: [
            {
                components: [
                    {
                        internalType: 'address',
                        name: 'executor',
                        type: 'address',
                    },
                    {
                        internalType: 'uint8',
                        name: 'requiredDVNCount',
                        type: 'uint8',
                    },
                    {
                        internalType: 'uint8',
                        name: 'optionalDVNCount',
                        type: 'uint8',
                    },
                    {
                        internalType: 'uint8',
                        name: 'optionalDVNThreshold',
                        type: 'uint8',
                    },
                    {
                        internalType: 'address[]',
                        name: 'requiredDVNs',
                        type: 'address[]',
                    },
                    {
                        internalType: 'address[]',
                        name: 'optionalDVNs',
                        type: 'address[]',
                    },
                ],
                internalType: 'struct ReadLibConfig',
                name: 'rtnConfig',
                type: 'tuple',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [],
        name: 'owner',
        outputs: [
            {
                internalType: 'address',
                name: '',
                type: 'address',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [],
        name: 'renounceOwnership',
        outputs: [],
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        inputs: [
            {
                components: [
                    {
                        internalType: 'uint32',
                        name: 'eid',
                        type: 'uint32',
                    },
                    {
                        components: [
                            {
                                internalType: 'address',
                                name: 'executor',
                                type: 'address',
                            },
                            {
                                internalType: 'uint8',
                                name: 'requiredDVNCount',
                                type: 'uint8',
                            },
                            {
                                internalType: 'uint8',
                                name: 'optionalDVNCount',
                                type: 'uint8',
                            },
                            {
                                internalType: 'uint8',
                                name: 'optionalDVNThreshold',
                                type: 'uint8',
                            },
                            {
                                internalType: 'address[]',
                                name: 'requiredDVNs',
                                type: 'address[]',
                            },
                            {
                                internalType: 'address[]',
                                name: 'optionalDVNs',
                                type: 'address[]',
                            },
                        ],
                        internalType: 'struct ReadLibConfig',
                        name: 'config',
                        type: 'tuple',
                    },
                ],
                internalType: 'struct SetDefaultReadLibConfigParam[]',
                name: '_params',
                type: 'tuple[]',
            },
        ],
        name: 'setDefaultReadLibConfigs',
        outputs: [],
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        inputs: [
            {
                internalType: 'address',
                name: 'newOwner',
                type: 'address',
            },
        ],
        name: 'transferOwnership',
        outputs: [],
        stateMutability: 'nonpayable',
        type: 'function',
    },
] as const

export class ReadLibBase__factory {
    static readonly abi = _abi
    static createInterface(): ReadLibBaseInterface {
        return new utils.Interface(_abi) as ReadLibBaseInterface
    }
    static connect(address: string, signerOrProvider: Signer | Provider): ReadLibBase {
        return new Contract(address, _abi, signerOrProvider) as ReadLibBase
    }
}
