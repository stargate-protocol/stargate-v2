/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers'
import type { Provider, TransactionRequest } from '@ethersproject/providers'
import type { PromiseOrValue } from '../../common'
import type { PoolToken, PoolTokenInterface } from '../../mocks/PoolToken'

const _abi = [
    {
        inputs: [
            {
                internalType: 'string',
                name: '_name',
                type: 'string',
            },
            {
                internalType: 'string',
                name: '_symbol',
                type: 'string',
            },
        ],
        stateMutability: 'nonpayable',
        type: 'constructor',
    },
    {
        inputs: [],
        name: 'PoolToken_MintCapExceeded',
        type: 'error',
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: 'address',
                name: 'owner',
                type: 'address',
            },
            {
                indexed: true,
                internalType: 'address',
                name: 'spender',
                type: 'address',
            },
            {
                indexed: false,
                internalType: 'uint256',
                name: 'value',
                type: 'uint256',
            },
        ],
        name: 'Approval',
        type: 'event',
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: 'address',
                name: 'previousOwner',
                type: 'address',
            },
            {
                indexed: true,
                internalType: 'address',
                name: 'newOwner',
                type: 'address',
            },
        ],
        name: 'OwnershipTransferred',
        type: 'event',
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: 'address',
                name: 'from',
                type: 'address',
            },
            {
                indexed: true,
                internalType: 'address',
                name: 'to',
                type: 'address',
            },
            {
                indexed: false,
                internalType: 'uint256',
                name: 'value',
                type: 'uint256',
            },
        ],
        name: 'Transfer',
        type: 'event',
    },
    {
        inputs: [],
        name: 'MINT_CAP_AMOUNT',
        outputs: [
            {
                internalType: 'uint256',
                name: '',
                type: 'uint256',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [
            {
                internalType: 'address',
                name: 'owner',
                type: 'address',
            },
            {
                internalType: 'address',
                name: 'spender',
                type: 'address',
            },
        ],
        name: 'allowance',
        outputs: [
            {
                internalType: 'uint256',
                name: '',
                type: 'uint256',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [
            {
                internalType: 'address',
                name: 'spender',
                type: 'address',
            },
            {
                internalType: 'uint256',
                name: 'amount',
                type: 'uint256',
            },
        ],
        name: 'approve',
        outputs: [
            {
                internalType: 'bool',
                name: '',
                type: 'bool',
            },
        ],
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        inputs: [
            {
                internalType: 'address',
                name: 'account',
                type: 'address',
            },
        ],
        name: 'balanceOf',
        outputs: [
            {
                internalType: 'uint256',
                name: '',
                type: 'uint256',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [
            {
                internalType: 'uint256',
                name: '_amount',
                type: 'uint256',
            },
        ],
        name: 'burn',
        outputs: [],
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        inputs: [
            {
                internalType: 'address',
                name: '_account',
                type: 'address',
            },
            {
                internalType: 'uint256',
                name: '_amount',
                type: 'uint256',
            },
        ],
        name: 'burnFrom',
        outputs: [],
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        inputs: [],
        name: 'decimals',
        outputs: [
            {
                internalType: 'uint8',
                name: '',
                type: 'uint8',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [
            {
                internalType: 'address',
                name: 'spender',
                type: 'address',
            },
            {
                internalType: 'uint256',
                name: 'subtractedValue',
                type: 'uint256',
            },
        ],
        name: 'decreaseAllowance',
        outputs: [
            {
                internalType: 'bool',
                name: '',
                type: 'bool',
            },
        ],
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        inputs: [
            {
                internalType: 'address',
                name: 'spender',
                type: 'address',
            },
            {
                internalType: 'uint256',
                name: 'addedValue',
                type: 'uint256',
            },
        ],
        name: 'increaseAllowance',
        outputs: [
            {
                internalType: 'bool',
                name: '',
                type: 'bool',
            },
        ],
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        inputs: [
            {
                internalType: 'address',
                name: '_to',
                type: 'address',
            },
            {
                internalType: 'uint256',
                name: '_qty',
                type: 'uint256',
            },
        ],
        name: 'mint',
        outputs: [],
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        inputs: [],
        name: 'name',
        outputs: [
            {
                internalType: 'string',
                name: '',
                type: 'string',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [],
        name: 'owner',
        outputs: [
            {
                internalType: 'address',
                name: '',
                type: 'address',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [],
        name: 'renounceOwnership',
        outputs: [],
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        inputs: [],
        name: 'symbol',
        outputs: [
            {
                internalType: 'string',
                name: '',
                type: 'string',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [],
        name: 'totalSupply',
        outputs: [
            {
                internalType: 'uint256',
                name: '',
                type: 'uint256',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [
            {
                internalType: 'address',
                name: 'to',
                type: 'address',
            },
            {
                internalType: 'uint256',
                name: 'amount',
                type: 'uint256',
            },
        ],
        name: 'transfer',
        outputs: [
            {
                internalType: 'bool',
                name: '',
                type: 'bool',
            },
        ],
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        inputs: [
            {
                internalType: 'address',
                name: 'from',
                type: 'address',
            },
            {
                internalType: 'address',
                name: 'to',
                type: 'address',
            },
            {
                internalType: 'uint256',
                name: 'amount',
                type: 'uint256',
            },
        ],
        name: 'transferFrom',
        outputs: [
            {
                internalType: 'bool',
                name: '',
                type: 'bool',
            },
        ],
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        inputs: [
            {
                internalType: 'address',
                name: 'newOwner',
                type: 'address',
            },
        ],
        name: 'transferOwnership',
        outputs: [],
        stateMutability: 'nonpayable',
        type: 'function',
    },
] as const

const _bytecode =
    '0x60a06040523480156200001157600080fd5b506040516200161d3803806200161d8339810160408190526200003491620002aa565b81816003620000448382620003a4565b506004620000538282620003a4565b505050620000706200006a620000c160201b60201c565b620000c5565b6200007e6012600a62000585565b6200008c906103e86200059d565b608052620000b933620000a26012600a62000585565b620000b39064174876e8006200059d565b62000117565b5050620005cd565b3390565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b038216620001725760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640160405180910390fd5b8060026000828254620001869190620005b7565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b505050565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200020a57600080fd5b81516001600160401b0380821115620002275762000227620001e2565b604051601f8301601f19908116603f01168101908282118183101715620002525762000252620001e2565b81604052838152602092508660208588010111156200027057600080fd5b600091505b8382101562000294578582018301518183018401529082019062000275565b6000602085830101528094505050505092915050565b60008060408385031215620002be57600080fd5b82516001600160401b0380821115620002d657600080fd5b620002e486838701620001f8565b93506020850151915080821115620002fb57600080fd5b506200030a85828601620001f8565b9150509250929050565b600181811c908216806200032957607f821691505b6020821081036200034a57634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620001dd576000816000526020600020601f850160051c810160208610156200037b5750805b601f850160051c820191505b818110156200039c5782815560010162000387565b505050505050565b81516001600160401b03811115620003c057620003c0620001e2565b620003d881620003d1845462000314565b8462000350565b602080601f831160018114620004105760008415620003f75750858301515b600019600386901b1c1916600185901b1785556200039c565b600085815260208120601f198616915b82811015620004415788860151825594840194600190910190840162000420565b5085821015620004605787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b600052601160045260246000fd5b600181815b80851115620004c7578160001904821115620004ab57620004ab62000470565b80851615620004b957918102915b93841c93908002906200048b565b509250929050565b600082620004e0575060016200057f565b81620004ef575060006200057f565b8160018114620005085760028114620005135762000533565b60019150506200057f565b60ff84111562000527576200052762000470565b50506001821b6200057f565b5060208310610133831016604e8410600b841016171562000558575081810a6200057f565b62000564838362000486565b80600019048211156200057b576200057b62000470565b0290505b92915050565b60006200059660ff841683620004cf565b9392505050565b80820281158282048414176200057f576200057f62000470565b808201808211156200057f576200057f62000470565b60805161102d620005f0600039600081816102690152610430015261102d6000f3fe608060405234801561001057600080fd5b50600436106101365760003560e01c8063715018a6116100b257806395d89b4111610081578063a9059cbb11610066578063a9059cbb146102a6578063dd62ed3e146102b9578063f2fde38b146102ff57600080fd5b806395d89b411461028b578063a457c2d71461029357600080fd5b8063715018a61461022157806379cc6790146102295780638da5cb5b1461023c578063927de3a51461026457600080fd5b8063313ce5671161010957806340c10f19116100ee57806340c10f19146101c357806342966c68146101d857806370a08231146101eb57600080fd5b8063313ce567146101a157806339509351146101b057600080fd5b806306fdde031461013b578063095ea7b31461015957806318160ddd1461017c57806323b872dd1461018e575b600080fd5b610143610312565b6040516101509190610e00565b60405180910390f35b61016c610167366004610e96565b6103a4565b6040519015158152602001610150565b6002545b604051908152602001610150565b61016c61019c366004610ec0565b6103be565b60405160128152602001610150565b61016c6101be366004610e96565b6103e2565b6101d66101d1366004610e96565b61042e565b005b6101d66101e6366004610efc565b6104ba565b6101806101f9366004610f15565b73ffffffffffffffffffffffffffffffffffffffff1660009081526020819052604090205490565b6101d66104c7565b6101d6610237366004610e96565b6104db565b60055460405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610150565b6101807f000000000000000000000000000000000000000000000000000000000000000081565b6101436104f0565b61016c6102a1366004610e96565b6104ff565b61016c6102b4366004610e96565b6105bb565b6101806102c7366004610f37565b73ffffffffffffffffffffffffffffffffffffffff918216600090815260016020908152604080832093909416825291909152205490565b6101d661030d366004610f15565b6105c9565b60606003805461032190610f6a565b80601f016020809104026020016040519081016040528092919081815260200182805461034d90610f6a565b801561039a5780601f1061036f5761010080835404028352916020019161039a565b820191906000526020600020905b81548152906001019060200180831161037d57829003601f168201915b5050505050905090565b6000336103b2818585610663565b60019150505b92915050565b6000336103cc8582856107e3565b6103d78585856108a0565b506001949350505050565b33600081815260016020908152604080832073ffffffffffffffffffffffffffffffffffffffff871684529091528120549091906103b29082908690610429908790610fbd565b610663565b7f000000000000000000000000000000000000000000000000000000000000000081118015610475575060055473ffffffffffffffffffffffffffffffffffffffff163314155b156104ac576040517ffbefc2cb00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6104b68282610ac1565b5050565b6104c43382610b9a565b50565b6104cf610d22565b6104d96000610d89565b565b6104e68233836107e3565b6104b68282610b9a565b60606004805461032190610f6a565b33600081815260016020908152604080832073ffffffffffffffffffffffffffffffffffffffff87168452909152812054909190838110156105ae5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760448201527f207a65726f00000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b6103d78286868403610663565b6000336103b28185856108a0565b6105d1610d22565b73ffffffffffffffffffffffffffffffffffffffff811661065a5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084016105a5565b6104c481610d89565b73ffffffffffffffffffffffffffffffffffffffff83166106eb5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460448201527f726573730000000000000000000000000000000000000000000000000000000060648201526084016105a5565b73ffffffffffffffffffffffffffffffffffffffff82166107745760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f20616464726560448201527f737300000000000000000000000000000000000000000000000000000000000060648201526084016105a5565b73ffffffffffffffffffffffffffffffffffffffff83811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b73ffffffffffffffffffffffffffffffffffffffff8381166000908152600160209081526040808320938616835292905220547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff811461089a578181101561088d5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016105a5565b61089a8484848403610663565b50505050565b73ffffffffffffffffffffffffffffffffffffffff83166109295760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f20616460448201527f647265737300000000000000000000000000000000000000000000000000000060648201526084016105a5565b73ffffffffffffffffffffffffffffffffffffffff82166109b25760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201527f657373000000000000000000000000000000000000000000000000000000000060648201526084016105a5565b73ffffffffffffffffffffffffffffffffffffffff831660009081526020819052604090205481811015610a4e5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e742065786365656473206260448201527f616c616e6365000000000000000000000000000000000000000000000000000060648201526084016105a5565b73ffffffffffffffffffffffffffffffffffffffff848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a361089a565b73ffffffffffffffffffffffffffffffffffffffff8216610b245760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016105a5565b8060026000828254610b369190610fbd565b909155505073ffffffffffffffffffffffffffffffffffffffff8216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b73ffffffffffffffffffffffffffffffffffffffff8216610c235760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f2061646472657360448201527f730000000000000000000000000000000000000000000000000000000000000060648201526084016105a5565b73ffffffffffffffffffffffffffffffffffffffff821660009081526020819052604090205481811015610cbf5760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e60448201527f636500000000000000000000000000000000000000000000000000000000000060648201526084016105a5565b73ffffffffffffffffffffffffffffffffffffffff83166000818152602081815260408083208686039055600280548790039055518581529192917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91016107d6565b60055473ffffffffffffffffffffffffffffffffffffffff1633146104d95760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016105a5565b6005805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60006020808352835180602085015260005b81811015610e2e57858101830151858201604001528201610e12565b5060006040828601015260407fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8301168501019250505092915050565b803573ffffffffffffffffffffffffffffffffffffffff81168114610e9157600080fd5b919050565b60008060408385031215610ea957600080fd5b610eb283610e6d565b946020939093013593505050565b600080600060608486031215610ed557600080fd5b610ede84610e6d565b9250610eec60208501610e6d565b9150604084013590509250925092565b600060208284031215610f0e57600080fd5b5035919050565b600060208284031215610f2757600080fd5b610f3082610e6d565b9392505050565b60008060408385031215610f4a57600080fd5b610f5383610e6d565b9150610f6160208401610e6d565b90509250929050565b600181811c90821680610f7e57607f821691505b602082108103610fb7577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b808201808211156103b8577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fdfea264697066735822122054c286b2c094b490ec55f693112c639f08981133893dc1d32f82e3851bf34c5364736f6c63430008160033'

type PoolTokenConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>

const isSuperArgs = (xs: PoolTokenConstructorParams): xs is ConstructorParameters<typeof ContractFactory> =>
    xs.length > 1

export class PoolToken__factory extends ContractFactory {
    constructor(...args: PoolTokenConstructorParams) {
        if (isSuperArgs(args)) {
            super(...args)
        } else {
            super(_abi, _bytecode, args[0])
        }
    }

    override deploy(
        _name: PromiseOrValue<string>,
        _symbol: PromiseOrValue<string>,
        overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PoolToken> {
        return super.deploy(_name, _symbol, overrides || {}) as Promise<PoolToken>
    }
    override getDeployTransaction(
        _name: PromiseOrValue<string>,
        _symbol: PromiseOrValue<string>,
        overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): TransactionRequest {
        return super.getDeployTransaction(_name, _symbol, overrides || {})
    }
    override attach(address: string): PoolToken {
        return super.attach(address) as PoolToken
    }
    override connect(signer: Signer): PoolToken__factory {
        return super.connect(signer) as PoolToken__factory
    }

    static readonly bytecode = _bytecode
    static readonly abi = _abi
    static createInterface(): PoolTokenInterface {
        return new utils.Interface(_abi) as PoolTokenInterface
    }
    static connect(address: string, signerOrProvider: Signer | Provider): PoolToken {
        return new Contract(address, _abi, signerOrProvider) as PoolToken
    }
}
