/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers'
import type { Provider, TransactionRequest } from '@ethersproject/providers'
import type { PromiseOrValue } from '../../../../../../common'
import type {
    V2_2UpgraderHelper,
    V2_2UpgraderHelperInterface,
} from '../../../../../../usdc/impl/v2/upgrader/helpers/V2_2UpgraderHelper'

const _abi = [
    {
        inputs: [
            {
                internalType: 'address',
                name: 'fiatTokenProxy',
                type: 'address',
            },
        ],
        stateMutability: 'nonpayable',
        type: 'constructor',
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: 'address',
                name: 'previousOwner',
                type: 'address',
            },
            {
                indexed: false,
                internalType: 'address',
                name: 'newOwner',
                type: 'address',
            },
        ],
        name: 'OwnershipTransferred',
        type: 'event',
    },
    {
        inputs: [],
        name: 'DOMAIN_SEPARATOR',
        outputs: [
            {
                internalType: 'bytes32',
                name: '',
                type: 'bytes32',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [
            {
                internalType: 'address',
                name: 'account',
                type: 'address',
            },
        ],
        name: 'balanceOf',
        outputs: [
            {
                internalType: 'uint256',
                name: '',
                type: 'uint256',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [],
        name: 'blacklister',
        outputs: [
            {
                internalType: 'address',
                name: '',
                type: 'address',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [],
        name: 'currency',
        outputs: [
            {
                internalType: 'string',
                name: '',
                type: 'string',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [],
        name: 'decimals',
        outputs: [
            {
                internalType: 'uint8',
                name: '',
                type: 'uint8',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [],
        name: 'fiatTokenOwner',
        outputs: [
            {
                internalType: 'address',
                name: '',
                type: 'address',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [],
        name: 'masterMinter',
        outputs: [
            {
                internalType: 'address',
                name: '',
                type: 'address',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [],
        name: 'name',
        outputs: [
            {
                internalType: 'string',
                name: '',
                type: 'string',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [],
        name: 'owner',
        outputs: [
            {
                internalType: 'address',
                name: '',
                type: 'address',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [],
        name: 'paused',
        outputs: [
            {
                internalType: 'bool',
                name: '',
                type: 'bool',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [],
        name: 'pauser',
        outputs: [
            {
                internalType: 'address',
                name: '',
                type: 'address',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [],
        name: 'proxy',
        outputs: [
            {
                internalType: 'address',
                name: '',
                type: 'address',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [],
        name: 'rescuer',
        outputs: [
            {
                internalType: 'address',
                name: '',
                type: 'address',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [],
        name: 'symbol',
        outputs: [
            {
                internalType: 'string',
                name: '',
                type: 'string',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [],
        name: 'tearDown',
        outputs: [],
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        inputs: [],
        name: 'totalSupply',
        outputs: [
            {
                internalType: 'uint256',
                name: '',
                type: 'uint256',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [
            {
                internalType: 'address',
                name: 'from',
                type: 'address',
            },
            {
                internalType: 'address',
                name: 'to',
                type: 'address',
            },
            {
                internalType: 'uint256',
                name: 'value',
                type: 'uint256',
            },
        ],
        name: 'transferFrom',
        outputs: [
            {
                internalType: 'bool',
                name: '',
                type: 'bool',
            },
        ],
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        inputs: [
            {
                internalType: 'address',
                name: 'newOwner',
                type: 'address',
            },
        ],
        name: 'transferOwnership',
        outputs: [],
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        inputs: [],
        name: 'version',
        outputs: [
            {
                internalType: 'string',
                name: '',
                type: 'string',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
] as const

const _bytecode =
    '0x608060405234801561001057600080fd5b50604051610e78380380610e7883398101604081905261002f91610062565b60008054336001600160a01b031991821617909155600180546001600160a01b0390931692909116919091179055610092565b60006020828403121561007457600080fd5b81516001600160a01b038116811461008b57600080fd5b9392505050565b610dd7806100a16000396000f3fe608060405234801561001057600080fd5b50600436106101515760003560e01c80636d3c5bbe116100cd578063bd10243011610081578063ec1e6a4f11610066578063ec1e6a4f14610253578063ec5568891461025d578063f2fde38b1461026e57600080fd5b8063bd10243014610243578063e5a6b10f1461024b57600080fd5b80638da5cb5b116100b25780638da5cb5b1461022257806395d89b41146102335780639fd0506d1461023b57600080fd5b80636d3c5bbe1461020757806370a082311461020f57600080fd5b806335d99f351161012457806338a631831161010957806338a63183146101ef57806354fd4d50146101f75780635c975abb146101ff57600080fd5b806335d99f35146101c75780633644e515146101e757600080fd5b806306fdde031461015657806318160ddd1461017457806323b872dd1461018a578063313ce567146101ad575b600080fd5b61015e610281565b60405161016b9190610b9d565b60405180910390f35b61017c610311565b60405190815260200161016b565b61019d610198366004610be5565b610398565b604051901515815260200161016b565b6101b5610439565b60405160ff909116815260200161016b565b6101cf6104c0565b6040516001600160a01b03909116815260200161016b565b61017c610547565b6101cf6105aa565b61015e61060d565b61019d610670565b6101cf6106f7565b61017c61021d366004610c26565b61075a565b6000546001600160a01b03166101cf565b61015e6107e8565b6101cf61084b565b6101cf6108ae565b61015e610911565b61025b610974565b005b6001546001600160a01b03166101cf565b61025b61027c366004610c26565b6109ef565b600154604080517f06fdde0300000000000000000000000000000000000000000000000000000000815290516060926001600160a01b0316916306fdde039160048083019260009291908290030181865afa1580156102e4573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261030c9190810190610c79565b905090565b600154604080517f18160ddd00000000000000000000000000000000000000000000000000000000815290516000926001600160a01b0316916318160ddd9160048083019260209291908290030181865afa158015610374573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061030c9190610d26565b6001546040517f23b872dd0000000000000000000000000000000000000000000000000000000081526001600160a01b03858116600483015284811660248301526044820184905260009216906323b872dd906064016020604051808303816000875af115801561040d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104319190610d3f565b949350505050565b600154604080517f313ce56700000000000000000000000000000000000000000000000000000000815290516000926001600160a01b03169163313ce5679160048083019260209291908290030181865afa15801561049c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061030c9190610d61565b600154604080517f35d99f3500000000000000000000000000000000000000000000000000000000815290516000926001600160a01b0316916335d99f359160048083019260209291908290030181865afa158015610523573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061030c9190610d84565b600154604080517f3644e51500000000000000000000000000000000000000000000000000000000815290516000926001600160a01b031691633644e5159160048083019260209291908290030181865afa158015610374573d6000803e3d6000fd5b600154604080517f38a6318300000000000000000000000000000000000000000000000000000000815290516000926001600160a01b0316916338a631839160048083019260209291908290030181865afa158015610523573d6000803e3d6000fd5b600154604080517f54fd4d5000000000000000000000000000000000000000000000000000000000815290516060926001600160a01b0316916354fd4d509160048083019260009291908290030181865afa1580156102e4573d6000803e3d6000fd5b600154604080517f5c975abb00000000000000000000000000000000000000000000000000000000815290516000926001600160a01b031691635c975abb9160048083019260209291908290030181865afa1580156106d3573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061030c9190610d3f565b600154604080517f8da5cb5b00000000000000000000000000000000000000000000000000000000815290516000926001600160a01b031691638da5cb5b9160048083019260209291908290030181865afa158015610523573d6000803e3d6000fd5b6001546040517f70a082310000000000000000000000000000000000000000000000000000000081526001600160a01b03838116600483015260009216906370a0823190602401602060405180830381865afa1580156107be573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107e29190610d26565b92915050565b600154604080517f95d89b4100000000000000000000000000000000000000000000000000000000815290516060926001600160a01b0316916395d89b419160048083019260009291908290030181865afa1580156102e4573d6000803e3d6000fd5b600154604080517f9fd0506d00000000000000000000000000000000000000000000000000000000815290516000926001600160a01b031691639fd0506d9160048083019260209291908290030181865afa158015610523573d6000803e3d6000fd5b600154604080517fbd10243000000000000000000000000000000000000000000000000000000000815290516000926001600160a01b03169163bd1024309160048083019260209291908290030181865afa158015610523573d6000803e3d6000fd5b600154604080517fe5a6b10f00000000000000000000000000000000000000000000000000000000815290516060926001600160a01b03169163e5a6b10f9160048083019260009291908290030181865afa1580156102e4573d6000803e3d6000fd5b6000546001600160a01b031633146109ed576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b565b6000546001600160a01b03163314610a63576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016109e4565b6001600160a01b038116610af9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084016109e4565b600054604080516001600160a01b03928316815291831660208301527f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0910160405180910390a1600080547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b03831617905550565b50565b60005b83811015610b94578181015183820152602001610b7c565b50506000910152565b6020815260008251806020840152610bbc816040850160208701610b79565b601f01601f19169190910160400192915050565b6001600160a01b0381168114610b7657600080fd5b600080600060608486031215610bfa57600080fd5b8335610c0581610bd0565b92506020840135610c1581610bd0565b929592945050506040919091013590565b600060208284031215610c3857600080fd5b8135610c4381610bd0565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600060208284031215610c8b57600080fd5b815167ffffffffffffffff80821115610ca357600080fd5b818401915084601f830112610cb757600080fd5b815181811115610cc957610cc9610c4a565b604051601f8201601f19908116603f01168101908382118183101715610cf157610cf1610c4a565b81604052828152876020848701011115610d0a57600080fd5b610d1b836020830160208801610b79565b979650505050505050565b600060208284031215610d3857600080fd5b5051919050565b600060208284031215610d5157600080fd5b81518015158114610c4357600080fd5b600060208284031215610d7357600080fd5b815160ff81168114610c4357600080fd5b600060208284031215610d9657600080fd5b8151610c4381610bd056fea2646970667358221220211af62f1877ce60d785b0928a00b882065acb2ecd3b457f9dd5ca75e2f7c39264736f6c63430008160033'

type V2_2UpgraderHelperConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>

const isSuperArgs = (xs: V2_2UpgraderHelperConstructorParams): xs is ConstructorParameters<typeof ContractFactory> =>
    xs.length > 1

export class V2_2UpgraderHelper__factory extends ContractFactory {
    constructor(...args: V2_2UpgraderHelperConstructorParams) {
        if (isSuperArgs(args)) {
            super(...args)
        } else {
            super(_abi, _bytecode, args[0])
        }
    }

    override deploy(
        fiatTokenProxy: PromiseOrValue<string>,
        overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<V2_2UpgraderHelper> {
        return super.deploy(fiatTokenProxy, overrides || {}) as Promise<V2_2UpgraderHelper>
    }
    override getDeployTransaction(
        fiatTokenProxy: PromiseOrValue<string>,
        overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): TransactionRequest {
        return super.getDeployTransaction(fiatTokenProxy, overrides || {})
    }
    override attach(address: string): V2_2UpgraderHelper {
        return super.attach(address) as V2_2UpgraderHelper
    }
    override connect(signer: Signer): V2_2UpgraderHelper__factory {
        return super.connect(signer) as V2_2UpgraderHelper__factory
    }

    static readonly bytecode = _bytecode
    static readonly abi = _abi
    static createInterface(): V2_2UpgraderHelperInterface {
        return new utils.Interface(_abi) as V2_2UpgraderHelperInterface
    }
    static connect(address: string, signerOrProvider: Signer | Provider): V2_2UpgraderHelper {
        return new Contract(address, _abi, signerOrProvider) as V2_2UpgraderHelper
    }
}
