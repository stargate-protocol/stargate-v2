/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers'
import type { Provider, TransactionRequest } from '@ethersproject/providers'
import type { PromiseOrValue } from '../../../../common'
import type { FiatTokenUtil, FiatTokenUtilInterface } from '../../../../usdc/impl/v2/FiatTokenUtil'

const _abi = [
    {
        inputs: [
            {
                internalType: 'address',
                name: 'fiatToken',
                type: 'address',
            },
        ],
        stateMutability: 'nonpayable',
        type: 'constructor',
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: 'address',
                name: 'authorizer',
                type: 'address',
            },
            {
                indexed: true,
                internalType: 'bytes32',
                name: 'nonce',
                type: 'bytes32',
            },
        ],
        name: 'TransferFailed',
        type: 'event',
    },
    {
        inputs: [
            {
                internalType: 'bytes',
                name: 'params',
                type: 'bytes',
            },
            {
                internalType: 'bytes',
                name: 'signatures',
                type: 'bytes',
            },
            {
                internalType: 'bool',
                name: 'atomic',
                type: 'bool',
            },
        ],
        name: 'transferWithMultipleAuthorizations',
        outputs: [
            {
                internalType: 'bool',
                name: '',
                type: 'bool',
            },
        ],
        stateMutability: 'nonpayable',
        type: 'function',
    },
] as const

const _bytecode =
    '0x608060405234801561001057600080fd5b50604051610a51380380610a5183398101604081905261002f91610054565b600080546001600160a01b0319166001600160a01b0392909216919091179055610084565b60006020828403121561006657600080fd5b81516001600160a01b038116811461007d57600080fd5b9392505050565b6109be806100936000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063e5c880f014610030575b600080fd5b61004361003e366004610633565b610057565b604051901515815260200160405180910390f35b60008061006560a8876106eb565b9050600081116100fc576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602360248201527f46696174546f6b656e5574696c3a206e6f207472616e736665722070726f766960448201527f646564000000000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b8561010860a883610726565b14610195576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f46696174546f6b656e5574696c3a206c656e677468206f6620706172616d732060448201527f697320696e76616c69640000000000000000000000000000000000000000000060648201526084016100f3565b806101a16041866106eb565b1480156101b75750836101b5604183610726565b145b610243576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602e60248201527f46696174546f6b656e5574696c3a206c656e677468206f66207369676e61747560448201527f72657320697320696e76616c696400000000000000000000000000000000000060648201526084016100f3565b6000805b8281101561053957600061025c60a883610726565b9050600061026b604184610726565b905060006102ee8c848d610280826028610743565b9261028d93929190610756565b60405160200161029e929190610780565b60408051601f19818403018152828252601481015160289091015173ffffffffffffffffffffffffffffffffffffffff918216602085015216828201528051808303820181526060909201905290565b905060008c8c6102ff866028610743565b9061030b60a888610743565b9261031893929190610756565b604051602001610329929190610780565b604051602081830303815290604052905060008b8b8581811061034e5761034e610790565b919091013560f81c9150600090508c8c610369876001610743565b90610375604189610743565b9261038293929190610756565b604051602001610393929190610780565b60408051808303601f190181528282526000805460ff8716602086015291945092839273ffffffffffffffffffffffffffffffffffffffff909216917fe3ee160e0000000000000000000000000000000000000000000000000000000091899189910160408051601f19818403018152908290526104189493929189906020016107e3565b60408051601f19818403018152908290526104329161086f565b6000604051808303816000865af19150503d806000811461046f576040519150601f19603f3d011682016040523d82523d6000602084013e610474565b606091505b50915091508c8015610484575081155b156104925761049281610545565b81156104aa57896104a28161088b565b9a5050610525565b6000868060200190518101906104c091906108ec565b5090506000868060200190518101906104d9919061091f565b9350505050808273ffffffffffffffffffffffffffffffffffffffff167f13cab104924a28ca77b3228596ebc8e597aa628ce47d39429f3cb62b9a9ac60f60405160405180910390a350505b505060019096019550610247945050505050565b50149695505050505050565b6064815110156105b1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601a60248201527f46696174546f6b656e5574696c3a2063616c6c206661696c656400000000000060448201526064016100f3565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260448201906100f3908290600401610955565b60008083601f8401126105fc57600080fd5b50813567ffffffffffffffff81111561061457600080fd5b60208301915083602082850101111561062c57600080fd5b9250929050565b60008060008060006060868803121561064b57600080fd5b853567ffffffffffffffff8082111561066357600080fd5b61066f89838a016105ea565b9097509550602088013591508082111561068857600080fd5b50610695888289016105ea565b909450925050604086013580151581146106ae57600080fd5b809150509295509295909350565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600082610721577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500490565b808202811582820484141761073d5761073d6106bc565b92915050565b8082018082111561073d5761073d6106bc565b6000808585111561076657600080fd5b8386111561077357600080fd5b5050820193919092039150565b8183823760009101908152919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60005b838110156107da5781810151838201526020016107c2565b50506000910152565b7fffffffff00000000000000000000000000000000000000000000000000000000861681526000855161081d816004850160208a016107bf565b855190830190610834816004840160208a016107bf565b855191019061084a8160048401602089016107bf565b84519101906108608160048401602088016107bf565b01600401979650505050505050565b600082516108818184602087016107bf565b9190910192915050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036108bc576108bc6106bc565b5060010190565b805173ffffffffffffffffffffffffffffffffffffffff811681146108e757600080fd5b919050565b600080604083850312156108ff57600080fd5b610908836108c3565b9150610916602084016108c3565b90509250929050565b6000806000806080858703121561093557600080fd5b505082516020840151604085015160609095015191969095509092509050565b60208152600082518060208401526109748160408501602087016107bf565b601f01601f1916919091016040019291505056fea26469706673582212205c19039ddb8f1a4f20a276bdf797720a6fa5f3fa0fd4247d392a8a9a1f3d98f864736f6c63430008160033'

type FiatTokenUtilConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>

const isSuperArgs = (xs: FiatTokenUtilConstructorParams): xs is ConstructorParameters<typeof ContractFactory> =>
    xs.length > 1

export class FiatTokenUtil__factory extends ContractFactory {
    constructor(...args: FiatTokenUtilConstructorParams) {
        if (isSuperArgs(args)) {
            super(...args)
        } else {
            super(_abi, _bytecode, args[0])
        }
    }

    override deploy(
        fiatToken: PromiseOrValue<string>,
        overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<FiatTokenUtil> {
        return super.deploy(fiatToken, overrides || {}) as Promise<FiatTokenUtil>
    }
    override getDeployTransaction(
        fiatToken: PromiseOrValue<string>,
        overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): TransactionRequest {
        return super.getDeployTransaction(fiatToken, overrides || {})
    }
    override attach(address: string): FiatTokenUtil {
        return super.attach(address) as FiatTokenUtil
    }
    override connect(signer: Signer): FiatTokenUtil__factory {
        return super.connect(signer) as FiatTokenUtil__factory
    }

    static readonly bytecode = _bytecode
    static readonly abi = _abi
    static createInterface(): FiatTokenUtilInterface {
        return new utils.Interface(_abi) as FiatTokenUtilInterface
    }
    static connect(address: string, signerOrProvider: Signer | Provider): FiatTokenUtil {
        return new Contract(address, _abi, signerOrProvider) as FiatTokenUtil
    }
}
