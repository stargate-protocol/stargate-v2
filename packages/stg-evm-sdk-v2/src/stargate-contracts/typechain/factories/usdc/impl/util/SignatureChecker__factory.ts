/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers'
import type { Provider, TransactionRequest } from '@ethersproject/providers'
import type { PromiseOrValue } from '../../../../common'
import type { SignatureChecker, SignatureCheckerInterface } from '../../../../usdc/impl/util/SignatureChecker'

const _abi = [
    {
        inputs: [
            {
                internalType: 'address',
                name: 'signer',
                type: 'address',
            },
            {
                internalType: 'bytes32',
                name: 'digest',
                type: 'bytes32',
            },
            {
                internalType: 'bytes',
                name: 'signature',
                type: 'bytes',
            },
        ],
        name: 'isValidSignatureNow',
        outputs: [
            {
                internalType: 'bool',
                name: '',
                type: 'bool',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
] as const

const _bytecode =
    '0x6106d861003a600b82828239805160001a60731461002d57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100355760003560e01c80636ccea6521461003a575b600080fd5b61004d610048366004610529565b610061565b604051901515815260200160405180910390f35b6000833b6100a8578373ffffffffffffffffffffffffffffffffffffffff1661008a84846100bd565b73ffffffffffffffffffffffffffffffffffffffff161490506100b6565b6100b384848461017d565b90505b9392505050565b60008151604114610155576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602360248201527f45435265636f7665723a20696e76616c6964207369676e6174757265206c656e60448201527f677468000000000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b60208201516040830151606084015160001a610173868285856102bc565b9695505050505050565b60008060008573ffffffffffffffffffffffffffffffffffffffff16631626ba7e60e01b86866040516024016101b4929190610633565b60408051601f198184030181529181526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff0000000000000000000000000000000000000000000000000000000090941693909317909252905161021f919061066d565b600060405180830381855afa9150503d806000811461025a576040519150601f19603f3d011682016040523d82523d6000602084013e61025f565b606091505b509150915081801561027357506020815110155b8015610173575080517f1626ba7e00000000000000000000000000000000000000000000000000000000906102b19083016020908101908401610689565b149695505050505050565b60007f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a082111561036e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f45435265636f7665723a20696e76616c6964207369676e61747572652027732760448201527f2076616c75650000000000000000000000000000000000000000000000000000606482015260840161014c565b8360ff16601b1415801561038657508360ff16601c14155b15610413576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f45435265636f7665723a20696e76616c6964207369676e61747572652027762760448201527f2076616c75650000000000000000000000000000000000000000000000000000606482015260840161014c565b6040805160008082526020820180845288905260ff871692820192909252606081018590526080810184905260019060a0016020604051602081039080840390855afa158015610467573d6000803e3d6000fd5b5050604051601f19015191505073ffffffffffffffffffffffffffffffffffffffff81166104f1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601c60248201527f45435265636f7665723a20696e76616c6964207369676e617475726500000000604482015260640161014c565b95945050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60008060006060848603121561053e57600080fd5b833573ffffffffffffffffffffffffffffffffffffffff8116811461056257600080fd5b925060208401359150604084013567ffffffffffffffff8082111561058657600080fd5b818601915086601f83011261059a57600080fd5b8135818111156105ac576105ac6104fa565b604051601f8201601f19908116603f011681019083821181831017156105d4576105d46104fa565b816040528281528960208487010111156105ed57600080fd5b8260208601602083013760006020848301015280955050505050509250925092565b60005b8381101561062a578181015183820152602001610612565b50506000910152565b828152604060208201526000825180604084015261065881606085016020870161060f565b601f01601f1916919091016060019392505050565b6000825161067f81846020870161060f565b9190910192915050565b60006020828403121561069b57600080fd5b505191905056fea2646970667358221220838f4edba48371a3bd204749e3da0c29033ea0e239561400e67cd53ebe972f6164736f6c63430008160033'

type SignatureCheckerConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>

const isSuperArgs = (xs: SignatureCheckerConstructorParams): xs is ConstructorParameters<typeof ContractFactory> =>
    xs.length > 1

export class SignatureChecker__factory extends ContractFactory {
    constructor(...args: SignatureCheckerConstructorParams) {
        if (isSuperArgs(args)) {
            super(...args)
        } else {
            super(_abi, _bytecode, args[0])
        }
    }

    override deploy(overrides?: Overrides & { from?: PromiseOrValue<string> }): Promise<SignatureChecker> {
        return super.deploy(overrides || {}) as Promise<SignatureChecker>
    }
    override getDeployTransaction(overrides?: Overrides & { from?: PromiseOrValue<string> }): TransactionRequest {
        return super.getDeployTransaction(overrides || {})
    }
    override attach(address: string): SignatureChecker {
        return super.attach(address) as SignatureChecker
    }
    override connect(signer: Signer): SignatureChecker__factory {
        return super.connect(signer) as SignatureChecker__factory
    }

    static readonly bytecode = _bytecode
    static readonly abi = _abi
    static createInterface(): SignatureCheckerInterface {
        return new utils.Interface(_abi) as SignatureCheckerInterface
    }
    static connect(address: string, signerOrProvider: Signer | Provider): SignatureChecker {
        return new Contract(address, _abi, signerOrProvider) as SignatureChecker
    }
}
