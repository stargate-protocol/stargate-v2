/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from 'ethers'
import type { Provider } from '@ethersproject/providers'
import type {
    IStakingReceiver,
    IStakingReceiverInterface,
} from '../../../../peripheral/rewarder/interfaces/IStakingReceiver'

const _abi = [
    {
        inputs: [
            {
                internalType: 'contract IERC20',
                name: 'token',
                type: 'address',
            },
            {
                internalType: 'address',
                name: 'from',
                type: 'address',
            },
            {
                internalType: 'uint256',
                name: 'value',
                type: 'uint256',
            },
            {
                internalType: 'bytes',
                name: 'data',
                type: 'bytes',
            },
        ],
        name: 'onWithdrawReceived',
        outputs: [
            {
                internalType: 'bytes4',
                name: '',
                type: 'bytes4',
            },
        ],
        stateMutability: 'nonpayable',
        type: 'function',
    },
] as const

export class IStakingReceiver__factory {
    static readonly abi = _abi
    static createInterface(): IStakingReceiverInterface {
        return new utils.Interface(_abi) as IStakingReceiverInterface
    }
    static connect(address: string, signerOrProvider: Signer | Provider): IStakingReceiver {
        return new Contract(address, _abi, signerOrProvider) as IStakingReceiver
    }
}
