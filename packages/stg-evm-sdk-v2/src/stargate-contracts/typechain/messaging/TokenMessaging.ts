/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
    BaseContract,
    BigNumber,
    BigNumberish,
    BytesLike,
    CallOverrides,
    ContractTransaction,
    Overrides,
    PayableOverrides,
    PopulatedTransaction,
    Signer,
    utils,
} from 'ethers'
import type { FunctionFragment, Result, EventFragment } from '@ethersproject/abi'
import type { Listener, Provider } from '@ethersproject/providers'
import type { TypedEventFilter, TypedEvent, TypedListener, OnEvent, PromiseOrValue } from '../common'

export type EnforcedOptionParamStruct = {
    eid: PromiseOrValue<BigNumberish>
    msgType: PromiseOrValue<BigNumberish>
    options: PromiseOrValue<BytesLike>
}

export type EnforcedOptionParamStructOutput = [number, number, string] & {
    eid: number
    msgType: number
    options: string
}

export type OriginStruct = {
    srcEid: PromiseOrValue<BigNumberish>
    sender: PromiseOrValue<BytesLike>
    nonce: PromiseOrValue<BigNumberish>
}

export type OriginStructOutput = [number, string, BigNumber] & {
    srcEid: number
    sender: string
    nonce: BigNumber
}

export type MessagingFeeStruct = {
    nativeFee: PromiseOrValue<BigNumberish>
    lzTokenFee: PromiseOrValue<BigNumberish>
}

export type MessagingFeeStructOutput = [BigNumber, BigNumber] & {
    nativeFee: BigNumber
    lzTokenFee: BigNumber
}

export type MessagingReceiptStruct = {
    guid: PromiseOrValue<BytesLike>
    nonce: PromiseOrValue<BigNumberish>
    fee: MessagingFeeStruct
}

export type MessagingReceiptStructOutput = [string, BigNumber, MessagingFeeStructOutput] & {
    guid: string
    nonce: BigNumber
    fee: MessagingFeeStructOutput
}

export type InboundPacketStruct = {
    origin: OriginStruct
    dstEid: PromiseOrValue<BigNumberish>
    receiver: PromiseOrValue<string>
    guid: PromiseOrValue<BytesLike>
    value: PromiseOrValue<BigNumberish>
    executor: PromiseOrValue<string>
    message: PromiseOrValue<BytesLike>
    extraData: PromiseOrValue<BytesLike>
}

export type InboundPacketStructOutput = [
    OriginStructOutput,
    number,
    string,
    string,
    BigNumber,
    string,
    string,
    string,
] & {
    origin: OriginStructOutput
    dstEid: number
    receiver: string
    guid: string
    value: BigNumber
    executor: string
    message: string
    extraData: string
}

export type TaxiParamsStruct = {
    sender: PromiseOrValue<string>
    dstEid: PromiseOrValue<BigNumberish>
    receiver: PromiseOrValue<BytesLike>
    amountSD: PromiseOrValue<BigNumberish>
    composeMsg: PromiseOrValue<BytesLike>
    extraOptions: PromiseOrValue<BytesLike>
}

export type TaxiParamsStructOutput = [string, number, string, BigNumber, string, string] & {
    sender: string
    dstEid: number
    receiver: string
    amountSD: BigNumber
    composeMsg: string
    extraOptions: string
}

export type RideBusParamsStruct = {
    sender: PromiseOrValue<string>
    dstEid: PromiseOrValue<BigNumberish>
    receiver: PromiseOrValue<BytesLike>
    amountSD: PromiseOrValue<BigNumberish>
    nativeDrop: PromiseOrValue<boolean>
}

export type RideBusParamsStructOutput = [string, number, string, BigNumber, boolean] & {
    sender: string
    dstEid: number
    receiver: string
    amountSD: BigNumber
    nativeDrop: boolean
}

export type TicketStruct = {
    ticketId: PromiseOrValue<BigNumberish>
    passengerBytes: PromiseOrValue<BytesLike>
}

export type TicketStructOutput = [BigNumber, string] & {
    ticketId: BigNumber
    passengerBytes: string
}

export interface TokenMessagingInterface extends utils.Interface {
    functions: {
        'MSG_TYPE_BUS()': FunctionFragment
        'MSG_TYPE_TAXI()': FunctionFragment
        'allowInitializePath((uint32,bytes32,uint64))': FunctionFragment
        'assetIds(address)': FunctionFragment
        'busQueues(uint32)': FunctionFragment
        'combineOptions(uint32,uint16,bytes)': FunctionFragment
        'driveBus(uint32,bytes)': FunctionFragment
        'endpoint()': FunctionFragment
        'enforcedOptions(uint32,uint16)': FunctionFragment
        'gasLimits(uint32)': FunctionFragment
        'getPassengerHash(uint32,uint16)': FunctionFragment
        'getTransferGasLimit()': FunctionFragment
        'initializeBusQueueStorage(uint32[],uint16,uint16)': FunctionFragment
        'isComposeMsgSender((uint32,bytes32,uint64),bytes,address)': FunctionFragment
        'isPeer(uint32,bytes32)': FunctionFragment
        'lzReceive((uint32,bytes32,uint64),bytes32,bytes,address,bytes)': FunctionFragment
        'lzReceiveAndRevert(((uint32,bytes32,uint64),uint32,address,bytes32,uint256,address,bytes,bytes)[])': FunctionFragment
        'lzReceiveSimulate((uint32,bytes32,uint64),bytes32,bytes,address,bytes)': FunctionFragment
        'maxAssetId()': FunctionFragment
        'nativeDropAmounts(uint32)': FunctionFragment
        'nextNonce(uint32,bytes32)': FunctionFragment
        'oApp()': FunctionFragment
        'oAppVersion()': FunctionFragment
        'owner()': FunctionFragment
        'peers(uint32)': FunctionFragment
        'planner()': FunctionFragment
        'preCrime()': FunctionFragment
        'queueCapacity()': FunctionFragment
        'quoteDriveBus(uint32,bytes)': FunctionFragment
        'quoteFares(uint32,uint8)': FunctionFragment
        'quoteRideBus(uint32,bool)': FunctionFragment
        'quoteTaxi((address,uint32,bytes32,uint64,bytes,bytes),bool)': FunctionFragment
        'renounceOwnership()': FunctionFragment
        'rideBus((address,uint32,bytes32,uint64,bool))': FunctionFragment
        'setAssetId(address,uint16)': FunctionFragment
        'setDelegate(address)': FunctionFragment
        'setEnforcedOptions((uint32,uint16,bytes)[])': FunctionFragment
        'setFares(uint32,uint80,uint80)': FunctionFragment
        'setGasLimit(uint32,uint128,uint128)': FunctionFragment
        'setMaxAssetId(uint16)': FunctionFragment
        'setMaxNumPassengers(uint32,uint8)': FunctionFragment
        'setNativeDropAmount(uint32,uint128)': FunctionFragment
        'setPeer(uint32,bytes32)': FunctionFragment
        'setPlanner(address)': FunctionFragment
        'setPreCrime(address)': FunctionFragment
        'setTransferGasLimit(uint256)': FunctionFragment
        'stargateImpls(uint16)': FunctionFragment
        'taxi((address,uint32,bytes32,uint64,bytes,bytes),(uint256,uint256),address)': FunctionFragment
        'transferOwnership(address)': FunctionFragment
    }

    getFunction(
        nameOrSignatureOrTopic:
            | 'MSG_TYPE_BUS'
            | 'MSG_TYPE_TAXI'
            | 'allowInitializePath'
            | 'assetIds'
            | 'busQueues'
            | 'combineOptions'
            | 'driveBus'
            | 'endpoint'
            | 'enforcedOptions'
            | 'gasLimits'
            | 'getPassengerHash'
            | 'getTransferGasLimit'
            | 'initializeBusQueueStorage'
            | 'isComposeMsgSender'
            | 'isPeer'
            | 'lzReceive'
            | 'lzReceiveAndRevert'
            | 'lzReceiveSimulate'
            | 'maxAssetId'
            | 'nativeDropAmounts'
            | 'nextNonce'
            | 'oApp'
            | 'oAppVersion'
            | 'owner'
            | 'peers'
            | 'planner'
            | 'preCrime'
            | 'queueCapacity'
            | 'quoteDriveBus'
            | 'quoteFares'
            | 'quoteRideBus'
            | 'quoteTaxi'
            | 'renounceOwnership'
            | 'rideBus'
            | 'setAssetId'
            | 'setDelegate'
            | 'setEnforcedOptions'
            | 'setFares'
            | 'setGasLimit'
            | 'setMaxAssetId'
            | 'setMaxNumPassengers'
            | 'setNativeDropAmount'
            | 'setPeer'
            | 'setPlanner'
            | 'setPreCrime'
            | 'setTransferGasLimit'
            | 'stargateImpls'
            | 'taxi'
            | 'transferOwnership'
    ): FunctionFragment

    encodeFunctionData(functionFragment: 'MSG_TYPE_BUS', values?: undefined): string
    encodeFunctionData(functionFragment: 'MSG_TYPE_TAXI', values?: undefined): string
    encodeFunctionData(functionFragment: 'allowInitializePath', values: [OriginStruct]): string
    encodeFunctionData(functionFragment: 'assetIds', values: [PromiseOrValue<string>]): string
    encodeFunctionData(functionFragment: 'busQueues', values: [PromiseOrValue<BigNumberish>]): string
    encodeFunctionData(
        functionFragment: 'combineOptions',
        values: [PromiseOrValue<BigNumberish>, PromiseOrValue<BigNumberish>, PromiseOrValue<BytesLike>]
    ): string
    encodeFunctionData(
        functionFragment: 'driveBus',
        values: [PromiseOrValue<BigNumberish>, PromiseOrValue<BytesLike>]
    ): string
    encodeFunctionData(functionFragment: 'endpoint', values?: undefined): string
    encodeFunctionData(
        functionFragment: 'enforcedOptions',
        values: [PromiseOrValue<BigNumberish>, PromiseOrValue<BigNumberish>]
    ): string
    encodeFunctionData(functionFragment: 'gasLimits', values: [PromiseOrValue<BigNumberish>]): string
    encodeFunctionData(
        functionFragment: 'getPassengerHash',
        values: [PromiseOrValue<BigNumberish>, PromiseOrValue<BigNumberish>]
    ): string
    encodeFunctionData(functionFragment: 'getTransferGasLimit', values?: undefined): string
    encodeFunctionData(
        functionFragment: 'initializeBusQueueStorage',
        values: [PromiseOrValue<BigNumberish>[], PromiseOrValue<BigNumberish>, PromiseOrValue<BigNumberish>]
    ): string
    encodeFunctionData(
        functionFragment: 'isComposeMsgSender',
        values: [OriginStruct, PromiseOrValue<BytesLike>, PromiseOrValue<string>]
    ): string
    encodeFunctionData(
        functionFragment: 'isPeer',
        values: [PromiseOrValue<BigNumberish>, PromiseOrValue<BytesLike>]
    ): string
    encodeFunctionData(
        functionFragment: 'lzReceive',
        values: [
            OriginStruct,
            PromiseOrValue<BytesLike>,
            PromiseOrValue<BytesLike>,
            PromiseOrValue<string>,
            PromiseOrValue<BytesLike>,
        ]
    ): string
    encodeFunctionData(functionFragment: 'lzReceiveAndRevert', values: [InboundPacketStruct[]]): string
    encodeFunctionData(
        functionFragment: 'lzReceiveSimulate',
        values: [
            OriginStruct,
            PromiseOrValue<BytesLike>,
            PromiseOrValue<BytesLike>,
            PromiseOrValue<string>,
            PromiseOrValue<BytesLike>,
        ]
    ): string
    encodeFunctionData(functionFragment: 'maxAssetId', values?: undefined): string
    encodeFunctionData(functionFragment: 'nativeDropAmounts', values: [PromiseOrValue<BigNumberish>]): string
    encodeFunctionData(
        functionFragment: 'nextNonce',
        values: [PromiseOrValue<BigNumberish>, PromiseOrValue<BytesLike>]
    ): string
    encodeFunctionData(functionFragment: 'oApp', values?: undefined): string
    encodeFunctionData(functionFragment: 'oAppVersion', values?: undefined): string
    encodeFunctionData(functionFragment: 'owner', values?: undefined): string
    encodeFunctionData(functionFragment: 'peers', values: [PromiseOrValue<BigNumberish>]): string
    encodeFunctionData(functionFragment: 'planner', values?: undefined): string
    encodeFunctionData(functionFragment: 'preCrime', values?: undefined): string
    encodeFunctionData(functionFragment: 'queueCapacity', values?: undefined): string
    encodeFunctionData(
        functionFragment: 'quoteDriveBus',
        values: [PromiseOrValue<BigNumberish>, PromiseOrValue<BytesLike>]
    ): string
    encodeFunctionData(
        functionFragment: 'quoteFares',
        values: [PromiseOrValue<BigNumberish>, PromiseOrValue<BigNumberish>]
    ): string
    encodeFunctionData(
        functionFragment: 'quoteRideBus',
        values: [PromiseOrValue<BigNumberish>, PromiseOrValue<boolean>]
    ): string
    encodeFunctionData(functionFragment: 'quoteTaxi', values: [TaxiParamsStruct, PromiseOrValue<boolean>]): string
    encodeFunctionData(functionFragment: 'renounceOwnership', values?: undefined): string
    encodeFunctionData(functionFragment: 'rideBus', values: [RideBusParamsStruct]): string
    encodeFunctionData(
        functionFragment: 'setAssetId',
        values: [PromiseOrValue<string>, PromiseOrValue<BigNumberish>]
    ): string
    encodeFunctionData(functionFragment: 'setDelegate', values: [PromiseOrValue<string>]): string
    encodeFunctionData(functionFragment: 'setEnforcedOptions', values: [EnforcedOptionParamStruct[]]): string
    encodeFunctionData(
        functionFragment: 'setFares',
        values: [PromiseOrValue<BigNumberish>, PromiseOrValue<BigNumberish>, PromiseOrValue<BigNumberish>]
    ): string
    encodeFunctionData(
        functionFragment: 'setGasLimit',
        values: [PromiseOrValue<BigNumberish>, PromiseOrValue<BigNumberish>, PromiseOrValue<BigNumberish>]
    ): string
    encodeFunctionData(functionFragment: 'setMaxAssetId', values: [PromiseOrValue<BigNumberish>]): string
    encodeFunctionData(
        functionFragment: 'setMaxNumPassengers',
        values: [PromiseOrValue<BigNumberish>, PromiseOrValue<BigNumberish>]
    ): string
    encodeFunctionData(
        functionFragment: 'setNativeDropAmount',
        values: [PromiseOrValue<BigNumberish>, PromiseOrValue<BigNumberish>]
    ): string
    encodeFunctionData(
        functionFragment: 'setPeer',
        values: [PromiseOrValue<BigNumberish>, PromiseOrValue<BytesLike>]
    ): string
    encodeFunctionData(functionFragment: 'setPlanner', values: [PromiseOrValue<string>]): string
    encodeFunctionData(functionFragment: 'setPreCrime', values: [PromiseOrValue<string>]): string
    encodeFunctionData(functionFragment: 'setTransferGasLimit', values: [PromiseOrValue<BigNumberish>]): string
    encodeFunctionData(functionFragment: 'stargateImpls', values: [PromiseOrValue<BigNumberish>]): string
    encodeFunctionData(
        functionFragment: 'taxi',
        values: [TaxiParamsStruct, MessagingFeeStruct, PromiseOrValue<string>]
    ): string
    encodeFunctionData(functionFragment: 'transferOwnership', values: [PromiseOrValue<string>]): string

    decodeFunctionResult(functionFragment: 'MSG_TYPE_BUS', data: BytesLike): Result
    decodeFunctionResult(functionFragment: 'MSG_TYPE_TAXI', data: BytesLike): Result
    decodeFunctionResult(functionFragment: 'allowInitializePath', data: BytesLike): Result
    decodeFunctionResult(functionFragment: 'assetIds', data: BytesLike): Result
    decodeFunctionResult(functionFragment: 'busQueues', data: BytesLike): Result
    decodeFunctionResult(functionFragment: 'combineOptions', data: BytesLike): Result
    decodeFunctionResult(functionFragment: 'driveBus', data: BytesLike): Result
    decodeFunctionResult(functionFragment: 'endpoint', data: BytesLike): Result
    decodeFunctionResult(functionFragment: 'enforcedOptions', data: BytesLike): Result
    decodeFunctionResult(functionFragment: 'gasLimits', data: BytesLike): Result
    decodeFunctionResult(functionFragment: 'getPassengerHash', data: BytesLike): Result
    decodeFunctionResult(functionFragment: 'getTransferGasLimit', data: BytesLike): Result
    decodeFunctionResult(functionFragment: 'initializeBusQueueStorage', data: BytesLike): Result
    decodeFunctionResult(functionFragment: 'isComposeMsgSender', data: BytesLike): Result
    decodeFunctionResult(functionFragment: 'isPeer', data: BytesLike): Result
    decodeFunctionResult(functionFragment: 'lzReceive', data: BytesLike): Result
    decodeFunctionResult(functionFragment: 'lzReceiveAndRevert', data: BytesLike): Result
    decodeFunctionResult(functionFragment: 'lzReceiveSimulate', data: BytesLike): Result
    decodeFunctionResult(functionFragment: 'maxAssetId', data: BytesLike): Result
    decodeFunctionResult(functionFragment: 'nativeDropAmounts', data: BytesLike): Result
    decodeFunctionResult(functionFragment: 'nextNonce', data: BytesLike): Result
    decodeFunctionResult(functionFragment: 'oApp', data: BytesLike): Result
    decodeFunctionResult(functionFragment: 'oAppVersion', data: BytesLike): Result
    decodeFunctionResult(functionFragment: 'owner', data: BytesLike): Result
    decodeFunctionResult(functionFragment: 'peers', data: BytesLike): Result
    decodeFunctionResult(functionFragment: 'planner', data: BytesLike): Result
    decodeFunctionResult(functionFragment: 'preCrime', data: BytesLike): Result
    decodeFunctionResult(functionFragment: 'queueCapacity', data: BytesLike): Result
    decodeFunctionResult(functionFragment: 'quoteDriveBus', data: BytesLike): Result
    decodeFunctionResult(functionFragment: 'quoteFares', data: BytesLike): Result
    decodeFunctionResult(functionFragment: 'quoteRideBus', data: BytesLike): Result
    decodeFunctionResult(functionFragment: 'quoteTaxi', data: BytesLike): Result
    decodeFunctionResult(functionFragment: 'renounceOwnership', data: BytesLike): Result
    decodeFunctionResult(functionFragment: 'rideBus', data: BytesLike): Result
    decodeFunctionResult(functionFragment: 'setAssetId', data: BytesLike): Result
    decodeFunctionResult(functionFragment: 'setDelegate', data: BytesLike): Result
    decodeFunctionResult(functionFragment: 'setEnforcedOptions', data: BytesLike): Result
    decodeFunctionResult(functionFragment: 'setFares', data: BytesLike): Result
    decodeFunctionResult(functionFragment: 'setGasLimit', data: BytesLike): Result
    decodeFunctionResult(functionFragment: 'setMaxAssetId', data: BytesLike): Result
    decodeFunctionResult(functionFragment: 'setMaxNumPassengers', data: BytesLike): Result
    decodeFunctionResult(functionFragment: 'setNativeDropAmount', data: BytesLike): Result
    decodeFunctionResult(functionFragment: 'setPeer', data: BytesLike): Result
    decodeFunctionResult(functionFragment: 'setPlanner', data: BytesLike): Result
    decodeFunctionResult(functionFragment: 'setPreCrime', data: BytesLike): Result
    decodeFunctionResult(functionFragment: 'setTransferGasLimit', data: BytesLike): Result
    decodeFunctionResult(functionFragment: 'stargateImpls', data: BytesLike): Result
    decodeFunctionResult(functionFragment: 'taxi', data: BytesLike): Result
    decodeFunctionResult(functionFragment: 'transferOwnership', data: BytesLike): Result

    events: {
        'AssetIdSet(address,uint16)': EventFragment
        'BusDriven(uint32,uint72,uint8,bytes32)': EventFragment
        'BusQueueStorageInitialized(uint32,uint16,uint16)': EventFragment
        'BusRode(uint32,uint72,uint80,bytes)': EventFragment
        'EnforcedOptionSet(tuple[])': EventFragment
        'FaresSet(uint32,uint80,uint80)': EventFragment
        'GasLimitSet(uint32,uint128,uint128)': EventFragment
        'MaxAssetIdSet(uint16)': EventFragment
        'MaxNumPassengersSet(uint32,uint8)': EventFragment
        'NativeDropAmountSet(uint32,uint128)': EventFragment
        'NativeDropApplied(address,uint128)': EventFragment
        'NativeDropFailed(address,uint128)': EventFragment
        'OwnershipTransferred(address,address)': EventFragment
        'PeerSet(uint32,bytes32)': EventFragment
        'PlannerSet(address)': EventFragment
        'PreCrimeSet(address)': EventFragment
    }

    getEvent(nameOrSignatureOrTopic: 'AssetIdSet'): EventFragment
    getEvent(nameOrSignatureOrTopic: 'BusDriven'): EventFragment
    getEvent(nameOrSignatureOrTopic: 'BusQueueStorageInitialized'): EventFragment
    getEvent(nameOrSignatureOrTopic: 'BusRode'): EventFragment
    getEvent(nameOrSignatureOrTopic: 'EnforcedOptionSet'): EventFragment
    getEvent(nameOrSignatureOrTopic: 'FaresSet'): EventFragment
    getEvent(nameOrSignatureOrTopic: 'GasLimitSet'): EventFragment
    getEvent(nameOrSignatureOrTopic: 'MaxAssetIdSet'): EventFragment
    getEvent(nameOrSignatureOrTopic: 'MaxNumPassengersSet'): EventFragment
    getEvent(nameOrSignatureOrTopic: 'NativeDropAmountSet'): EventFragment
    getEvent(nameOrSignatureOrTopic: 'NativeDropApplied'): EventFragment
    getEvent(nameOrSignatureOrTopic: 'NativeDropFailed'): EventFragment
    getEvent(nameOrSignatureOrTopic: 'OwnershipTransferred'): EventFragment
    getEvent(nameOrSignatureOrTopic: 'PeerSet'): EventFragment
    getEvent(nameOrSignatureOrTopic: 'PlannerSet'): EventFragment
    getEvent(nameOrSignatureOrTopic: 'PreCrimeSet'): EventFragment
}

export interface AssetIdSetEventObject {
    stargateImpl: string
    assetId: number
}
export type AssetIdSetEvent = TypedEvent<[string, number], AssetIdSetEventObject>

export type AssetIdSetEventFilter = TypedEventFilter<AssetIdSetEvent>

export interface BusDrivenEventObject {
    dstEid: number
    startTicketId: BigNumber
    numPassengers: number
    guid: string
}
export type BusDrivenEvent = TypedEvent<[number, BigNumber, number, string], BusDrivenEventObject>

export type BusDrivenEventFilter = TypedEventFilter<BusDrivenEvent>

export interface BusQueueStorageInitializedEventObject {
    dstEid: number
    startSlot: number
    endSlot: number
}
export type BusQueueStorageInitializedEvent = TypedEvent<
    [number, number, number],
    BusQueueStorageInitializedEventObject
>

export type BusQueueStorageInitializedEventFilter = TypedEventFilter<BusQueueStorageInitializedEvent>

export interface BusRodeEventObject {
    dstEid: number
    ticketId: BigNumber
    fare: BigNumber
    passenger: string
}
export type BusRodeEvent = TypedEvent<[number, BigNumber, BigNumber, string], BusRodeEventObject>

export type BusRodeEventFilter = TypedEventFilter<BusRodeEvent>

export interface EnforcedOptionSetEventObject {
    _enforcedOptions: EnforcedOptionParamStructOutput[]
}
export type EnforcedOptionSetEvent = TypedEvent<[EnforcedOptionParamStructOutput[]], EnforcedOptionSetEventObject>

export type EnforcedOptionSetEventFilter = TypedEventFilter<EnforcedOptionSetEvent>

export interface FaresSetEventObject {
    dstEid: number
    busFare: BigNumber
    busAndNativeDropFare: BigNumber
}
export type FaresSetEvent = TypedEvent<[number, BigNumber, BigNumber], FaresSetEventObject>

export type FaresSetEventFilter = TypedEventFilter<FaresSetEvent>

export interface GasLimitSetEventObject {
    eid: number
    gasLimit: BigNumber
    nativeDropGasLimit: BigNumber
}
export type GasLimitSetEvent = TypedEvent<[number, BigNumber, BigNumber], GasLimitSetEventObject>

export type GasLimitSetEventFilter = TypedEventFilter<GasLimitSetEvent>

export interface MaxAssetIdSetEventObject {
    maxAssetId: number
}
export type MaxAssetIdSetEvent = TypedEvent<[number], MaxAssetIdSetEventObject>

export type MaxAssetIdSetEventFilter = TypedEventFilter<MaxAssetIdSetEvent>

export interface MaxNumPassengersSetEventObject {
    dstEid: number
    maxNumPassengers: number
}
export type MaxNumPassengersSetEvent = TypedEvent<[number, number], MaxNumPassengersSetEventObject>

export type MaxNumPassengersSetEventFilter = TypedEventFilter<MaxNumPassengersSetEvent>

export interface NativeDropAmountSetEventObject {
    dstEid: number
    nativeDropAmount: BigNumber
}
export type NativeDropAmountSetEvent = TypedEvent<[number, BigNumber], NativeDropAmountSetEventObject>

export type NativeDropAmountSetEventFilter = TypedEventFilter<NativeDropAmountSetEvent>

export interface NativeDropAppliedEventObject {
    receiver: string
    amount: BigNumber
}
export type NativeDropAppliedEvent = TypedEvent<[string, BigNumber], NativeDropAppliedEventObject>

export type NativeDropAppliedEventFilter = TypedEventFilter<NativeDropAppliedEvent>

export interface NativeDropFailedEventObject {
    receiver: string
    amount: BigNumber
}
export type NativeDropFailedEvent = TypedEvent<[string, BigNumber], NativeDropFailedEventObject>

export type NativeDropFailedEventFilter = TypedEventFilter<NativeDropFailedEvent>

export interface OwnershipTransferredEventObject {
    previousOwner: string
    newOwner: string
}
export type OwnershipTransferredEvent = TypedEvent<[string, string], OwnershipTransferredEventObject>

export type OwnershipTransferredEventFilter = TypedEventFilter<OwnershipTransferredEvent>

export interface PeerSetEventObject {
    eid: number
    peer: string
}
export type PeerSetEvent = TypedEvent<[number, string], PeerSetEventObject>

export type PeerSetEventFilter = TypedEventFilter<PeerSetEvent>

export interface PlannerSetEventObject {
    planner: string
}
export type PlannerSetEvent = TypedEvent<[string], PlannerSetEventObject>

export type PlannerSetEventFilter = TypedEventFilter<PlannerSetEvent>

export interface PreCrimeSetEventObject {
    preCrimeAddress: string
}
export type PreCrimeSetEvent = TypedEvent<[string], PreCrimeSetEventObject>

export type PreCrimeSetEventFilter = TypedEventFilter<PreCrimeSetEvent>

export interface TokenMessaging extends BaseContract {
    connect(signerOrProvider: Signer | Provider | string): this
    attach(addressOrName: string): this
    deployed(): Promise<this>

    interface: TokenMessagingInterface

    queryFilter<TEvent extends TypedEvent>(
        event: TypedEventFilter<TEvent>,
        fromBlockOrBlockhash?: string | number | undefined,
        toBlock?: string | number | undefined
    ): Promise<Array<TEvent>>

    listeners<TEvent extends TypedEvent>(eventFilter?: TypedEventFilter<TEvent>): Array<TypedListener<TEvent>>
    listeners(eventName?: string): Array<Listener>
    removeAllListeners<TEvent extends TypedEvent>(eventFilter: TypedEventFilter<TEvent>): this
    removeAllListeners(eventName?: string): this
    off: OnEvent<this>
    on: OnEvent<this>
    once: OnEvent<this>
    removeListener: OnEvent<this>

    functions: {
        MSG_TYPE_BUS(overrides?: CallOverrides): Promise<[number]>

        MSG_TYPE_TAXI(overrides?: CallOverrides): Promise<[number]>

        allowInitializePath(origin: OriginStruct, overrides?: CallOverrides): Promise<[boolean]>

        assetIds(
            stargateImpl: PromiseOrValue<string>,
            overrides?: CallOverrides
        ): Promise<[number] & { assetId: number }>

        busQueues(
            dstEid: PromiseOrValue<BigNumberish>,
            overrides?: CallOverrides
        ): Promise<
            [number, BigNumber, BigNumber, number, BigNumber] & {
                maxNumPassengers: number
                busFare: BigNumber
                busAndNativeDropFare: BigNumber
                qLength: number
                nextTicketId: BigNumber
            }
        >

        combineOptions(
            _eid: PromiseOrValue<BigNumberish>,
            _msgType: PromiseOrValue<BigNumberish>,
            _extraOptions: PromiseOrValue<BytesLike>,
            overrides?: CallOverrides
        ): Promise<[string]>

        driveBus(
            _dstEid: PromiseOrValue<BigNumberish>,
            _passengers: PromiseOrValue<BytesLike>,
            overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
        ): Promise<ContractTransaction>

        endpoint(overrides?: CallOverrides): Promise<[string]>

        enforcedOptions(
            eid: PromiseOrValue<BigNumberish>,
            msgType: PromiseOrValue<BigNumberish>,
            overrides?: CallOverrides
        ): Promise<[string] & { enforcedOption: string }>

        gasLimits(
            eid: PromiseOrValue<BigNumberish>,
            overrides?: CallOverrides
        ): Promise<
            [BigNumber, BigNumber] & {
                gasLimit: BigNumber
                nativeDropGasLimit: BigNumber
            }
        >

        getPassengerHash(
            _dstEid: PromiseOrValue<BigNumberish>,
            _index: PromiseOrValue<BigNumberish>,
            overrides?: CallOverrides
        ): Promise<[string] & { hash: string }>

        getTransferGasLimit(overrides?: CallOverrides): Promise<[BigNumber]>

        initializeBusQueueStorage(
            _dstEids: PromiseOrValue<BigNumberish>[],
            _startSlot: PromiseOrValue<BigNumberish>,
            _endSlot: PromiseOrValue<BigNumberish>,
            overrides?: Overrides & { from?: PromiseOrValue<string> }
        ): Promise<ContractTransaction>

        isComposeMsgSender(
            arg0: OriginStruct,
            _message: PromiseOrValue<BytesLike>,
            _sender: PromiseOrValue<string>,
            overrides?: CallOverrides
        ): Promise<[boolean]>

        isPeer(
            _eid: PromiseOrValue<BigNumberish>,
            _peer: PromiseOrValue<BytesLike>,
            overrides?: CallOverrides
        ): Promise<[boolean]>

        lzReceive(
            _origin: OriginStruct,
            _guid: PromiseOrValue<BytesLike>,
            _message: PromiseOrValue<BytesLike>,
            _executor: PromiseOrValue<string>,
            _extraData: PromiseOrValue<BytesLike>,
            overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
        ): Promise<ContractTransaction>

        lzReceiveAndRevert(
            _packets: InboundPacketStruct[],
            overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
        ): Promise<ContractTransaction>

        lzReceiveSimulate(
            _origin: OriginStruct,
            _guid: PromiseOrValue<BytesLike>,
            _message: PromiseOrValue<BytesLike>,
            _executor: PromiseOrValue<string>,
            _extraData: PromiseOrValue<BytesLike>,
            overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
        ): Promise<ContractTransaction>

        maxAssetId(overrides?: CallOverrides): Promise<[number]>

        nativeDropAmounts(
            dstEid: PromiseOrValue<BigNumberish>,
            overrides?: CallOverrides
        ): Promise<[BigNumber] & { nativeDropAmount: BigNumber }>

        nextNonce(
            arg0: PromiseOrValue<BigNumberish>,
            arg1: PromiseOrValue<BytesLike>,
            overrides?: CallOverrides
        ): Promise<[BigNumber] & { nonce: BigNumber }>

        oApp(overrides?: CallOverrides): Promise<[string]>

        oAppVersion(overrides?: CallOverrides): Promise<
            [BigNumber, BigNumber] & {
                senderVersion: BigNumber
                receiverVersion: BigNumber
            }
        >

        owner(overrides?: CallOverrides): Promise<[string]>

        peers(eid: PromiseOrValue<BigNumberish>, overrides?: CallOverrides): Promise<[string] & { peer: string }>

        planner(overrides?: CallOverrides): Promise<[string]>

        preCrime(overrides?: CallOverrides): Promise<[string]>

        queueCapacity(overrides?: CallOverrides): Promise<[number]>

        quoteDriveBus(
            _dstEid: PromiseOrValue<BigNumberish>,
            _passengers: PromiseOrValue<BytesLike>,
            overrides?: CallOverrides
        ): Promise<[MessagingFeeStructOutput] & { fee: MessagingFeeStructOutput }>

        quoteFares(
            _dstEid: PromiseOrValue<BigNumberish>,
            _numPassengers: PromiseOrValue<BigNumberish>,
            overrides?: CallOverrides
        ): Promise<
            [BigNumber, BigNumber] & {
                busFare: BigNumber
                busAndNativeDropFare: BigNumber
            }
        >

        quoteRideBus(
            _dstEid: PromiseOrValue<BigNumberish>,
            _airdrop: PromiseOrValue<boolean>,
            overrides?: CallOverrides
        ): Promise<[MessagingFeeStructOutput] & { fee: MessagingFeeStructOutput }>

        quoteTaxi(
            _params: TaxiParamsStruct,
            _payInLzToken: PromiseOrValue<boolean>,
            overrides?: CallOverrides
        ): Promise<[MessagingFeeStructOutput] & { fee: MessagingFeeStructOutput }>

        renounceOwnership(overrides?: Overrides & { from?: PromiseOrValue<string> }): Promise<ContractTransaction>

        rideBus(
            _params: RideBusParamsStruct,
            overrides?: Overrides & { from?: PromiseOrValue<string> }
        ): Promise<ContractTransaction>

        setAssetId(
            _stargateImpl: PromiseOrValue<string>,
            _assetId: PromiseOrValue<BigNumberish>,
            overrides?: Overrides & { from?: PromiseOrValue<string> }
        ): Promise<ContractTransaction>

        setDelegate(
            _delegate: PromiseOrValue<string>,
            overrides?: Overrides & { from?: PromiseOrValue<string> }
        ): Promise<ContractTransaction>

        setEnforcedOptions(
            _enforcedOptions: EnforcedOptionParamStruct[],
            overrides?: Overrides & { from?: PromiseOrValue<string> }
        ): Promise<ContractTransaction>

        setFares(
            _dstEid: PromiseOrValue<BigNumberish>,
            _busFare: PromiseOrValue<BigNumberish>,
            _busAndNativeDropFare: PromiseOrValue<BigNumberish>,
            overrides?: Overrides & { from?: PromiseOrValue<string> }
        ): Promise<ContractTransaction>

        setGasLimit(
            _eid: PromiseOrValue<BigNumberish>,
            _gasLimit: PromiseOrValue<BigNumberish>,
            _nativeDropGasLimit: PromiseOrValue<BigNumberish>,
            overrides?: Overrides & { from?: PromiseOrValue<string> }
        ): Promise<ContractTransaction>

        setMaxAssetId(
            _maxAssetId: PromiseOrValue<BigNumberish>,
            overrides?: Overrides & { from?: PromiseOrValue<string> }
        ): Promise<ContractTransaction>

        setMaxNumPassengers(
            _dstEid: PromiseOrValue<BigNumberish>,
            _maxNumPassengers: PromiseOrValue<BigNumberish>,
            overrides?: Overrides & { from?: PromiseOrValue<string> }
        ): Promise<ContractTransaction>

        setNativeDropAmount(
            _dstEid: PromiseOrValue<BigNumberish>,
            _nativeDropAmount: PromiseOrValue<BigNumberish>,
            overrides?: Overrides & { from?: PromiseOrValue<string> }
        ): Promise<ContractTransaction>

        setPeer(
            _eid: PromiseOrValue<BigNumberish>,
            _peer: PromiseOrValue<BytesLike>,
            overrides?: Overrides & { from?: PromiseOrValue<string> }
        ): Promise<ContractTransaction>

        setPlanner(
            _planner: PromiseOrValue<string>,
            overrides?: Overrides & { from?: PromiseOrValue<string> }
        ): Promise<ContractTransaction>

        setPreCrime(
            _preCrime: PromiseOrValue<string>,
            overrides?: Overrides & { from?: PromiseOrValue<string> }
        ): Promise<ContractTransaction>

        setTransferGasLimit(
            _gasLimit: PromiseOrValue<BigNumberish>,
            overrides?: Overrides & { from?: PromiseOrValue<string> }
        ): Promise<ContractTransaction>

        stargateImpls(
            assetId: PromiseOrValue<BigNumberish>,
            overrides?: CallOverrides
        ): Promise<[string] & { stargateImpl: string }>

        taxi(
            _params: TaxiParamsStruct,
            _messagingFee: MessagingFeeStruct,
            _refundAddress: PromiseOrValue<string>,
            overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
        ): Promise<ContractTransaction>

        transferOwnership(
            newOwner: PromiseOrValue<string>,
            overrides?: Overrides & { from?: PromiseOrValue<string> }
        ): Promise<ContractTransaction>
    }

    MSG_TYPE_BUS(overrides?: CallOverrides): Promise<number>

    MSG_TYPE_TAXI(overrides?: CallOverrides): Promise<number>

    allowInitializePath(origin: OriginStruct, overrides?: CallOverrides): Promise<boolean>

    assetIds(stargateImpl: PromiseOrValue<string>, overrides?: CallOverrides): Promise<number>

    busQueues(
        dstEid: PromiseOrValue<BigNumberish>,
        overrides?: CallOverrides
    ): Promise<
        [number, BigNumber, BigNumber, number, BigNumber] & {
            maxNumPassengers: number
            busFare: BigNumber
            busAndNativeDropFare: BigNumber
            qLength: number
            nextTicketId: BigNumber
        }
    >

    combineOptions(
        _eid: PromiseOrValue<BigNumberish>,
        _msgType: PromiseOrValue<BigNumberish>,
        _extraOptions: PromiseOrValue<BytesLike>,
        overrides?: CallOverrides
    ): Promise<string>

    driveBus(
        _dstEid: PromiseOrValue<BigNumberish>,
        _passengers: PromiseOrValue<BytesLike>,
        overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>

    endpoint(overrides?: CallOverrides): Promise<string>

    enforcedOptions(
        eid: PromiseOrValue<BigNumberish>,
        msgType: PromiseOrValue<BigNumberish>,
        overrides?: CallOverrides
    ): Promise<string>

    gasLimits(
        eid: PromiseOrValue<BigNumberish>,
        overrides?: CallOverrides
    ): Promise<
        [BigNumber, BigNumber] & {
            gasLimit: BigNumber
            nativeDropGasLimit: BigNumber
        }
    >

    getPassengerHash(
        _dstEid: PromiseOrValue<BigNumberish>,
        _index: PromiseOrValue<BigNumberish>,
        overrides?: CallOverrides
    ): Promise<string>

    getTransferGasLimit(overrides?: CallOverrides): Promise<BigNumber>

    initializeBusQueueStorage(
        _dstEids: PromiseOrValue<BigNumberish>[],
        _startSlot: PromiseOrValue<BigNumberish>,
        _endSlot: PromiseOrValue<BigNumberish>,
        overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>

    isComposeMsgSender(
        arg0: OriginStruct,
        _message: PromiseOrValue<BytesLike>,
        _sender: PromiseOrValue<string>,
        overrides?: CallOverrides
    ): Promise<boolean>

    isPeer(
        _eid: PromiseOrValue<BigNumberish>,
        _peer: PromiseOrValue<BytesLike>,
        overrides?: CallOverrides
    ): Promise<boolean>

    lzReceive(
        _origin: OriginStruct,
        _guid: PromiseOrValue<BytesLike>,
        _message: PromiseOrValue<BytesLike>,
        _executor: PromiseOrValue<string>,
        _extraData: PromiseOrValue<BytesLike>,
        overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>

    lzReceiveAndRevert(
        _packets: InboundPacketStruct[],
        overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>

    lzReceiveSimulate(
        _origin: OriginStruct,
        _guid: PromiseOrValue<BytesLike>,
        _message: PromiseOrValue<BytesLike>,
        _executor: PromiseOrValue<string>,
        _extraData: PromiseOrValue<BytesLike>,
        overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>

    maxAssetId(overrides?: CallOverrides): Promise<number>

    nativeDropAmounts(dstEid: PromiseOrValue<BigNumberish>, overrides?: CallOverrides): Promise<BigNumber>

    nextNonce(
        arg0: PromiseOrValue<BigNumberish>,
        arg1: PromiseOrValue<BytesLike>,
        overrides?: CallOverrides
    ): Promise<BigNumber>

    oApp(overrides?: CallOverrides): Promise<string>

    oAppVersion(overrides?: CallOverrides): Promise<
        [BigNumber, BigNumber] & {
            senderVersion: BigNumber
            receiverVersion: BigNumber
        }
    >

    owner(overrides?: CallOverrides): Promise<string>

    peers(eid: PromiseOrValue<BigNumberish>, overrides?: CallOverrides): Promise<string>

    planner(overrides?: CallOverrides): Promise<string>

    preCrime(overrides?: CallOverrides): Promise<string>

    queueCapacity(overrides?: CallOverrides): Promise<number>

    quoteDriveBus(
        _dstEid: PromiseOrValue<BigNumberish>,
        _passengers: PromiseOrValue<BytesLike>,
        overrides?: CallOverrides
    ): Promise<MessagingFeeStructOutput>

    quoteFares(
        _dstEid: PromiseOrValue<BigNumberish>,
        _numPassengers: PromiseOrValue<BigNumberish>,
        overrides?: CallOverrides
    ): Promise<
        [BigNumber, BigNumber] & {
            busFare: BigNumber
            busAndNativeDropFare: BigNumber
        }
    >

    quoteRideBus(
        _dstEid: PromiseOrValue<BigNumberish>,
        _airdrop: PromiseOrValue<boolean>,
        overrides?: CallOverrides
    ): Promise<MessagingFeeStructOutput>

    quoteTaxi(
        _params: TaxiParamsStruct,
        _payInLzToken: PromiseOrValue<boolean>,
        overrides?: CallOverrides
    ): Promise<MessagingFeeStructOutput>

    renounceOwnership(overrides?: Overrides & { from?: PromiseOrValue<string> }): Promise<ContractTransaction>

    rideBus(
        _params: RideBusParamsStruct,
        overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>

    setAssetId(
        _stargateImpl: PromiseOrValue<string>,
        _assetId: PromiseOrValue<BigNumberish>,
        overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>

    setDelegate(
        _delegate: PromiseOrValue<string>,
        overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>

    setEnforcedOptions(
        _enforcedOptions: EnforcedOptionParamStruct[],
        overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>

    setFares(
        _dstEid: PromiseOrValue<BigNumberish>,
        _busFare: PromiseOrValue<BigNumberish>,
        _busAndNativeDropFare: PromiseOrValue<BigNumberish>,
        overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>

    setGasLimit(
        _eid: PromiseOrValue<BigNumberish>,
        _gasLimit: PromiseOrValue<BigNumberish>,
        _nativeDropGasLimit: PromiseOrValue<BigNumberish>,
        overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>

    setMaxAssetId(
        _maxAssetId: PromiseOrValue<BigNumberish>,
        overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>

    setMaxNumPassengers(
        _dstEid: PromiseOrValue<BigNumberish>,
        _maxNumPassengers: PromiseOrValue<BigNumberish>,
        overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>

    setNativeDropAmount(
        _dstEid: PromiseOrValue<BigNumberish>,
        _nativeDropAmount: PromiseOrValue<BigNumberish>,
        overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>

    setPeer(
        _eid: PromiseOrValue<BigNumberish>,
        _peer: PromiseOrValue<BytesLike>,
        overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>

    setPlanner(
        _planner: PromiseOrValue<string>,
        overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>

    setPreCrime(
        _preCrime: PromiseOrValue<string>,
        overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>

    setTransferGasLimit(
        _gasLimit: PromiseOrValue<BigNumberish>,
        overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>

    stargateImpls(assetId: PromiseOrValue<BigNumberish>, overrides?: CallOverrides): Promise<string>

    taxi(
        _params: TaxiParamsStruct,
        _messagingFee: MessagingFeeStruct,
        _refundAddress: PromiseOrValue<string>,
        overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>

    transferOwnership(
        newOwner: PromiseOrValue<string>,
        overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>

    callStatic: {
        MSG_TYPE_BUS(overrides?: CallOverrides): Promise<number>

        MSG_TYPE_TAXI(overrides?: CallOverrides): Promise<number>

        allowInitializePath(origin: OriginStruct, overrides?: CallOverrides): Promise<boolean>

        assetIds(stargateImpl: PromiseOrValue<string>, overrides?: CallOverrides): Promise<number>

        busQueues(
            dstEid: PromiseOrValue<BigNumberish>,
            overrides?: CallOverrides
        ): Promise<
            [number, BigNumber, BigNumber, number, BigNumber] & {
                maxNumPassengers: number
                busFare: BigNumber
                busAndNativeDropFare: BigNumber
                qLength: number
                nextTicketId: BigNumber
            }
        >

        combineOptions(
            _eid: PromiseOrValue<BigNumberish>,
            _msgType: PromiseOrValue<BigNumberish>,
            _extraOptions: PromiseOrValue<BytesLike>,
            overrides?: CallOverrides
        ): Promise<string>

        driveBus(
            _dstEid: PromiseOrValue<BigNumberish>,
            _passengers: PromiseOrValue<BytesLike>,
            overrides?: CallOverrides
        ): Promise<MessagingReceiptStructOutput>

        endpoint(overrides?: CallOverrides): Promise<string>

        enforcedOptions(
            eid: PromiseOrValue<BigNumberish>,
            msgType: PromiseOrValue<BigNumberish>,
            overrides?: CallOverrides
        ): Promise<string>

        gasLimits(
            eid: PromiseOrValue<BigNumberish>,
            overrides?: CallOverrides
        ): Promise<
            [BigNumber, BigNumber] & {
                gasLimit: BigNumber
                nativeDropGasLimit: BigNumber
            }
        >

        getPassengerHash(
            _dstEid: PromiseOrValue<BigNumberish>,
            _index: PromiseOrValue<BigNumberish>,
            overrides?: CallOverrides
        ): Promise<string>

        getTransferGasLimit(overrides?: CallOverrides): Promise<BigNumber>

        initializeBusQueueStorage(
            _dstEids: PromiseOrValue<BigNumberish>[],
            _startSlot: PromiseOrValue<BigNumberish>,
            _endSlot: PromiseOrValue<BigNumberish>,
            overrides?: CallOverrides
        ): Promise<void>

        isComposeMsgSender(
            arg0: OriginStruct,
            _message: PromiseOrValue<BytesLike>,
            _sender: PromiseOrValue<string>,
            overrides?: CallOverrides
        ): Promise<boolean>

        isPeer(
            _eid: PromiseOrValue<BigNumberish>,
            _peer: PromiseOrValue<BytesLike>,
            overrides?: CallOverrides
        ): Promise<boolean>

        lzReceive(
            _origin: OriginStruct,
            _guid: PromiseOrValue<BytesLike>,
            _message: PromiseOrValue<BytesLike>,
            _executor: PromiseOrValue<string>,
            _extraData: PromiseOrValue<BytesLike>,
            overrides?: CallOverrides
        ): Promise<void>

        lzReceiveAndRevert(_packets: InboundPacketStruct[], overrides?: CallOverrides): Promise<void>

        lzReceiveSimulate(
            _origin: OriginStruct,
            _guid: PromiseOrValue<BytesLike>,
            _message: PromiseOrValue<BytesLike>,
            _executor: PromiseOrValue<string>,
            _extraData: PromiseOrValue<BytesLike>,
            overrides?: CallOverrides
        ): Promise<void>

        maxAssetId(overrides?: CallOverrides): Promise<number>

        nativeDropAmounts(dstEid: PromiseOrValue<BigNumberish>, overrides?: CallOverrides): Promise<BigNumber>

        nextNonce(
            arg0: PromiseOrValue<BigNumberish>,
            arg1: PromiseOrValue<BytesLike>,
            overrides?: CallOverrides
        ): Promise<BigNumber>

        oApp(overrides?: CallOverrides): Promise<string>

        oAppVersion(overrides?: CallOverrides): Promise<
            [BigNumber, BigNumber] & {
                senderVersion: BigNumber
                receiverVersion: BigNumber
            }
        >

        owner(overrides?: CallOverrides): Promise<string>

        peers(eid: PromiseOrValue<BigNumberish>, overrides?: CallOverrides): Promise<string>

        planner(overrides?: CallOverrides): Promise<string>

        preCrime(overrides?: CallOverrides): Promise<string>

        queueCapacity(overrides?: CallOverrides): Promise<number>

        quoteDriveBus(
            _dstEid: PromiseOrValue<BigNumberish>,
            _passengers: PromiseOrValue<BytesLike>,
            overrides?: CallOverrides
        ): Promise<MessagingFeeStructOutput>

        quoteFares(
            _dstEid: PromiseOrValue<BigNumberish>,
            _numPassengers: PromiseOrValue<BigNumberish>,
            overrides?: CallOverrides
        ): Promise<
            [BigNumber, BigNumber] & {
                busFare: BigNumber
                busAndNativeDropFare: BigNumber
            }
        >

        quoteRideBus(
            _dstEid: PromiseOrValue<BigNumberish>,
            _airdrop: PromiseOrValue<boolean>,
            overrides?: CallOverrides
        ): Promise<MessagingFeeStructOutput>

        quoteTaxi(
            _params: TaxiParamsStruct,
            _payInLzToken: PromiseOrValue<boolean>,
            overrides?: CallOverrides
        ): Promise<MessagingFeeStructOutput>

        renounceOwnership(overrides?: CallOverrides): Promise<void>

        rideBus(
            _params: RideBusParamsStruct,
            overrides?: CallOverrides
        ): Promise<
            [MessagingReceiptStructOutput, TicketStructOutput] & {
                receipt: MessagingReceiptStructOutput
                ticket: TicketStructOutput
            }
        >

        setAssetId(
            _stargateImpl: PromiseOrValue<string>,
            _assetId: PromiseOrValue<BigNumberish>,
            overrides?: CallOverrides
        ): Promise<void>

        setDelegate(_delegate: PromiseOrValue<string>, overrides?: CallOverrides): Promise<void>

        setEnforcedOptions(_enforcedOptions: EnforcedOptionParamStruct[], overrides?: CallOverrides): Promise<void>

        setFares(
            _dstEid: PromiseOrValue<BigNumberish>,
            _busFare: PromiseOrValue<BigNumberish>,
            _busAndNativeDropFare: PromiseOrValue<BigNumberish>,
            overrides?: CallOverrides
        ): Promise<void>

        setGasLimit(
            _eid: PromiseOrValue<BigNumberish>,
            _gasLimit: PromiseOrValue<BigNumberish>,
            _nativeDropGasLimit: PromiseOrValue<BigNumberish>,
            overrides?: CallOverrides
        ): Promise<void>

        setMaxAssetId(_maxAssetId: PromiseOrValue<BigNumberish>, overrides?: CallOverrides): Promise<void>

        setMaxNumPassengers(
            _dstEid: PromiseOrValue<BigNumberish>,
            _maxNumPassengers: PromiseOrValue<BigNumberish>,
            overrides?: CallOverrides
        ): Promise<void>

        setNativeDropAmount(
            _dstEid: PromiseOrValue<BigNumberish>,
            _nativeDropAmount: PromiseOrValue<BigNumberish>,
            overrides?: CallOverrides
        ): Promise<void>

        setPeer(
            _eid: PromiseOrValue<BigNumberish>,
            _peer: PromiseOrValue<BytesLike>,
            overrides?: CallOverrides
        ): Promise<void>

        setPlanner(_planner: PromiseOrValue<string>, overrides?: CallOverrides): Promise<void>

        setPreCrime(_preCrime: PromiseOrValue<string>, overrides?: CallOverrides): Promise<void>

        setTransferGasLimit(_gasLimit: PromiseOrValue<BigNumberish>, overrides?: CallOverrides): Promise<void>

        stargateImpls(assetId: PromiseOrValue<BigNumberish>, overrides?: CallOverrides): Promise<string>

        taxi(
            _params: TaxiParamsStruct,
            _messagingFee: MessagingFeeStruct,
            _refundAddress: PromiseOrValue<string>,
            overrides?: CallOverrides
        ): Promise<MessagingReceiptStructOutput>

        transferOwnership(newOwner: PromiseOrValue<string>, overrides?: CallOverrides): Promise<void>
    }

    filters: {
        'AssetIdSet(address,uint16)'(stargateImpl?: null, assetId?: null): AssetIdSetEventFilter
        AssetIdSet(stargateImpl?: null, assetId?: null): AssetIdSetEventFilter

        'BusDriven(uint32,uint72,uint8,bytes32)'(
            dstEid?: null,
            startTicketId?: null,
            numPassengers?: null,
            guid?: null
        ): BusDrivenEventFilter
        BusDriven(dstEid?: null, startTicketId?: null, numPassengers?: null, guid?: null): BusDrivenEventFilter

        'BusQueueStorageInitialized(uint32,uint16,uint16)'(
            dstEid?: null,
            startSlot?: null,
            endSlot?: null
        ): BusQueueStorageInitializedEventFilter
        BusQueueStorageInitialized(
            dstEid?: null,
            startSlot?: null,
            endSlot?: null
        ): BusQueueStorageInitializedEventFilter

        'BusRode(uint32,uint72,uint80,bytes)'(
            dstEid?: null,
            ticketId?: null,
            fare?: null,
            passenger?: null
        ): BusRodeEventFilter
        BusRode(dstEid?: null, ticketId?: null, fare?: null, passenger?: null): BusRodeEventFilter

        'EnforcedOptionSet(tuple[])'(_enforcedOptions?: null): EnforcedOptionSetEventFilter
        EnforcedOptionSet(_enforcedOptions?: null): EnforcedOptionSetEventFilter

        'FaresSet(uint32,uint80,uint80)'(
            dstEid?: null,
            busFare?: null,
            busAndNativeDropFare?: null
        ): FaresSetEventFilter
        FaresSet(dstEid?: null, busFare?: null, busAndNativeDropFare?: null): FaresSetEventFilter

        'GasLimitSet(uint32,uint128,uint128)'(
            eid?: null,
            gasLimit?: null,
            nativeDropGasLimit?: null
        ): GasLimitSetEventFilter
        GasLimitSet(eid?: null, gasLimit?: null, nativeDropGasLimit?: null): GasLimitSetEventFilter

        'MaxAssetIdSet(uint16)'(maxAssetId?: null): MaxAssetIdSetEventFilter
        MaxAssetIdSet(maxAssetId?: null): MaxAssetIdSetEventFilter

        'MaxNumPassengersSet(uint32,uint8)'(dstEid?: null, maxNumPassengers?: null): MaxNumPassengersSetEventFilter
        MaxNumPassengersSet(dstEid?: null, maxNumPassengers?: null): MaxNumPassengersSetEventFilter

        'NativeDropAmountSet(uint32,uint128)'(dstEid?: null, nativeDropAmount?: null): NativeDropAmountSetEventFilter
        NativeDropAmountSet(dstEid?: null, nativeDropAmount?: null): NativeDropAmountSetEventFilter

        'NativeDropApplied(address,uint128)'(receiver?: null, amount?: null): NativeDropAppliedEventFilter
        NativeDropApplied(receiver?: null, amount?: null): NativeDropAppliedEventFilter

        'NativeDropFailed(address,uint128)'(receiver?: null, amount?: null): NativeDropFailedEventFilter
        NativeDropFailed(receiver?: null, amount?: null): NativeDropFailedEventFilter

        'OwnershipTransferred(address,address)'(
            previousOwner?: PromiseOrValue<string> | null,
            newOwner?: PromiseOrValue<string> | null
        ): OwnershipTransferredEventFilter
        OwnershipTransferred(
            previousOwner?: PromiseOrValue<string> | null,
            newOwner?: PromiseOrValue<string> | null
        ): OwnershipTransferredEventFilter

        'PeerSet(uint32,bytes32)'(eid?: null, peer?: null): PeerSetEventFilter
        PeerSet(eid?: null, peer?: null): PeerSetEventFilter

        'PlannerSet(address)'(planner?: null): PlannerSetEventFilter
        PlannerSet(planner?: null): PlannerSetEventFilter

        'PreCrimeSet(address)'(preCrimeAddress?: null): PreCrimeSetEventFilter
        PreCrimeSet(preCrimeAddress?: null): PreCrimeSetEventFilter
    }

    estimateGas: {
        MSG_TYPE_BUS(overrides?: CallOverrides): Promise<BigNumber>

        MSG_TYPE_TAXI(overrides?: CallOverrides): Promise<BigNumber>

        allowInitializePath(origin: OriginStruct, overrides?: CallOverrides): Promise<BigNumber>

        assetIds(stargateImpl: PromiseOrValue<string>, overrides?: CallOverrides): Promise<BigNumber>

        busQueues(dstEid: PromiseOrValue<BigNumberish>, overrides?: CallOverrides): Promise<BigNumber>

        combineOptions(
            _eid: PromiseOrValue<BigNumberish>,
            _msgType: PromiseOrValue<BigNumberish>,
            _extraOptions: PromiseOrValue<BytesLike>,
            overrides?: CallOverrides
        ): Promise<BigNumber>

        driveBus(
            _dstEid: PromiseOrValue<BigNumberish>,
            _passengers: PromiseOrValue<BytesLike>,
            overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
        ): Promise<BigNumber>

        endpoint(overrides?: CallOverrides): Promise<BigNumber>

        enforcedOptions(
            eid: PromiseOrValue<BigNumberish>,
            msgType: PromiseOrValue<BigNumberish>,
            overrides?: CallOverrides
        ): Promise<BigNumber>

        gasLimits(eid: PromiseOrValue<BigNumberish>, overrides?: CallOverrides): Promise<BigNumber>

        getPassengerHash(
            _dstEid: PromiseOrValue<BigNumberish>,
            _index: PromiseOrValue<BigNumberish>,
            overrides?: CallOverrides
        ): Promise<BigNumber>

        getTransferGasLimit(overrides?: CallOverrides): Promise<BigNumber>

        initializeBusQueueStorage(
            _dstEids: PromiseOrValue<BigNumberish>[],
            _startSlot: PromiseOrValue<BigNumberish>,
            _endSlot: PromiseOrValue<BigNumberish>,
            overrides?: Overrides & { from?: PromiseOrValue<string> }
        ): Promise<BigNumber>

        isComposeMsgSender(
            arg0: OriginStruct,
            _message: PromiseOrValue<BytesLike>,
            _sender: PromiseOrValue<string>,
            overrides?: CallOverrides
        ): Promise<BigNumber>

        isPeer(
            _eid: PromiseOrValue<BigNumberish>,
            _peer: PromiseOrValue<BytesLike>,
            overrides?: CallOverrides
        ): Promise<BigNumber>

        lzReceive(
            _origin: OriginStruct,
            _guid: PromiseOrValue<BytesLike>,
            _message: PromiseOrValue<BytesLike>,
            _executor: PromiseOrValue<string>,
            _extraData: PromiseOrValue<BytesLike>,
            overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
        ): Promise<BigNumber>

        lzReceiveAndRevert(
            _packets: InboundPacketStruct[],
            overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
        ): Promise<BigNumber>

        lzReceiveSimulate(
            _origin: OriginStruct,
            _guid: PromiseOrValue<BytesLike>,
            _message: PromiseOrValue<BytesLike>,
            _executor: PromiseOrValue<string>,
            _extraData: PromiseOrValue<BytesLike>,
            overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
        ): Promise<BigNumber>

        maxAssetId(overrides?: CallOverrides): Promise<BigNumber>

        nativeDropAmounts(dstEid: PromiseOrValue<BigNumberish>, overrides?: CallOverrides): Promise<BigNumber>

        nextNonce(
            arg0: PromiseOrValue<BigNumberish>,
            arg1: PromiseOrValue<BytesLike>,
            overrides?: CallOverrides
        ): Promise<BigNumber>

        oApp(overrides?: CallOverrides): Promise<BigNumber>

        oAppVersion(overrides?: CallOverrides): Promise<BigNumber>

        owner(overrides?: CallOverrides): Promise<BigNumber>

        peers(eid: PromiseOrValue<BigNumberish>, overrides?: CallOverrides): Promise<BigNumber>

        planner(overrides?: CallOverrides): Promise<BigNumber>

        preCrime(overrides?: CallOverrides): Promise<BigNumber>

        queueCapacity(overrides?: CallOverrides): Promise<BigNumber>

        quoteDriveBus(
            _dstEid: PromiseOrValue<BigNumberish>,
            _passengers: PromiseOrValue<BytesLike>,
            overrides?: CallOverrides
        ): Promise<BigNumber>

        quoteFares(
            _dstEid: PromiseOrValue<BigNumberish>,
            _numPassengers: PromiseOrValue<BigNumberish>,
            overrides?: CallOverrides
        ): Promise<BigNumber>

        quoteRideBus(
            _dstEid: PromiseOrValue<BigNumberish>,
            _airdrop: PromiseOrValue<boolean>,
            overrides?: CallOverrides
        ): Promise<BigNumber>

        quoteTaxi(
            _params: TaxiParamsStruct,
            _payInLzToken: PromiseOrValue<boolean>,
            overrides?: CallOverrides
        ): Promise<BigNumber>

        renounceOwnership(overrides?: Overrides & { from?: PromiseOrValue<string> }): Promise<BigNumber>

        rideBus(
            _params: RideBusParamsStruct,
            overrides?: Overrides & { from?: PromiseOrValue<string> }
        ): Promise<BigNumber>

        setAssetId(
            _stargateImpl: PromiseOrValue<string>,
            _assetId: PromiseOrValue<BigNumberish>,
            overrides?: Overrides & { from?: PromiseOrValue<string> }
        ): Promise<BigNumber>

        setDelegate(
            _delegate: PromiseOrValue<string>,
            overrides?: Overrides & { from?: PromiseOrValue<string> }
        ): Promise<BigNumber>

        setEnforcedOptions(
            _enforcedOptions: EnforcedOptionParamStruct[],
            overrides?: Overrides & { from?: PromiseOrValue<string> }
        ): Promise<BigNumber>

        setFares(
            _dstEid: PromiseOrValue<BigNumberish>,
            _busFare: PromiseOrValue<BigNumberish>,
            _busAndNativeDropFare: PromiseOrValue<BigNumberish>,
            overrides?: Overrides & { from?: PromiseOrValue<string> }
        ): Promise<BigNumber>

        setGasLimit(
            _eid: PromiseOrValue<BigNumberish>,
            _gasLimit: PromiseOrValue<BigNumberish>,
            _nativeDropGasLimit: PromiseOrValue<BigNumberish>,
            overrides?: Overrides & { from?: PromiseOrValue<string> }
        ): Promise<BigNumber>

        setMaxAssetId(
            _maxAssetId: PromiseOrValue<BigNumberish>,
            overrides?: Overrides & { from?: PromiseOrValue<string> }
        ): Promise<BigNumber>

        setMaxNumPassengers(
            _dstEid: PromiseOrValue<BigNumberish>,
            _maxNumPassengers: PromiseOrValue<BigNumberish>,
            overrides?: Overrides & { from?: PromiseOrValue<string> }
        ): Promise<BigNumber>

        setNativeDropAmount(
            _dstEid: PromiseOrValue<BigNumberish>,
            _nativeDropAmount: PromiseOrValue<BigNumberish>,
            overrides?: Overrides & { from?: PromiseOrValue<string> }
        ): Promise<BigNumber>

        setPeer(
            _eid: PromiseOrValue<BigNumberish>,
            _peer: PromiseOrValue<BytesLike>,
            overrides?: Overrides & { from?: PromiseOrValue<string> }
        ): Promise<BigNumber>

        setPlanner(
            _planner: PromiseOrValue<string>,
            overrides?: Overrides & { from?: PromiseOrValue<string> }
        ): Promise<BigNumber>

        setPreCrime(
            _preCrime: PromiseOrValue<string>,
            overrides?: Overrides & { from?: PromiseOrValue<string> }
        ): Promise<BigNumber>

        setTransferGasLimit(
            _gasLimit: PromiseOrValue<BigNumberish>,
            overrides?: Overrides & { from?: PromiseOrValue<string> }
        ): Promise<BigNumber>

        stargateImpls(assetId: PromiseOrValue<BigNumberish>, overrides?: CallOverrides): Promise<BigNumber>

        taxi(
            _params: TaxiParamsStruct,
            _messagingFee: MessagingFeeStruct,
            _refundAddress: PromiseOrValue<string>,
            overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
        ): Promise<BigNumber>

        transferOwnership(
            newOwner: PromiseOrValue<string>,
            overrides?: Overrides & { from?: PromiseOrValue<string> }
        ): Promise<BigNumber>
    }

    populateTransaction: {
        MSG_TYPE_BUS(overrides?: CallOverrides): Promise<PopulatedTransaction>

        MSG_TYPE_TAXI(overrides?: CallOverrides): Promise<PopulatedTransaction>

        allowInitializePath(origin: OriginStruct, overrides?: CallOverrides): Promise<PopulatedTransaction>

        assetIds(stargateImpl: PromiseOrValue<string>, overrides?: CallOverrides): Promise<PopulatedTransaction>

        busQueues(dstEid: PromiseOrValue<BigNumberish>, overrides?: CallOverrides): Promise<PopulatedTransaction>

        combineOptions(
            _eid: PromiseOrValue<BigNumberish>,
            _msgType: PromiseOrValue<BigNumberish>,
            _extraOptions: PromiseOrValue<BytesLike>,
            overrides?: CallOverrides
        ): Promise<PopulatedTransaction>

        driveBus(
            _dstEid: PromiseOrValue<BigNumberish>,
            _passengers: PromiseOrValue<BytesLike>,
            overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
        ): Promise<PopulatedTransaction>

        endpoint(overrides?: CallOverrides): Promise<PopulatedTransaction>

        enforcedOptions(
            eid: PromiseOrValue<BigNumberish>,
            msgType: PromiseOrValue<BigNumberish>,
            overrides?: CallOverrides
        ): Promise<PopulatedTransaction>

        gasLimits(eid: PromiseOrValue<BigNumberish>, overrides?: CallOverrides): Promise<PopulatedTransaction>

        getPassengerHash(
            _dstEid: PromiseOrValue<BigNumberish>,
            _index: PromiseOrValue<BigNumberish>,
            overrides?: CallOverrides
        ): Promise<PopulatedTransaction>

        getTransferGasLimit(overrides?: CallOverrides): Promise<PopulatedTransaction>

        initializeBusQueueStorage(
            _dstEids: PromiseOrValue<BigNumberish>[],
            _startSlot: PromiseOrValue<BigNumberish>,
            _endSlot: PromiseOrValue<BigNumberish>,
            overrides?: Overrides & { from?: PromiseOrValue<string> }
        ): Promise<PopulatedTransaction>

        isComposeMsgSender(
            arg0: OriginStruct,
            _message: PromiseOrValue<BytesLike>,
            _sender: PromiseOrValue<string>,
            overrides?: CallOverrides
        ): Promise<PopulatedTransaction>

        isPeer(
            _eid: PromiseOrValue<BigNumberish>,
            _peer: PromiseOrValue<BytesLike>,
            overrides?: CallOverrides
        ): Promise<PopulatedTransaction>

        lzReceive(
            _origin: OriginStruct,
            _guid: PromiseOrValue<BytesLike>,
            _message: PromiseOrValue<BytesLike>,
            _executor: PromiseOrValue<string>,
            _extraData: PromiseOrValue<BytesLike>,
            overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
        ): Promise<PopulatedTransaction>

        lzReceiveAndRevert(
            _packets: InboundPacketStruct[],
            overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
        ): Promise<PopulatedTransaction>

        lzReceiveSimulate(
            _origin: OriginStruct,
            _guid: PromiseOrValue<BytesLike>,
            _message: PromiseOrValue<BytesLike>,
            _executor: PromiseOrValue<string>,
            _extraData: PromiseOrValue<BytesLike>,
            overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
        ): Promise<PopulatedTransaction>

        maxAssetId(overrides?: CallOverrides): Promise<PopulatedTransaction>

        nativeDropAmounts(
            dstEid: PromiseOrValue<BigNumberish>,
            overrides?: CallOverrides
        ): Promise<PopulatedTransaction>

        nextNonce(
            arg0: PromiseOrValue<BigNumberish>,
            arg1: PromiseOrValue<BytesLike>,
            overrides?: CallOverrides
        ): Promise<PopulatedTransaction>

        oApp(overrides?: CallOverrides): Promise<PopulatedTransaction>

        oAppVersion(overrides?: CallOverrides): Promise<PopulatedTransaction>

        owner(overrides?: CallOverrides): Promise<PopulatedTransaction>

        peers(eid: PromiseOrValue<BigNumberish>, overrides?: CallOverrides): Promise<PopulatedTransaction>

        planner(overrides?: CallOverrides): Promise<PopulatedTransaction>

        preCrime(overrides?: CallOverrides): Promise<PopulatedTransaction>

        queueCapacity(overrides?: CallOverrides): Promise<PopulatedTransaction>

        quoteDriveBus(
            _dstEid: PromiseOrValue<BigNumberish>,
            _passengers: PromiseOrValue<BytesLike>,
            overrides?: CallOverrides
        ): Promise<PopulatedTransaction>

        quoteFares(
            _dstEid: PromiseOrValue<BigNumberish>,
            _numPassengers: PromiseOrValue<BigNumberish>,
            overrides?: CallOverrides
        ): Promise<PopulatedTransaction>

        quoteRideBus(
            _dstEid: PromiseOrValue<BigNumberish>,
            _airdrop: PromiseOrValue<boolean>,
            overrides?: CallOverrides
        ): Promise<PopulatedTransaction>

        quoteTaxi(
            _params: TaxiParamsStruct,
            _payInLzToken: PromiseOrValue<boolean>,
            overrides?: CallOverrides
        ): Promise<PopulatedTransaction>

        renounceOwnership(overrides?: Overrides & { from?: PromiseOrValue<string> }): Promise<PopulatedTransaction>

        rideBus(
            _params: RideBusParamsStruct,
            overrides?: Overrides & { from?: PromiseOrValue<string> }
        ): Promise<PopulatedTransaction>

        setAssetId(
            _stargateImpl: PromiseOrValue<string>,
            _assetId: PromiseOrValue<BigNumberish>,
            overrides?: Overrides & { from?: PromiseOrValue<string> }
        ): Promise<PopulatedTransaction>

        setDelegate(
            _delegate: PromiseOrValue<string>,
            overrides?: Overrides & { from?: PromiseOrValue<string> }
        ): Promise<PopulatedTransaction>

        setEnforcedOptions(
            _enforcedOptions: EnforcedOptionParamStruct[],
            overrides?: Overrides & { from?: PromiseOrValue<string> }
        ): Promise<PopulatedTransaction>

        setFares(
            _dstEid: PromiseOrValue<BigNumberish>,
            _busFare: PromiseOrValue<BigNumberish>,
            _busAndNativeDropFare: PromiseOrValue<BigNumberish>,
            overrides?: Overrides & { from?: PromiseOrValue<string> }
        ): Promise<PopulatedTransaction>

        setGasLimit(
            _eid: PromiseOrValue<BigNumberish>,
            _gasLimit: PromiseOrValue<BigNumberish>,
            _nativeDropGasLimit: PromiseOrValue<BigNumberish>,
            overrides?: Overrides & { from?: PromiseOrValue<string> }
        ): Promise<PopulatedTransaction>

        setMaxAssetId(
            _maxAssetId: PromiseOrValue<BigNumberish>,
            overrides?: Overrides & { from?: PromiseOrValue<string> }
        ): Promise<PopulatedTransaction>

        setMaxNumPassengers(
            _dstEid: PromiseOrValue<BigNumberish>,
            _maxNumPassengers: PromiseOrValue<BigNumberish>,
            overrides?: Overrides & { from?: PromiseOrValue<string> }
        ): Promise<PopulatedTransaction>

        setNativeDropAmount(
            _dstEid: PromiseOrValue<BigNumberish>,
            _nativeDropAmount: PromiseOrValue<BigNumberish>,
            overrides?: Overrides & { from?: PromiseOrValue<string> }
        ): Promise<PopulatedTransaction>

        setPeer(
            _eid: PromiseOrValue<BigNumberish>,
            _peer: PromiseOrValue<BytesLike>,
            overrides?: Overrides & { from?: PromiseOrValue<string> }
        ): Promise<PopulatedTransaction>

        setPlanner(
            _planner: PromiseOrValue<string>,
            overrides?: Overrides & { from?: PromiseOrValue<string> }
        ): Promise<PopulatedTransaction>

        setPreCrime(
            _preCrime: PromiseOrValue<string>,
            overrides?: Overrides & { from?: PromiseOrValue<string> }
        ): Promise<PopulatedTransaction>

        setTransferGasLimit(
            _gasLimit: PromiseOrValue<BigNumberish>,
            overrides?: Overrides & { from?: PromiseOrValue<string> }
        ): Promise<PopulatedTransaction>

        stargateImpls(assetId: PromiseOrValue<BigNumberish>, overrides?: CallOverrides): Promise<PopulatedTransaction>

        taxi(
            _params: TaxiParamsStruct,
            _messagingFee: MessagingFeeStruct,
            _refundAddress: PromiseOrValue<string>,
            overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
        ): Promise<PopulatedTransaction>

        transferOwnership(
            newOwner: PromiseOrValue<string>,
            overrides?: Overrides & { from?: PromiseOrValue<string> }
        ): Promise<PopulatedTransaction>
    }
}
