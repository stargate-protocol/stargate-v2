/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
    BaseContract,
    BigNumber,
    BigNumberish,
    BytesLike,
    CallOverrides,
    ContractTransaction,
    Overrides,
    PopulatedTransaction,
    Signer,
    utils,
} from 'ethers'
import type { FunctionFragment, Result, EventFragment } from '@ethersproject/abi'
import type { Listener, Provider } from '@ethersproject/providers'
import type { TypedEventFilter, TypedEvent, TypedListener, OnEvent, PromiseOrValue } from '../common'

export interface TreasurerInterface extends utils.Interface {
    functions: {
        'addTreasuryFee(address,uint256)': FunctionFragment
        'admin()': FunctionFragment
        'getTransferGasLimit()': FunctionFragment
        'owner()': FunctionFragment
        'recoverToken(address,address,uint256)': FunctionFragment
        'renounceOwnership()': FunctionFragment
        'setAdmin(address)': FunctionFragment
        'setStargate(address,bool)': FunctionFragment
        'setTransferGasLimit(uint256)': FunctionFragment
        'stargates(address)': FunctionFragment
        'transfer(address,address,uint256)': FunctionFragment
        'transferOwnership(address)': FunctionFragment
        'withdrawTreasuryFee(address,uint64)': FunctionFragment
    }

    getFunction(
        nameOrSignatureOrTopic:
            | 'addTreasuryFee'
            | 'admin'
            | 'getTransferGasLimit'
            | 'owner'
            | 'recoverToken'
            | 'renounceOwnership'
            | 'setAdmin'
            | 'setStargate'
            | 'setTransferGasLimit'
            | 'stargates'
            | 'transfer'
            | 'transferOwnership'
            | 'withdrawTreasuryFee'
    ): FunctionFragment

    encodeFunctionData(
        functionFragment: 'addTreasuryFee',
        values: [PromiseOrValue<string>, PromiseOrValue<BigNumberish>]
    ): string
    encodeFunctionData(functionFragment: 'admin', values?: undefined): string
    encodeFunctionData(functionFragment: 'getTransferGasLimit', values?: undefined): string
    encodeFunctionData(functionFragment: 'owner', values?: undefined): string
    encodeFunctionData(
        functionFragment: 'recoverToken',
        values: [PromiseOrValue<string>, PromiseOrValue<string>, PromiseOrValue<BigNumberish>]
    ): string
    encodeFunctionData(functionFragment: 'renounceOwnership', values?: undefined): string
    encodeFunctionData(functionFragment: 'setAdmin', values: [PromiseOrValue<string>]): string
    encodeFunctionData(
        functionFragment: 'setStargate',
        values: [PromiseOrValue<string>, PromiseOrValue<boolean>]
    ): string
    encodeFunctionData(functionFragment: 'setTransferGasLimit', values: [PromiseOrValue<BigNumberish>]): string
    encodeFunctionData(functionFragment: 'stargates', values: [PromiseOrValue<string>]): string
    encodeFunctionData(
        functionFragment: 'transfer',
        values: [PromiseOrValue<string>, PromiseOrValue<string>, PromiseOrValue<BigNumberish>]
    ): string
    encodeFunctionData(functionFragment: 'transferOwnership', values: [PromiseOrValue<string>]): string
    encodeFunctionData(
        functionFragment: 'withdrawTreasuryFee',
        values: [PromiseOrValue<string>, PromiseOrValue<BigNumberish>]
    ): string

    decodeFunctionResult(functionFragment: 'addTreasuryFee', data: BytesLike): Result
    decodeFunctionResult(functionFragment: 'admin', data: BytesLike): Result
    decodeFunctionResult(functionFragment: 'getTransferGasLimit', data: BytesLike): Result
    decodeFunctionResult(functionFragment: 'owner', data: BytesLike): Result
    decodeFunctionResult(functionFragment: 'recoverToken', data: BytesLike): Result
    decodeFunctionResult(functionFragment: 'renounceOwnership', data: BytesLike): Result
    decodeFunctionResult(functionFragment: 'setAdmin', data: BytesLike): Result
    decodeFunctionResult(functionFragment: 'setStargate', data: BytesLike): Result
    decodeFunctionResult(functionFragment: 'setTransferGasLimit', data: BytesLike): Result
    decodeFunctionResult(functionFragment: 'stargates', data: BytesLike): Result
    decodeFunctionResult(functionFragment: 'transfer', data: BytesLike): Result
    decodeFunctionResult(functionFragment: 'transferOwnership', data: BytesLike): Result
    decodeFunctionResult(functionFragment: 'withdrawTreasuryFee', data: BytesLike): Result

    events: {
        'OwnershipTransferred(address,address)': EventFragment
    }

    getEvent(nameOrSignatureOrTopic: 'OwnershipTransferred'): EventFragment
}

export interface OwnershipTransferredEventObject {
    previousOwner: string
    newOwner: string
}
export type OwnershipTransferredEvent = TypedEvent<[string, string], OwnershipTransferredEventObject>

export type OwnershipTransferredEventFilter = TypedEventFilter<OwnershipTransferredEvent>

export interface Treasurer extends BaseContract {
    connect(signerOrProvider: Signer | Provider | string): this
    attach(addressOrName: string): this
    deployed(): Promise<this>

    interface: TreasurerInterface

    queryFilter<TEvent extends TypedEvent>(
        event: TypedEventFilter<TEvent>,
        fromBlockOrBlockhash?: string | number | undefined,
        toBlock?: string | number | undefined
    ): Promise<Array<TEvent>>

    listeners<TEvent extends TypedEvent>(eventFilter?: TypedEventFilter<TEvent>): Array<TypedListener<TEvent>>
    listeners(eventName?: string): Array<Listener>
    removeAllListeners<TEvent extends TypedEvent>(eventFilter: TypedEventFilter<TEvent>): this
    removeAllListeners(eventName?: string): this
    off: OnEvent<this>
    on: OnEvent<this>
    once: OnEvent<this>
    removeListener: OnEvent<this>

    functions: {
        addTreasuryFee(
            _stargate: PromiseOrValue<string>,
            _amountLD: PromiseOrValue<BigNumberish>,
            overrides?: Overrides & { from?: PromiseOrValue<string> }
        ): Promise<ContractTransaction>

        admin(overrides?: CallOverrides): Promise<[string]>

        getTransferGasLimit(overrides?: CallOverrides): Promise<[BigNumber]>

        owner(overrides?: CallOverrides): Promise<[string]>

        recoverToken(
            _stargate: PromiseOrValue<string>,
            _token: PromiseOrValue<string>,
            _amount: PromiseOrValue<BigNumberish>,
            overrides?: Overrides & { from?: PromiseOrValue<string> }
        ): Promise<ContractTransaction>

        renounceOwnership(overrides?: Overrides & { from?: PromiseOrValue<string> }): Promise<ContractTransaction>

        setAdmin(
            _admin: PromiseOrValue<string>,
            overrides?: Overrides & { from?: PromiseOrValue<string> }
        ): Promise<ContractTransaction>

        setStargate(
            _stargate: PromiseOrValue<string>,
            _value: PromiseOrValue<boolean>,
            overrides?: Overrides & { from?: PromiseOrValue<string> }
        ): Promise<ContractTransaction>

        setTransferGasLimit(
            _gasLimit: PromiseOrValue<BigNumberish>,
            overrides?: Overrides & { from?: PromiseOrValue<string> }
        ): Promise<ContractTransaction>

        stargates(arg0: PromiseOrValue<string>, overrides?: CallOverrides): Promise<[boolean]>

        transfer(
            _token: PromiseOrValue<string>,
            _to: PromiseOrValue<string>,
            _amount: PromiseOrValue<BigNumberish>,
            overrides?: Overrides & { from?: PromiseOrValue<string> }
        ): Promise<ContractTransaction>

        transferOwnership(
            newOwner: PromiseOrValue<string>,
            overrides?: Overrides & { from?: PromiseOrValue<string> }
        ): Promise<ContractTransaction>

        withdrawTreasuryFee(
            _stargate: PromiseOrValue<string>,
            _amountSD: PromiseOrValue<BigNumberish>,
            overrides?: Overrides & { from?: PromiseOrValue<string> }
        ): Promise<ContractTransaction>
    }

    addTreasuryFee(
        _stargate: PromiseOrValue<string>,
        _amountLD: PromiseOrValue<BigNumberish>,
        overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>

    admin(overrides?: CallOverrides): Promise<string>

    getTransferGasLimit(overrides?: CallOverrides): Promise<BigNumber>

    owner(overrides?: CallOverrides): Promise<string>

    recoverToken(
        _stargate: PromiseOrValue<string>,
        _token: PromiseOrValue<string>,
        _amount: PromiseOrValue<BigNumberish>,
        overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>

    renounceOwnership(overrides?: Overrides & { from?: PromiseOrValue<string> }): Promise<ContractTransaction>

    setAdmin(
        _admin: PromiseOrValue<string>,
        overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>

    setStargate(
        _stargate: PromiseOrValue<string>,
        _value: PromiseOrValue<boolean>,
        overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>

    setTransferGasLimit(
        _gasLimit: PromiseOrValue<BigNumberish>,
        overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>

    stargates(arg0: PromiseOrValue<string>, overrides?: CallOverrides): Promise<boolean>

    transfer(
        _token: PromiseOrValue<string>,
        _to: PromiseOrValue<string>,
        _amount: PromiseOrValue<BigNumberish>,
        overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>

    transferOwnership(
        newOwner: PromiseOrValue<string>,
        overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>

    withdrawTreasuryFee(
        _stargate: PromiseOrValue<string>,
        _amountSD: PromiseOrValue<BigNumberish>,
        overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>

    callStatic: {
        addTreasuryFee(
            _stargate: PromiseOrValue<string>,
            _amountLD: PromiseOrValue<BigNumberish>,
            overrides?: CallOverrides
        ): Promise<void>

        admin(overrides?: CallOverrides): Promise<string>

        getTransferGasLimit(overrides?: CallOverrides): Promise<BigNumber>

        owner(overrides?: CallOverrides): Promise<string>

        recoverToken(
            _stargate: PromiseOrValue<string>,
            _token: PromiseOrValue<string>,
            _amount: PromiseOrValue<BigNumberish>,
            overrides?: CallOverrides
        ): Promise<void>

        renounceOwnership(overrides?: CallOverrides): Promise<void>

        setAdmin(_admin: PromiseOrValue<string>, overrides?: CallOverrides): Promise<void>

        setStargate(
            _stargate: PromiseOrValue<string>,
            _value: PromiseOrValue<boolean>,
            overrides?: CallOverrides
        ): Promise<void>

        setTransferGasLimit(_gasLimit: PromiseOrValue<BigNumberish>, overrides?: CallOverrides): Promise<void>

        stargates(arg0: PromiseOrValue<string>, overrides?: CallOverrides): Promise<boolean>

        transfer(
            _token: PromiseOrValue<string>,
            _to: PromiseOrValue<string>,
            _amount: PromiseOrValue<BigNumberish>,
            overrides?: CallOverrides
        ): Promise<void>

        transferOwnership(newOwner: PromiseOrValue<string>, overrides?: CallOverrides): Promise<void>

        withdrawTreasuryFee(
            _stargate: PromiseOrValue<string>,
            _amountSD: PromiseOrValue<BigNumberish>,
            overrides?: CallOverrides
        ): Promise<void>
    }

    filters: {
        'OwnershipTransferred(address,address)'(
            previousOwner?: PromiseOrValue<string> | null,
            newOwner?: PromiseOrValue<string> | null
        ): OwnershipTransferredEventFilter
        OwnershipTransferred(
            previousOwner?: PromiseOrValue<string> | null,
            newOwner?: PromiseOrValue<string> | null
        ): OwnershipTransferredEventFilter
    }

    estimateGas: {
        addTreasuryFee(
            _stargate: PromiseOrValue<string>,
            _amountLD: PromiseOrValue<BigNumberish>,
            overrides?: Overrides & { from?: PromiseOrValue<string> }
        ): Promise<BigNumber>

        admin(overrides?: CallOverrides): Promise<BigNumber>

        getTransferGasLimit(overrides?: CallOverrides): Promise<BigNumber>

        owner(overrides?: CallOverrides): Promise<BigNumber>

        recoverToken(
            _stargate: PromiseOrValue<string>,
            _token: PromiseOrValue<string>,
            _amount: PromiseOrValue<BigNumberish>,
            overrides?: Overrides & { from?: PromiseOrValue<string> }
        ): Promise<BigNumber>

        renounceOwnership(overrides?: Overrides & { from?: PromiseOrValue<string> }): Promise<BigNumber>

        setAdmin(
            _admin: PromiseOrValue<string>,
            overrides?: Overrides & { from?: PromiseOrValue<string> }
        ): Promise<BigNumber>

        setStargate(
            _stargate: PromiseOrValue<string>,
            _value: PromiseOrValue<boolean>,
            overrides?: Overrides & { from?: PromiseOrValue<string> }
        ): Promise<BigNumber>

        setTransferGasLimit(
            _gasLimit: PromiseOrValue<BigNumberish>,
            overrides?: Overrides & { from?: PromiseOrValue<string> }
        ): Promise<BigNumber>

        stargates(arg0: PromiseOrValue<string>, overrides?: CallOverrides): Promise<BigNumber>

        transfer(
            _token: PromiseOrValue<string>,
            _to: PromiseOrValue<string>,
            _amount: PromiseOrValue<BigNumberish>,
            overrides?: Overrides & { from?: PromiseOrValue<string> }
        ): Promise<BigNumber>

        transferOwnership(
            newOwner: PromiseOrValue<string>,
            overrides?: Overrides & { from?: PromiseOrValue<string> }
        ): Promise<BigNumber>

        withdrawTreasuryFee(
            _stargate: PromiseOrValue<string>,
            _amountSD: PromiseOrValue<BigNumberish>,
            overrides?: Overrides & { from?: PromiseOrValue<string> }
        ): Promise<BigNumber>
    }

    populateTransaction: {
        addTreasuryFee(
            _stargate: PromiseOrValue<string>,
            _amountLD: PromiseOrValue<BigNumberish>,
            overrides?: Overrides & { from?: PromiseOrValue<string> }
        ): Promise<PopulatedTransaction>

        admin(overrides?: CallOverrides): Promise<PopulatedTransaction>

        getTransferGasLimit(overrides?: CallOverrides): Promise<PopulatedTransaction>

        owner(overrides?: CallOverrides): Promise<PopulatedTransaction>

        recoverToken(
            _stargate: PromiseOrValue<string>,
            _token: PromiseOrValue<string>,
            _amount: PromiseOrValue<BigNumberish>,
            overrides?: Overrides & { from?: PromiseOrValue<string> }
        ): Promise<PopulatedTransaction>

        renounceOwnership(overrides?: Overrides & { from?: PromiseOrValue<string> }): Promise<PopulatedTransaction>

        setAdmin(
            _admin: PromiseOrValue<string>,
            overrides?: Overrides & { from?: PromiseOrValue<string> }
        ): Promise<PopulatedTransaction>

        setStargate(
            _stargate: PromiseOrValue<string>,
            _value: PromiseOrValue<boolean>,
            overrides?: Overrides & { from?: PromiseOrValue<string> }
        ): Promise<PopulatedTransaction>

        setTransferGasLimit(
            _gasLimit: PromiseOrValue<BigNumberish>,
            overrides?: Overrides & { from?: PromiseOrValue<string> }
        ): Promise<PopulatedTransaction>

        stargates(arg0: PromiseOrValue<string>, overrides?: CallOverrides): Promise<PopulatedTransaction>

        transfer(
            _token: PromiseOrValue<string>,
            _to: PromiseOrValue<string>,
            _amount: PromiseOrValue<BigNumberish>,
            overrides?: Overrides & { from?: PromiseOrValue<string> }
        ): Promise<PopulatedTransaction>

        transferOwnership(
            newOwner: PromiseOrValue<string>,
            overrides?: Overrides & { from?: PromiseOrValue<string> }
        ): Promise<PopulatedTransaction>

        withdrawTreasuryFee(
            _stargate: PromiseOrValue<string>,
            _amountSD: PromiseOrValue<BigNumberish>,
            overrides?: Overrides & { from?: PromiseOrValue<string> }
        ): Promise<PopulatedTransaction>
    }
}
