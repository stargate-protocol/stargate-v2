/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
    BaseContract,
    BigNumber,
    BigNumberish,
    BytesLike,
    CallOverrides,
    ContractTransaction,
    PayableOverrides,
    PopulatedTransaction,
    Signer,
    utils,
} from 'ethers'
import type { FunctionFragment, Result, EventFragment } from '@ethersproject/abi'
import type { Listener, Provider } from '@ethersproject/providers'
import type { TypedEventFilter, TypedEvent, TypedListener, OnEvent, PromiseOrValue } from '../../../common'

export type SendParamStruct = {
    dstEid: PromiseOrValue<BigNumberish>
    to: PromiseOrValue<BytesLike>
    amountLD: PromiseOrValue<BigNumberish>
    minAmountLD: PromiseOrValue<BigNumberish>
    extraOptions: PromiseOrValue<BytesLike>
    composeMsg: PromiseOrValue<BytesLike>
    oftCmd: PromiseOrValue<BytesLike>
}

export type SendParamStructOutput = [number, string, BigNumber, BigNumber, string, string, string] & {
    dstEid: number
    to: string
    amountLD: BigNumber
    minAmountLD: BigNumber
    extraOptions: string
    composeMsg: string
    oftCmd: string
}

export type MessagingFeeStruct = {
    nativeFee: PromiseOrValue<BigNumberish>
    lzTokenFee: PromiseOrValue<BigNumberish>
}

export type MessagingFeeStructOutput = [BigNumber, BigNumber] & {
    nativeFee: BigNumber
    lzTokenFee: BigNumber
}

export declare namespace IOFTWrapper {
    export type FeeObjStruct = {
        callerBps: PromiseOrValue<BigNumberish>
        caller: PromiseOrValue<string>
        partnerId: PromiseOrValue<BytesLike>
    }

    export type FeeObjStructOutput = [BigNumber, string, string] & {
        callerBps: BigNumber
        caller: string
        partnerId: string
    }
}

export declare namespace ICommonOFT {
    export type LzCallParamsStruct = {
        refundAddress: PromiseOrValue<string>
        zroPaymentAddress: PromiseOrValue<string>
        adapterParams: PromiseOrValue<BytesLike>
    }

    export type LzCallParamsStructOutput = [string, string, string] & {
        refundAddress: string
        zroPaymentAddress: string
        adapterParams: string
    }
}

export interface IOFTWrapperInterface extends utils.Interface {
    functions: {
        'estimateSendFee(address,uint16,bytes,uint256,bool,bytes,(uint256,address,bytes2))': FunctionFragment
        'estimateSendFeeEpv2(address,(uint32,bytes32,uint256,uint256,bytes,bytes,bytes),bool,(uint256,address,bytes2))': FunctionFragment
        'estimateSendFeeV2(address,uint16,bytes32,uint256,bool,bytes,(uint256,address,bytes2))': FunctionFragment
        'getAmountAndFees(address,uint256,uint256)': FunctionFragment
        'sendNativeOFT(address,uint16,bytes,uint256,uint256,address,address,bytes,(uint256,address,bytes2))': FunctionFragment
        'sendNativeOFTFeeV2(address,uint16,bytes32,uint256,uint256,(address,address,bytes),(uint256,address,bytes2))': FunctionFragment
        'sendOFT(address,uint16,bytes,uint256,uint256,address,address,bytes,(uint256,address,bytes2))': FunctionFragment
        'sendOFTAdapterEpv2(address,(uint32,bytes32,uint256,uint256,bytes,bytes,bytes),(uint256,uint256),address,(uint256,address,bytes2))': FunctionFragment
        'sendOFTEpv2(address,(uint32,bytes32,uint256,uint256,bytes,bytes,bytes),(uint256,uint256),address,(uint256,address,bytes2))': FunctionFragment
        'sendOFTFeeV2(address,uint16,bytes32,uint256,uint256,(address,address,bytes),(uint256,address,bytes2))': FunctionFragment
        'sendOFTV2(address,uint16,bytes32,uint256,uint256,(address,address,bytes),(uint256,address,bytes2))': FunctionFragment
        'sendProxyOFT(address,uint16,bytes,uint256,uint256,address,address,bytes,(uint256,address,bytes2))': FunctionFragment
        'sendProxyOFTFeeV2(address,uint16,bytes32,uint256,uint256,(address,address,bytes),(uint256,address,bytes2))': FunctionFragment
        'sendProxyOFTV2(address,uint16,bytes32,uint256,uint256,(address,address,bytes),(uint256,address,bytes2))': FunctionFragment
    }

    getFunction(
        nameOrSignatureOrTopic:
            | 'estimateSendFee'
            | 'estimateSendFeeEpv2'
            | 'estimateSendFeeV2'
            | 'getAmountAndFees'
            | 'sendNativeOFT'
            | 'sendNativeOFTFeeV2'
            | 'sendOFT'
            | 'sendOFTAdapterEpv2'
            | 'sendOFTEpv2'
            | 'sendOFTFeeV2'
            | 'sendOFTV2'
            | 'sendProxyOFT'
            | 'sendProxyOFTFeeV2'
            | 'sendProxyOFTV2'
    ): FunctionFragment

    encodeFunctionData(
        functionFragment: 'estimateSendFee',
        values: [
            PromiseOrValue<string>,
            PromiseOrValue<BigNumberish>,
            PromiseOrValue<BytesLike>,
            PromiseOrValue<BigNumberish>,
            PromiseOrValue<boolean>,
            PromiseOrValue<BytesLike>,
            IOFTWrapper.FeeObjStruct,
        ]
    ): string
    encodeFunctionData(
        functionFragment: 'estimateSendFeeEpv2',
        values: [PromiseOrValue<string>, SendParamStruct, PromiseOrValue<boolean>, IOFTWrapper.FeeObjStruct]
    ): string
    encodeFunctionData(
        functionFragment: 'estimateSendFeeV2',
        values: [
            PromiseOrValue<string>,
            PromiseOrValue<BigNumberish>,
            PromiseOrValue<BytesLike>,
            PromiseOrValue<BigNumberish>,
            PromiseOrValue<boolean>,
            PromiseOrValue<BytesLike>,
            IOFTWrapper.FeeObjStruct,
        ]
    ): string
    encodeFunctionData(
        functionFragment: 'getAmountAndFees',
        values: [PromiseOrValue<string>, PromiseOrValue<BigNumberish>, PromiseOrValue<BigNumberish>]
    ): string
    encodeFunctionData(
        functionFragment: 'sendNativeOFT',
        values: [
            PromiseOrValue<string>,
            PromiseOrValue<BigNumberish>,
            PromiseOrValue<BytesLike>,
            PromiseOrValue<BigNumberish>,
            PromiseOrValue<BigNumberish>,
            PromiseOrValue<string>,
            PromiseOrValue<string>,
            PromiseOrValue<BytesLike>,
            IOFTWrapper.FeeObjStruct,
        ]
    ): string
    encodeFunctionData(
        functionFragment: 'sendNativeOFTFeeV2',
        values: [
            PromiseOrValue<string>,
            PromiseOrValue<BigNumberish>,
            PromiseOrValue<BytesLike>,
            PromiseOrValue<BigNumberish>,
            PromiseOrValue<BigNumberish>,
            ICommonOFT.LzCallParamsStruct,
            IOFTWrapper.FeeObjStruct,
        ]
    ): string
    encodeFunctionData(
        functionFragment: 'sendOFT',
        values: [
            PromiseOrValue<string>,
            PromiseOrValue<BigNumberish>,
            PromiseOrValue<BytesLike>,
            PromiseOrValue<BigNumberish>,
            PromiseOrValue<BigNumberish>,
            PromiseOrValue<string>,
            PromiseOrValue<string>,
            PromiseOrValue<BytesLike>,
            IOFTWrapper.FeeObjStruct,
        ]
    ): string
    encodeFunctionData(
        functionFragment: 'sendOFTAdapterEpv2',
        values: [
            PromiseOrValue<string>,
            SendParamStruct,
            MessagingFeeStruct,
            PromiseOrValue<string>,
            IOFTWrapper.FeeObjStruct,
        ]
    ): string
    encodeFunctionData(
        functionFragment: 'sendOFTEpv2',
        values: [
            PromiseOrValue<string>,
            SendParamStruct,
            MessagingFeeStruct,
            PromiseOrValue<string>,
            IOFTWrapper.FeeObjStruct,
        ]
    ): string
    encodeFunctionData(
        functionFragment: 'sendOFTFeeV2',
        values: [
            PromiseOrValue<string>,
            PromiseOrValue<BigNumberish>,
            PromiseOrValue<BytesLike>,
            PromiseOrValue<BigNumberish>,
            PromiseOrValue<BigNumberish>,
            ICommonOFT.LzCallParamsStruct,
            IOFTWrapper.FeeObjStruct,
        ]
    ): string
    encodeFunctionData(
        functionFragment: 'sendOFTV2',
        values: [
            PromiseOrValue<string>,
            PromiseOrValue<BigNumberish>,
            PromiseOrValue<BytesLike>,
            PromiseOrValue<BigNumberish>,
            PromiseOrValue<BigNumberish>,
            ICommonOFT.LzCallParamsStruct,
            IOFTWrapper.FeeObjStruct,
        ]
    ): string
    encodeFunctionData(
        functionFragment: 'sendProxyOFT',
        values: [
            PromiseOrValue<string>,
            PromiseOrValue<BigNumberish>,
            PromiseOrValue<BytesLike>,
            PromiseOrValue<BigNumberish>,
            PromiseOrValue<BigNumberish>,
            PromiseOrValue<string>,
            PromiseOrValue<string>,
            PromiseOrValue<BytesLike>,
            IOFTWrapper.FeeObjStruct,
        ]
    ): string
    encodeFunctionData(
        functionFragment: 'sendProxyOFTFeeV2',
        values: [
            PromiseOrValue<string>,
            PromiseOrValue<BigNumberish>,
            PromiseOrValue<BytesLike>,
            PromiseOrValue<BigNumberish>,
            PromiseOrValue<BigNumberish>,
            ICommonOFT.LzCallParamsStruct,
            IOFTWrapper.FeeObjStruct,
        ]
    ): string
    encodeFunctionData(
        functionFragment: 'sendProxyOFTV2',
        values: [
            PromiseOrValue<string>,
            PromiseOrValue<BigNumberish>,
            PromiseOrValue<BytesLike>,
            PromiseOrValue<BigNumberish>,
            PromiseOrValue<BigNumberish>,
            ICommonOFT.LzCallParamsStruct,
            IOFTWrapper.FeeObjStruct,
        ]
    ): string

    decodeFunctionResult(functionFragment: 'estimateSendFee', data: BytesLike): Result
    decodeFunctionResult(functionFragment: 'estimateSendFeeEpv2', data: BytesLike): Result
    decodeFunctionResult(functionFragment: 'estimateSendFeeV2', data: BytesLike): Result
    decodeFunctionResult(functionFragment: 'getAmountAndFees', data: BytesLike): Result
    decodeFunctionResult(functionFragment: 'sendNativeOFT', data: BytesLike): Result
    decodeFunctionResult(functionFragment: 'sendNativeOFTFeeV2', data: BytesLike): Result
    decodeFunctionResult(functionFragment: 'sendOFT', data: BytesLike): Result
    decodeFunctionResult(functionFragment: 'sendOFTAdapterEpv2', data: BytesLike): Result
    decodeFunctionResult(functionFragment: 'sendOFTEpv2', data: BytesLike): Result
    decodeFunctionResult(functionFragment: 'sendOFTFeeV2', data: BytesLike): Result
    decodeFunctionResult(functionFragment: 'sendOFTV2', data: BytesLike): Result
    decodeFunctionResult(functionFragment: 'sendProxyOFT', data: BytesLike): Result
    decodeFunctionResult(functionFragment: 'sendProxyOFTFeeV2', data: BytesLike): Result
    decodeFunctionResult(functionFragment: 'sendProxyOFTV2', data: BytesLike): Result

    events: {
        'CallerBpsCapSet(uint256)': EventFragment
        'DefaultBpsSet(uint256)': EventFragment
        'OFTBpsSet(address,uint256)': EventFragment
        'WrapperFeeWithdrawn(address,address,uint256)': EventFragment
        'WrapperFees(bytes2,address,uint256,uint256)': EventFragment
    }

    getEvent(nameOrSignatureOrTopic: 'CallerBpsCapSet'): EventFragment
    getEvent(nameOrSignatureOrTopic: 'DefaultBpsSet'): EventFragment
    getEvent(nameOrSignatureOrTopic: 'OFTBpsSet'): EventFragment
    getEvent(nameOrSignatureOrTopic: 'WrapperFeeWithdrawn'): EventFragment
    getEvent(nameOrSignatureOrTopic: 'WrapperFees'): EventFragment
}

export interface CallerBpsCapSetEventObject {
    bps: BigNumber
}
export type CallerBpsCapSetEvent = TypedEvent<[BigNumber], CallerBpsCapSetEventObject>

export type CallerBpsCapSetEventFilter = TypedEventFilter<CallerBpsCapSetEvent>

export interface DefaultBpsSetEventObject {
    bps: BigNumber
}
export type DefaultBpsSetEvent = TypedEvent<[BigNumber], DefaultBpsSetEventObject>

export type DefaultBpsSetEventFilter = TypedEventFilter<DefaultBpsSetEvent>

export interface OFTBpsSetEventObject {
    token: string
    bps: BigNumber
}
export type OFTBpsSetEvent = TypedEvent<[string, BigNumber], OFTBpsSetEventObject>

export type OFTBpsSetEventFilter = TypedEventFilter<OFTBpsSetEvent>

export interface WrapperFeeWithdrawnEventObject {
    oft: string
    to: string
    amount: BigNumber
}
export type WrapperFeeWithdrawnEvent = TypedEvent<[string, string, BigNumber], WrapperFeeWithdrawnEventObject>

export type WrapperFeeWithdrawnEventFilter = TypedEventFilter<WrapperFeeWithdrawnEvent>

export interface WrapperFeesEventObject {
    partnerId: string
    token: string
    wrapperFee: BigNumber
    callerFee: BigNumber
}
export type WrapperFeesEvent = TypedEvent<[string, string, BigNumber, BigNumber], WrapperFeesEventObject>

export type WrapperFeesEventFilter = TypedEventFilter<WrapperFeesEvent>

export interface IOFTWrapper extends BaseContract {
    connect(signerOrProvider: Signer | Provider | string): this
    attach(addressOrName: string): this
    deployed(): Promise<this>

    interface: IOFTWrapperInterface

    queryFilter<TEvent extends TypedEvent>(
        event: TypedEventFilter<TEvent>,
        fromBlockOrBlockhash?: string | number | undefined,
        toBlock?: string | number | undefined
    ): Promise<Array<TEvent>>

    listeners<TEvent extends TypedEvent>(eventFilter?: TypedEventFilter<TEvent>): Array<TypedListener<TEvent>>
    listeners(eventName?: string): Array<Listener>
    removeAllListeners<TEvent extends TypedEvent>(eventFilter: TypedEventFilter<TEvent>): this
    removeAllListeners(eventName?: string): this
    off: OnEvent<this>
    on: OnEvent<this>
    once: OnEvent<this>
    removeListener: OnEvent<this>

    functions: {
        estimateSendFee(
            _oft: PromiseOrValue<string>,
            _dstChainId: PromiseOrValue<BigNumberish>,
            _toAddress: PromiseOrValue<BytesLike>,
            _amount: PromiseOrValue<BigNumberish>,
            _useZro: PromiseOrValue<boolean>,
            _adapterParams: PromiseOrValue<BytesLike>,
            _feeObj: IOFTWrapper.FeeObjStruct,
            overrides?: CallOverrides
        ): Promise<[BigNumber, BigNumber] & { nativeFee: BigNumber; zroFee: BigNumber }>

        estimateSendFeeEpv2(
            _oft: PromiseOrValue<string>,
            _sendParam: SendParamStruct,
            _payInLzToken: PromiseOrValue<boolean>,
            _feeObj: IOFTWrapper.FeeObjStruct,
            overrides?: CallOverrides
        ): Promise<[MessagingFeeStructOutput]>

        estimateSendFeeV2(
            _oft: PromiseOrValue<string>,
            _dstChainId: PromiseOrValue<BigNumberish>,
            _toAddress: PromiseOrValue<BytesLike>,
            _amount: PromiseOrValue<BigNumberish>,
            _useZro: PromiseOrValue<boolean>,
            _adapterParams: PromiseOrValue<BytesLike>,
            _feeObj: IOFTWrapper.FeeObjStruct,
            overrides?: CallOverrides
        ): Promise<[BigNumber, BigNumber] & { nativeFee: BigNumber; zroFee: BigNumber }>

        getAmountAndFees(
            _oft: PromiseOrValue<string>,
            _amount: PromiseOrValue<BigNumberish>,
            _callerBps: PromiseOrValue<BigNumberish>,
            overrides?: CallOverrides
        ): Promise<
            [BigNumber, BigNumber, BigNumber] & {
                amount: BigNumber
                wrapperFee: BigNumber
                callerFee: BigNumber
            }
        >

        sendNativeOFT(
            _nativeOft: PromiseOrValue<string>,
            _dstChainId: PromiseOrValue<BigNumberish>,
            _toAddress: PromiseOrValue<BytesLike>,
            _amount: PromiseOrValue<BigNumberish>,
            _minAmount: PromiseOrValue<BigNumberish>,
            _refundAddress: PromiseOrValue<string>,
            _zroPaymentAddress: PromiseOrValue<string>,
            _adapterParams: PromiseOrValue<BytesLike>,
            _feeObj: IOFTWrapper.FeeObjStruct,
            overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
        ): Promise<ContractTransaction>

        sendNativeOFTFeeV2(
            _nativeOft: PromiseOrValue<string>,
            _dstChainId: PromiseOrValue<BigNumberish>,
            _toAddress: PromiseOrValue<BytesLike>,
            _amount: PromiseOrValue<BigNumberish>,
            _minAmount: PromiseOrValue<BigNumberish>,
            _callParams: ICommonOFT.LzCallParamsStruct,
            _feeObj: IOFTWrapper.FeeObjStruct,
            overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
        ): Promise<ContractTransaction>

        sendOFT(
            _oft: PromiseOrValue<string>,
            _dstChainId: PromiseOrValue<BigNumberish>,
            _toAddress: PromiseOrValue<BytesLike>,
            _amount: PromiseOrValue<BigNumberish>,
            _minAmount: PromiseOrValue<BigNumberish>,
            _refundAddress: PromiseOrValue<string>,
            _zroPaymentAddress: PromiseOrValue<string>,
            _adapterParams: PromiseOrValue<BytesLike>,
            _feeObj: IOFTWrapper.FeeObjStruct,
            overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
        ): Promise<ContractTransaction>

        sendOFTAdapterEpv2(
            _adapterOFT: PromiseOrValue<string>,
            _sendParam: SendParamStruct,
            _fee: MessagingFeeStruct,
            _refundAddress: PromiseOrValue<string>,
            _feeObj: IOFTWrapper.FeeObjStruct,
            overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
        ): Promise<ContractTransaction>

        sendOFTEpv2(
            _oft: PromiseOrValue<string>,
            _sendParam: SendParamStruct,
            _fee: MessagingFeeStruct,
            _refundAddress: PromiseOrValue<string>,
            _feeObj: IOFTWrapper.FeeObjStruct,
            overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
        ): Promise<ContractTransaction>

        sendOFTFeeV2(
            _oft: PromiseOrValue<string>,
            _dstChainId: PromiseOrValue<BigNumberish>,
            _toAddress: PromiseOrValue<BytesLike>,
            _amount: PromiseOrValue<BigNumberish>,
            _minAmount: PromiseOrValue<BigNumberish>,
            _callParams: ICommonOFT.LzCallParamsStruct,
            _feeObj: IOFTWrapper.FeeObjStruct,
            overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
        ): Promise<ContractTransaction>

        sendOFTV2(
            _oft: PromiseOrValue<string>,
            _dstChainId: PromiseOrValue<BigNumberish>,
            _toAddress: PromiseOrValue<BytesLike>,
            _amount: PromiseOrValue<BigNumberish>,
            _minAmount: PromiseOrValue<BigNumberish>,
            _callParams: ICommonOFT.LzCallParamsStruct,
            _feeObj: IOFTWrapper.FeeObjStruct,
            overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
        ): Promise<ContractTransaction>

        sendProxyOFT(
            _proxyOft: PromiseOrValue<string>,
            _dstChainId: PromiseOrValue<BigNumberish>,
            _toAddress: PromiseOrValue<BytesLike>,
            _amount: PromiseOrValue<BigNumberish>,
            _minAmount: PromiseOrValue<BigNumberish>,
            _refundAddress: PromiseOrValue<string>,
            _zroPaymentAddress: PromiseOrValue<string>,
            _adapterParams: PromiseOrValue<BytesLike>,
            _feeObj: IOFTWrapper.FeeObjStruct,
            overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
        ): Promise<ContractTransaction>

        sendProxyOFTFeeV2(
            _proxyOft: PromiseOrValue<string>,
            _dstChainId: PromiseOrValue<BigNumberish>,
            _toAddress: PromiseOrValue<BytesLike>,
            _amount: PromiseOrValue<BigNumberish>,
            _minAmount: PromiseOrValue<BigNumberish>,
            _callParams: ICommonOFT.LzCallParamsStruct,
            _feeObj: IOFTWrapper.FeeObjStruct,
            overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
        ): Promise<ContractTransaction>

        sendProxyOFTV2(
            _proxyOft: PromiseOrValue<string>,
            _dstChainId: PromiseOrValue<BigNumberish>,
            _toAddress: PromiseOrValue<BytesLike>,
            _amount: PromiseOrValue<BigNumberish>,
            _minAmount: PromiseOrValue<BigNumberish>,
            _callParams: ICommonOFT.LzCallParamsStruct,
            _feeObj: IOFTWrapper.FeeObjStruct,
            overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
        ): Promise<ContractTransaction>
    }

    estimateSendFee(
        _oft: PromiseOrValue<string>,
        _dstChainId: PromiseOrValue<BigNumberish>,
        _toAddress: PromiseOrValue<BytesLike>,
        _amount: PromiseOrValue<BigNumberish>,
        _useZro: PromiseOrValue<boolean>,
        _adapterParams: PromiseOrValue<BytesLike>,
        _feeObj: IOFTWrapper.FeeObjStruct,
        overrides?: CallOverrides
    ): Promise<[BigNumber, BigNumber] & { nativeFee: BigNumber; zroFee: BigNumber }>

    estimateSendFeeEpv2(
        _oft: PromiseOrValue<string>,
        _sendParam: SendParamStruct,
        _payInLzToken: PromiseOrValue<boolean>,
        _feeObj: IOFTWrapper.FeeObjStruct,
        overrides?: CallOverrides
    ): Promise<MessagingFeeStructOutput>

    estimateSendFeeV2(
        _oft: PromiseOrValue<string>,
        _dstChainId: PromiseOrValue<BigNumberish>,
        _toAddress: PromiseOrValue<BytesLike>,
        _amount: PromiseOrValue<BigNumberish>,
        _useZro: PromiseOrValue<boolean>,
        _adapterParams: PromiseOrValue<BytesLike>,
        _feeObj: IOFTWrapper.FeeObjStruct,
        overrides?: CallOverrides
    ): Promise<[BigNumber, BigNumber] & { nativeFee: BigNumber; zroFee: BigNumber }>

    getAmountAndFees(
        _oft: PromiseOrValue<string>,
        _amount: PromiseOrValue<BigNumberish>,
        _callerBps: PromiseOrValue<BigNumberish>,
        overrides?: CallOverrides
    ): Promise<
        [BigNumber, BigNumber, BigNumber] & {
            amount: BigNumber
            wrapperFee: BigNumber
            callerFee: BigNumber
        }
    >

    sendNativeOFT(
        _nativeOft: PromiseOrValue<string>,
        _dstChainId: PromiseOrValue<BigNumberish>,
        _toAddress: PromiseOrValue<BytesLike>,
        _amount: PromiseOrValue<BigNumberish>,
        _minAmount: PromiseOrValue<BigNumberish>,
        _refundAddress: PromiseOrValue<string>,
        _zroPaymentAddress: PromiseOrValue<string>,
        _adapterParams: PromiseOrValue<BytesLike>,
        _feeObj: IOFTWrapper.FeeObjStruct,
        overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>

    sendNativeOFTFeeV2(
        _nativeOft: PromiseOrValue<string>,
        _dstChainId: PromiseOrValue<BigNumberish>,
        _toAddress: PromiseOrValue<BytesLike>,
        _amount: PromiseOrValue<BigNumberish>,
        _minAmount: PromiseOrValue<BigNumberish>,
        _callParams: ICommonOFT.LzCallParamsStruct,
        _feeObj: IOFTWrapper.FeeObjStruct,
        overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>

    sendOFT(
        _oft: PromiseOrValue<string>,
        _dstChainId: PromiseOrValue<BigNumberish>,
        _toAddress: PromiseOrValue<BytesLike>,
        _amount: PromiseOrValue<BigNumberish>,
        _minAmount: PromiseOrValue<BigNumberish>,
        _refundAddress: PromiseOrValue<string>,
        _zroPaymentAddress: PromiseOrValue<string>,
        _adapterParams: PromiseOrValue<BytesLike>,
        _feeObj: IOFTWrapper.FeeObjStruct,
        overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>

    sendOFTAdapterEpv2(
        _adapterOFT: PromiseOrValue<string>,
        _sendParam: SendParamStruct,
        _fee: MessagingFeeStruct,
        _refundAddress: PromiseOrValue<string>,
        _feeObj: IOFTWrapper.FeeObjStruct,
        overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>

    sendOFTEpv2(
        _oft: PromiseOrValue<string>,
        _sendParam: SendParamStruct,
        _fee: MessagingFeeStruct,
        _refundAddress: PromiseOrValue<string>,
        _feeObj: IOFTWrapper.FeeObjStruct,
        overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>

    sendOFTFeeV2(
        _oft: PromiseOrValue<string>,
        _dstChainId: PromiseOrValue<BigNumberish>,
        _toAddress: PromiseOrValue<BytesLike>,
        _amount: PromiseOrValue<BigNumberish>,
        _minAmount: PromiseOrValue<BigNumberish>,
        _callParams: ICommonOFT.LzCallParamsStruct,
        _feeObj: IOFTWrapper.FeeObjStruct,
        overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>

    sendOFTV2(
        _oft: PromiseOrValue<string>,
        _dstChainId: PromiseOrValue<BigNumberish>,
        _toAddress: PromiseOrValue<BytesLike>,
        _amount: PromiseOrValue<BigNumberish>,
        _minAmount: PromiseOrValue<BigNumberish>,
        _callParams: ICommonOFT.LzCallParamsStruct,
        _feeObj: IOFTWrapper.FeeObjStruct,
        overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>

    sendProxyOFT(
        _proxyOft: PromiseOrValue<string>,
        _dstChainId: PromiseOrValue<BigNumberish>,
        _toAddress: PromiseOrValue<BytesLike>,
        _amount: PromiseOrValue<BigNumberish>,
        _minAmount: PromiseOrValue<BigNumberish>,
        _refundAddress: PromiseOrValue<string>,
        _zroPaymentAddress: PromiseOrValue<string>,
        _adapterParams: PromiseOrValue<BytesLike>,
        _feeObj: IOFTWrapper.FeeObjStruct,
        overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>

    sendProxyOFTFeeV2(
        _proxyOft: PromiseOrValue<string>,
        _dstChainId: PromiseOrValue<BigNumberish>,
        _toAddress: PromiseOrValue<BytesLike>,
        _amount: PromiseOrValue<BigNumberish>,
        _minAmount: PromiseOrValue<BigNumberish>,
        _callParams: ICommonOFT.LzCallParamsStruct,
        _feeObj: IOFTWrapper.FeeObjStruct,
        overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>

    sendProxyOFTV2(
        _proxyOft: PromiseOrValue<string>,
        _dstChainId: PromiseOrValue<BigNumberish>,
        _toAddress: PromiseOrValue<BytesLike>,
        _amount: PromiseOrValue<BigNumberish>,
        _minAmount: PromiseOrValue<BigNumberish>,
        _callParams: ICommonOFT.LzCallParamsStruct,
        _feeObj: IOFTWrapper.FeeObjStruct,
        overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>

    callStatic: {
        estimateSendFee(
            _oft: PromiseOrValue<string>,
            _dstChainId: PromiseOrValue<BigNumberish>,
            _toAddress: PromiseOrValue<BytesLike>,
            _amount: PromiseOrValue<BigNumberish>,
            _useZro: PromiseOrValue<boolean>,
            _adapterParams: PromiseOrValue<BytesLike>,
            _feeObj: IOFTWrapper.FeeObjStruct,
            overrides?: CallOverrides
        ): Promise<[BigNumber, BigNumber] & { nativeFee: BigNumber; zroFee: BigNumber }>

        estimateSendFeeEpv2(
            _oft: PromiseOrValue<string>,
            _sendParam: SendParamStruct,
            _payInLzToken: PromiseOrValue<boolean>,
            _feeObj: IOFTWrapper.FeeObjStruct,
            overrides?: CallOverrides
        ): Promise<MessagingFeeStructOutput>

        estimateSendFeeV2(
            _oft: PromiseOrValue<string>,
            _dstChainId: PromiseOrValue<BigNumberish>,
            _toAddress: PromiseOrValue<BytesLike>,
            _amount: PromiseOrValue<BigNumberish>,
            _useZro: PromiseOrValue<boolean>,
            _adapterParams: PromiseOrValue<BytesLike>,
            _feeObj: IOFTWrapper.FeeObjStruct,
            overrides?: CallOverrides
        ): Promise<[BigNumber, BigNumber] & { nativeFee: BigNumber; zroFee: BigNumber }>

        getAmountAndFees(
            _oft: PromiseOrValue<string>,
            _amount: PromiseOrValue<BigNumberish>,
            _callerBps: PromiseOrValue<BigNumberish>,
            overrides?: CallOverrides
        ): Promise<
            [BigNumber, BigNumber, BigNumber] & {
                amount: BigNumber
                wrapperFee: BigNumber
                callerFee: BigNumber
            }
        >

        sendNativeOFT(
            _nativeOft: PromiseOrValue<string>,
            _dstChainId: PromiseOrValue<BigNumberish>,
            _toAddress: PromiseOrValue<BytesLike>,
            _amount: PromiseOrValue<BigNumberish>,
            _minAmount: PromiseOrValue<BigNumberish>,
            _refundAddress: PromiseOrValue<string>,
            _zroPaymentAddress: PromiseOrValue<string>,
            _adapterParams: PromiseOrValue<BytesLike>,
            _feeObj: IOFTWrapper.FeeObjStruct,
            overrides?: CallOverrides
        ): Promise<void>

        sendNativeOFTFeeV2(
            _nativeOft: PromiseOrValue<string>,
            _dstChainId: PromiseOrValue<BigNumberish>,
            _toAddress: PromiseOrValue<BytesLike>,
            _amount: PromiseOrValue<BigNumberish>,
            _minAmount: PromiseOrValue<BigNumberish>,
            _callParams: ICommonOFT.LzCallParamsStruct,
            _feeObj: IOFTWrapper.FeeObjStruct,
            overrides?: CallOverrides
        ): Promise<void>

        sendOFT(
            _oft: PromiseOrValue<string>,
            _dstChainId: PromiseOrValue<BigNumberish>,
            _toAddress: PromiseOrValue<BytesLike>,
            _amount: PromiseOrValue<BigNumberish>,
            _minAmount: PromiseOrValue<BigNumberish>,
            _refundAddress: PromiseOrValue<string>,
            _zroPaymentAddress: PromiseOrValue<string>,
            _adapterParams: PromiseOrValue<BytesLike>,
            _feeObj: IOFTWrapper.FeeObjStruct,
            overrides?: CallOverrides
        ): Promise<void>

        sendOFTAdapterEpv2(
            _adapterOFT: PromiseOrValue<string>,
            _sendParam: SendParamStruct,
            _fee: MessagingFeeStruct,
            _refundAddress: PromiseOrValue<string>,
            _feeObj: IOFTWrapper.FeeObjStruct,
            overrides?: CallOverrides
        ): Promise<void>

        sendOFTEpv2(
            _oft: PromiseOrValue<string>,
            _sendParam: SendParamStruct,
            _fee: MessagingFeeStruct,
            _refundAddress: PromiseOrValue<string>,
            _feeObj: IOFTWrapper.FeeObjStruct,
            overrides?: CallOverrides
        ): Promise<void>

        sendOFTFeeV2(
            _oft: PromiseOrValue<string>,
            _dstChainId: PromiseOrValue<BigNumberish>,
            _toAddress: PromiseOrValue<BytesLike>,
            _amount: PromiseOrValue<BigNumberish>,
            _minAmount: PromiseOrValue<BigNumberish>,
            _callParams: ICommonOFT.LzCallParamsStruct,
            _feeObj: IOFTWrapper.FeeObjStruct,
            overrides?: CallOverrides
        ): Promise<void>

        sendOFTV2(
            _oft: PromiseOrValue<string>,
            _dstChainId: PromiseOrValue<BigNumberish>,
            _toAddress: PromiseOrValue<BytesLike>,
            _amount: PromiseOrValue<BigNumberish>,
            _minAmount: PromiseOrValue<BigNumberish>,
            _callParams: ICommonOFT.LzCallParamsStruct,
            _feeObj: IOFTWrapper.FeeObjStruct,
            overrides?: CallOverrides
        ): Promise<void>

        sendProxyOFT(
            _proxyOft: PromiseOrValue<string>,
            _dstChainId: PromiseOrValue<BigNumberish>,
            _toAddress: PromiseOrValue<BytesLike>,
            _amount: PromiseOrValue<BigNumberish>,
            _minAmount: PromiseOrValue<BigNumberish>,
            _refundAddress: PromiseOrValue<string>,
            _zroPaymentAddress: PromiseOrValue<string>,
            _adapterParams: PromiseOrValue<BytesLike>,
            _feeObj: IOFTWrapper.FeeObjStruct,
            overrides?: CallOverrides
        ): Promise<void>

        sendProxyOFTFeeV2(
            _proxyOft: PromiseOrValue<string>,
            _dstChainId: PromiseOrValue<BigNumberish>,
            _toAddress: PromiseOrValue<BytesLike>,
            _amount: PromiseOrValue<BigNumberish>,
            _minAmount: PromiseOrValue<BigNumberish>,
            _callParams: ICommonOFT.LzCallParamsStruct,
            _feeObj: IOFTWrapper.FeeObjStruct,
            overrides?: CallOverrides
        ): Promise<void>

        sendProxyOFTV2(
            _proxyOft: PromiseOrValue<string>,
            _dstChainId: PromiseOrValue<BigNumberish>,
            _toAddress: PromiseOrValue<BytesLike>,
            _amount: PromiseOrValue<BigNumberish>,
            _minAmount: PromiseOrValue<BigNumberish>,
            _callParams: ICommonOFT.LzCallParamsStruct,
            _feeObj: IOFTWrapper.FeeObjStruct,
            overrides?: CallOverrides
        ): Promise<void>
    }

    filters: {
        'CallerBpsCapSet(uint256)'(bps?: null): CallerBpsCapSetEventFilter
        CallerBpsCapSet(bps?: null): CallerBpsCapSetEventFilter

        'DefaultBpsSet(uint256)'(bps?: null): DefaultBpsSetEventFilter
        DefaultBpsSet(bps?: null): DefaultBpsSetEventFilter

        'OFTBpsSet(address,uint256)'(token?: PromiseOrValue<string> | null, bps?: null): OFTBpsSetEventFilter
        OFTBpsSet(token?: PromiseOrValue<string> | null, bps?: null): OFTBpsSetEventFilter

        'WrapperFeeWithdrawn(address,address,uint256)'(
            oft?: PromiseOrValue<string> | null,
            to?: null,
            amount?: null
        ): WrapperFeeWithdrawnEventFilter
        WrapperFeeWithdrawn(
            oft?: PromiseOrValue<string> | null,
            to?: null,
            amount?: null
        ): WrapperFeeWithdrawnEventFilter

        'WrapperFees(bytes2,address,uint256,uint256)'(
            partnerId?: PromiseOrValue<BytesLike> | null,
            token?: null,
            wrapperFee?: null,
            callerFee?: null
        ): WrapperFeesEventFilter
        WrapperFees(
            partnerId?: PromiseOrValue<BytesLike> | null,
            token?: null,
            wrapperFee?: null,
            callerFee?: null
        ): WrapperFeesEventFilter
    }

    estimateGas: {
        estimateSendFee(
            _oft: PromiseOrValue<string>,
            _dstChainId: PromiseOrValue<BigNumberish>,
            _toAddress: PromiseOrValue<BytesLike>,
            _amount: PromiseOrValue<BigNumberish>,
            _useZro: PromiseOrValue<boolean>,
            _adapterParams: PromiseOrValue<BytesLike>,
            _feeObj: IOFTWrapper.FeeObjStruct,
            overrides?: CallOverrides
        ): Promise<BigNumber>

        estimateSendFeeEpv2(
            _oft: PromiseOrValue<string>,
            _sendParam: SendParamStruct,
            _payInLzToken: PromiseOrValue<boolean>,
            _feeObj: IOFTWrapper.FeeObjStruct,
            overrides?: CallOverrides
        ): Promise<BigNumber>

        estimateSendFeeV2(
            _oft: PromiseOrValue<string>,
            _dstChainId: PromiseOrValue<BigNumberish>,
            _toAddress: PromiseOrValue<BytesLike>,
            _amount: PromiseOrValue<BigNumberish>,
            _useZro: PromiseOrValue<boolean>,
            _adapterParams: PromiseOrValue<BytesLike>,
            _feeObj: IOFTWrapper.FeeObjStruct,
            overrides?: CallOverrides
        ): Promise<BigNumber>

        getAmountAndFees(
            _oft: PromiseOrValue<string>,
            _amount: PromiseOrValue<BigNumberish>,
            _callerBps: PromiseOrValue<BigNumberish>,
            overrides?: CallOverrides
        ): Promise<BigNumber>

        sendNativeOFT(
            _nativeOft: PromiseOrValue<string>,
            _dstChainId: PromiseOrValue<BigNumberish>,
            _toAddress: PromiseOrValue<BytesLike>,
            _amount: PromiseOrValue<BigNumberish>,
            _minAmount: PromiseOrValue<BigNumberish>,
            _refundAddress: PromiseOrValue<string>,
            _zroPaymentAddress: PromiseOrValue<string>,
            _adapterParams: PromiseOrValue<BytesLike>,
            _feeObj: IOFTWrapper.FeeObjStruct,
            overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
        ): Promise<BigNumber>

        sendNativeOFTFeeV2(
            _nativeOft: PromiseOrValue<string>,
            _dstChainId: PromiseOrValue<BigNumberish>,
            _toAddress: PromiseOrValue<BytesLike>,
            _amount: PromiseOrValue<BigNumberish>,
            _minAmount: PromiseOrValue<BigNumberish>,
            _callParams: ICommonOFT.LzCallParamsStruct,
            _feeObj: IOFTWrapper.FeeObjStruct,
            overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
        ): Promise<BigNumber>

        sendOFT(
            _oft: PromiseOrValue<string>,
            _dstChainId: PromiseOrValue<BigNumberish>,
            _toAddress: PromiseOrValue<BytesLike>,
            _amount: PromiseOrValue<BigNumberish>,
            _minAmount: PromiseOrValue<BigNumberish>,
            _refundAddress: PromiseOrValue<string>,
            _zroPaymentAddress: PromiseOrValue<string>,
            _adapterParams: PromiseOrValue<BytesLike>,
            _feeObj: IOFTWrapper.FeeObjStruct,
            overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
        ): Promise<BigNumber>

        sendOFTAdapterEpv2(
            _adapterOFT: PromiseOrValue<string>,
            _sendParam: SendParamStruct,
            _fee: MessagingFeeStruct,
            _refundAddress: PromiseOrValue<string>,
            _feeObj: IOFTWrapper.FeeObjStruct,
            overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
        ): Promise<BigNumber>

        sendOFTEpv2(
            _oft: PromiseOrValue<string>,
            _sendParam: SendParamStruct,
            _fee: MessagingFeeStruct,
            _refundAddress: PromiseOrValue<string>,
            _feeObj: IOFTWrapper.FeeObjStruct,
            overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
        ): Promise<BigNumber>

        sendOFTFeeV2(
            _oft: PromiseOrValue<string>,
            _dstChainId: PromiseOrValue<BigNumberish>,
            _toAddress: PromiseOrValue<BytesLike>,
            _amount: PromiseOrValue<BigNumberish>,
            _minAmount: PromiseOrValue<BigNumberish>,
            _callParams: ICommonOFT.LzCallParamsStruct,
            _feeObj: IOFTWrapper.FeeObjStruct,
            overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
        ): Promise<BigNumber>

        sendOFTV2(
            _oft: PromiseOrValue<string>,
            _dstChainId: PromiseOrValue<BigNumberish>,
            _toAddress: PromiseOrValue<BytesLike>,
            _amount: PromiseOrValue<BigNumberish>,
            _minAmount: PromiseOrValue<BigNumberish>,
            _callParams: ICommonOFT.LzCallParamsStruct,
            _feeObj: IOFTWrapper.FeeObjStruct,
            overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
        ): Promise<BigNumber>

        sendProxyOFT(
            _proxyOft: PromiseOrValue<string>,
            _dstChainId: PromiseOrValue<BigNumberish>,
            _toAddress: PromiseOrValue<BytesLike>,
            _amount: PromiseOrValue<BigNumberish>,
            _minAmount: PromiseOrValue<BigNumberish>,
            _refundAddress: PromiseOrValue<string>,
            _zroPaymentAddress: PromiseOrValue<string>,
            _adapterParams: PromiseOrValue<BytesLike>,
            _feeObj: IOFTWrapper.FeeObjStruct,
            overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
        ): Promise<BigNumber>

        sendProxyOFTFeeV2(
            _proxyOft: PromiseOrValue<string>,
            _dstChainId: PromiseOrValue<BigNumberish>,
            _toAddress: PromiseOrValue<BytesLike>,
            _amount: PromiseOrValue<BigNumberish>,
            _minAmount: PromiseOrValue<BigNumberish>,
            _callParams: ICommonOFT.LzCallParamsStruct,
            _feeObj: IOFTWrapper.FeeObjStruct,
            overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
        ): Promise<BigNumber>

        sendProxyOFTV2(
            _proxyOft: PromiseOrValue<string>,
            _dstChainId: PromiseOrValue<BigNumberish>,
            _toAddress: PromiseOrValue<BytesLike>,
            _amount: PromiseOrValue<BigNumberish>,
            _minAmount: PromiseOrValue<BigNumberish>,
            _callParams: ICommonOFT.LzCallParamsStruct,
            _feeObj: IOFTWrapper.FeeObjStruct,
            overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
        ): Promise<BigNumber>
    }

    populateTransaction: {
        estimateSendFee(
            _oft: PromiseOrValue<string>,
            _dstChainId: PromiseOrValue<BigNumberish>,
            _toAddress: PromiseOrValue<BytesLike>,
            _amount: PromiseOrValue<BigNumberish>,
            _useZro: PromiseOrValue<boolean>,
            _adapterParams: PromiseOrValue<BytesLike>,
            _feeObj: IOFTWrapper.FeeObjStruct,
            overrides?: CallOverrides
        ): Promise<PopulatedTransaction>

        estimateSendFeeEpv2(
            _oft: PromiseOrValue<string>,
            _sendParam: SendParamStruct,
            _payInLzToken: PromiseOrValue<boolean>,
            _feeObj: IOFTWrapper.FeeObjStruct,
            overrides?: CallOverrides
        ): Promise<PopulatedTransaction>

        estimateSendFeeV2(
            _oft: PromiseOrValue<string>,
            _dstChainId: PromiseOrValue<BigNumberish>,
            _toAddress: PromiseOrValue<BytesLike>,
            _amount: PromiseOrValue<BigNumberish>,
            _useZro: PromiseOrValue<boolean>,
            _adapterParams: PromiseOrValue<BytesLike>,
            _feeObj: IOFTWrapper.FeeObjStruct,
            overrides?: CallOverrides
        ): Promise<PopulatedTransaction>

        getAmountAndFees(
            _oft: PromiseOrValue<string>,
            _amount: PromiseOrValue<BigNumberish>,
            _callerBps: PromiseOrValue<BigNumberish>,
            overrides?: CallOverrides
        ): Promise<PopulatedTransaction>

        sendNativeOFT(
            _nativeOft: PromiseOrValue<string>,
            _dstChainId: PromiseOrValue<BigNumberish>,
            _toAddress: PromiseOrValue<BytesLike>,
            _amount: PromiseOrValue<BigNumberish>,
            _minAmount: PromiseOrValue<BigNumberish>,
            _refundAddress: PromiseOrValue<string>,
            _zroPaymentAddress: PromiseOrValue<string>,
            _adapterParams: PromiseOrValue<BytesLike>,
            _feeObj: IOFTWrapper.FeeObjStruct,
            overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
        ): Promise<PopulatedTransaction>

        sendNativeOFTFeeV2(
            _nativeOft: PromiseOrValue<string>,
            _dstChainId: PromiseOrValue<BigNumberish>,
            _toAddress: PromiseOrValue<BytesLike>,
            _amount: PromiseOrValue<BigNumberish>,
            _minAmount: PromiseOrValue<BigNumberish>,
            _callParams: ICommonOFT.LzCallParamsStruct,
            _feeObj: IOFTWrapper.FeeObjStruct,
            overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
        ): Promise<PopulatedTransaction>

        sendOFT(
            _oft: PromiseOrValue<string>,
            _dstChainId: PromiseOrValue<BigNumberish>,
            _toAddress: PromiseOrValue<BytesLike>,
            _amount: PromiseOrValue<BigNumberish>,
            _minAmount: PromiseOrValue<BigNumberish>,
            _refundAddress: PromiseOrValue<string>,
            _zroPaymentAddress: PromiseOrValue<string>,
            _adapterParams: PromiseOrValue<BytesLike>,
            _feeObj: IOFTWrapper.FeeObjStruct,
            overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
        ): Promise<PopulatedTransaction>

        sendOFTAdapterEpv2(
            _adapterOFT: PromiseOrValue<string>,
            _sendParam: SendParamStruct,
            _fee: MessagingFeeStruct,
            _refundAddress: PromiseOrValue<string>,
            _feeObj: IOFTWrapper.FeeObjStruct,
            overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
        ): Promise<PopulatedTransaction>

        sendOFTEpv2(
            _oft: PromiseOrValue<string>,
            _sendParam: SendParamStruct,
            _fee: MessagingFeeStruct,
            _refundAddress: PromiseOrValue<string>,
            _feeObj: IOFTWrapper.FeeObjStruct,
            overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
        ): Promise<PopulatedTransaction>

        sendOFTFeeV2(
            _oft: PromiseOrValue<string>,
            _dstChainId: PromiseOrValue<BigNumberish>,
            _toAddress: PromiseOrValue<BytesLike>,
            _amount: PromiseOrValue<BigNumberish>,
            _minAmount: PromiseOrValue<BigNumberish>,
            _callParams: ICommonOFT.LzCallParamsStruct,
            _feeObj: IOFTWrapper.FeeObjStruct,
            overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
        ): Promise<PopulatedTransaction>

        sendOFTV2(
            _oft: PromiseOrValue<string>,
            _dstChainId: PromiseOrValue<BigNumberish>,
            _toAddress: PromiseOrValue<BytesLike>,
            _amount: PromiseOrValue<BigNumberish>,
            _minAmount: PromiseOrValue<BigNumberish>,
            _callParams: ICommonOFT.LzCallParamsStruct,
            _feeObj: IOFTWrapper.FeeObjStruct,
            overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
        ): Promise<PopulatedTransaction>

        sendProxyOFT(
            _proxyOft: PromiseOrValue<string>,
            _dstChainId: PromiseOrValue<BigNumberish>,
            _toAddress: PromiseOrValue<BytesLike>,
            _amount: PromiseOrValue<BigNumberish>,
            _minAmount: PromiseOrValue<BigNumberish>,
            _refundAddress: PromiseOrValue<string>,
            _zroPaymentAddress: PromiseOrValue<string>,
            _adapterParams: PromiseOrValue<BytesLike>,
            _feeObj: IOFTWrapper.FeeObjStruct,
            overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
        ): Promise<PopulatedTransaction>

        sendProxyOFTFeeV2(
            _proxyOft: PromiseOrValue<string>,
            _dstChainId: PromiseOrValue<BigNumberish>,
            _toAddress: PromiseOrValue<BytesLike>,
            _amount: PromiseOrValue<BigNumberish>,
            _minAmount: PromiseOrValue<BigNumberish>,
            _callParams: ICommonOFT.LzCallParamsStruct,
            _feeObj: IOFTWrapper.FeeObjStruct,
            overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
        ): Promise<PopulatedTransaction>

        sendProxyOFTV2(
            _proxyOft: PromiseOrValue<string>,
            _dstChainId: PromiseOrValue<BigNumberish>,
            _toAddress: PromiseOrValue<BytesLike>,
            _amount: PromiseOrValue<BigNumberish>,
            _minAmount: PromiseOrValue<BigNumberish>,
            _callParams: ICommonOFT.LzCallParamsStruct,
            _feeObj: IOFTWrapper.FeeObjStruct,
            overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
        ): Promise<PopulatedTransaction>
    }
}
