/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
    BaseContract,
    BigNumber,
    BigNumberish,
    BytesLike,
    CallOverrides,
    ContractTransaction,
    Overrides,
    PayableOverrides,
    PopulatedTransaction,
    Signer,
    utils,
} from 'ethers'
import type { FunctionFragment, Result, EventFragment } from '@ethersproject/abi'
import type { Listener, Provider } from '@ethersproject/providers'
import type { TypedEventFilter, TypedEvent, TypedListener, OnEvent, PromiseOrValue } from './common'

export type CreditStruct = {
    srcEid: PromiseOrValue<BigNumberish>
    amount: PromiseOrValue<BigNumberish>
}

export type CreditStructOutput = [number, BigNumber] & {
    srcEid: number
    amount: BigNumber
}

export type SendParamStruct = {
    dstEid: PromiseOrValue<BigNumberish>
    to: PromiseOrValue<BytesLike>
    amountLD: PromiseOrValue<BigNumberish>
    minAmountLD: PromiseOrValue<BigNumberish>
    extraOptions: PromiseOrValue<BytesLike>
    composeMsg: PromiseOrValue<BytesLike>
    oftCmd: PromiseOrValue<BytesLike>
}

export type SendParamStructOutput = [number, string, BigNumber, BigNumber, string, string, string] & {
    dstEid: number
    to: string
    amountLD: BigNumber
    minAmountLD: BigNumber
    extraOptions: string
    composeMsg: string
    oftCmd: string
}

export type OFTLimitStruct = {
    minAmountLD: PromiseOrValue<BigNumberish>
    maxAmountLD: PromiseOrValue<BigNumberish>
}

export type OFTLimitStructOutput = [BigNumber, BigNumber] & {
    minAmountLD: BigNumber
    maxAmountLD: BigNumber
}

export type OFTFeeDetailStruct = {
    feeAmountLD: PromiseOrValue<BigNumberish>
    description: PromiseOrValue<string>
}

export type OFTFeeDetailStructOutput = [BigNumber, string] & {
    feeAmountLD: BigNumber
    description: string
}

export type OFTReceiptStruct = {
    amountSentLD: PromiseOrValue<BigNumberish>
    amountReceivedLD: PromiseOrValue<BigNumberish>
}

export type OFTReceiptStructOutput = [BigNumber, BigNumber] & {
    amountSentLD: BigNumber
    amountReceivedLD: BigNumber
}

export type MessagingFeeStruct = {
    nativeFee: PromiseOrValue<BigNumberish>
    lzTokenFee: PromiseOrValue<BigNumberish>
}

export type MessagingFeeStructOutput = [BigNumber, BigNumber] & {
    nativeFee: BigNumber
    lzTokenFee: BigNumber
}

export type OriginStruct = {
    srcEid: PromiseOrValue<BigNumberish>
    sender: PromiseOrValue<BytesLike>
    nonce: PromiseOrValue<BigNumberish>
}

export type OriginStructOutput = [number, string, BigNumber] & {
    srcEid: number
    sender: string
    nonce: BigNumber
}

export type MessagingReceiptStruct = {
    guid: PromiseOrValue<BytesLike>
    nonce: PromiseOrValue<BigNumberish>
    fee: MessagingFeeStruct
}

export type MessagingReceiptStructOutput = [string, BigNumber, MessagingFeeStructOutput] & {
    guid: string
    nonce: BigNumber
    fee: MessagingFeeStructOutput
}

export type TargetCreditStruct = {
    srcEid: PromiseOrValue<BigNumberish>
    amount: PromiseOrValue<BigNumberish>
    minAmount: PromiseOrValue<BigNumberish>
}

export type TargetCreditStructOutput = [number, BigNumber, BigNumber] & {
    srcEid: number
    amount: BigNumber
    minAmount: BigNumber
}

export type TicketStruct = {
    ticketId: PromiseOrValue<BigNumberish>
    passengerBytes: PromiseOrValue<BytesLike>
}

export type TicketStructOutput = [BigNumber, string] & {
    ticketId: BigNumber
    passengerBytes: string
}

export declare namespace StargateBase {
    export type AddressConfigStruct = {
        feeLib: PromiseOrValue<string>
        planner: PromiseOrValue<string>
        treasurer: PromiseOrValue<string>
        tokenMessaging: PromiseOrValue<string>
        creditMessaging: PromiseOrValue<string>
        lzToken: PromiseOrValue<string>
    }

    export type AddressConfigStructOutput = [string, string, string, string, string, string] & {
        feeLib: string
        planner: string
        treasurer: string
        tokenMessaging: string
        creditMessaging: string
        lzToken: string
    }
}

export interface StargatePoolNativeInterface extends utils.Interface {
    functions: {
        'addTreasuryFee(uint256)': FunctionFragment
        'approvalRequired()': FunctionFragment
        'deficitOffset()': FunctionFragment
        'deposit(address,uint256)': FunctionFragment
        'endpoint()': FunctionFragment
        'getAddressConfig()': FunctionFragment
        'getTransferGasLimit()': FunctionFragment
        'localEid()': FunctionFragment
        'lpToken()': FunctionFragment
        'oftVersion()': FunctionFragment
        'owner()': FunctionFragment
        'paths(uint32)': FunctionFragment
        'plannerFee()': FunctionFragment
        'poolBalance()': FunctionFragment
        'quoteOFT((uint32,bytes32,uint256,uint256,bytes,bytes,bytes))': FunctionFragment
        'quoteRedeemSend((uint32,bytes32,uint256,uint256,bytes,bytes,bytes),bool)': FunctionFragment
        'quoteSend((uint32,bytes32,uint256,uint256,bytes,bytes,bytes),bool)': FunctionFragment
        'receiveCredits(uint32,(uint32,uint64)[])': FunctionFragment
        'receiveTokenBus((uint32,bytes32,uint64),bytes32,uint8,address,uint64)': FunctionFragment
        'receiveTokenTaxi((uint32,bytes32,uint64),bytes32,address,uint64,bytes)': FunctionFragment
        'recoverToken(address,address,uint256)': FunctionFragment
        'redeem(uint256,address)': FunctionFragment
        'redeemSend((uint32,bytes32,uint256,uint256,bytes,bytes,bytes),(uint256,uint256),address)': FunctionFragment
        'redeemable(address)': FunctionFragment
        'renounceOwnership()': FunctionFragment
        'retryReceiveToken(bytes32,uint8,uint32,address,uint256,bytes)': FunctionFragment
        'send((uint32,bytes32,uint256,uint256,bytes,bytes,bytes),(uint256,uint256),address)': FunctionFragment
        'sendCredits(uint32,(uint32,uint64,uint64)[])': FunctionFragment
        'sendToken((uint32,bytes32,uint256,uint256,bytes,bytes,bytes),(uint256,uint256),address)': FunctionFragment
        'setAddressConfig((address,address,address,address,address,address))': FunctionFragment
        'setDeficitOffset(uint256)': FunctionFragment
        'setOFTPath(uint32,bool)': FunctionFragment
        'setPause(bool)': FunctionFragment
        'setTransferGasLimit(uint256)': FunctionFragment
        'sharedDecimals()': FunctionFragment
        'stargateType()': FunctionFragment
        'status()': FunctionFragment
        'token()': FunctionFragment
        'transferOwnership(address)': FunctionFragment
        'treasuryFee()': FunctionFragment
        'tvl()': FunctionFragment
        'unreceivedTokens(bytes32,uint8)': FunctionFragment
        'withdrawPlannerFee()': FunctionFragment
        'withdrawTreasuryFee(address,uint64)': FunctionFragment
    }

    getFunction(
        nameOrSignatureOrTopic:
            | 'addTreasuryFee'
            | 'approvalRequired'
            | 'deficitOffset'
            | 'deposit'
            | 'endpoint'
            | 'getAddressConfig'
            | 'getTransferGasLimit'
            | 'localEid'
            | 'lpToken'
            | 'oftVersion'
            | 'owner'
            | 'paths'
            | 'plannerFee'
            | 'poolBalance'
            | 'quoteOFT'
            | 'quoteRedeemSend'
            | 'quoteSend'
            | 'receiveCredits'
            | 'receiveTokenBus'
            | 'receiveTokenTaxi'
            | 'recoverToken'
            | 'redeem'
            | 'redeemSend'
            | 'redeemable'
            | 'renounceOwnership'
            | 'retryReceiveToken'
            | 'send'
            | 'sendCredits'
            | 'sendToken'
            | 'setAddressConfig'
            | 'setDeficitOffset'
            | 'setOFTPath'
            | 'setPause'
            | 'setTransferGasLimit'
            | 'sharedDecimals'
            | 'stargateType'
            | 'status'
            | 'token'
            | 'transferOwnership'
            | 'treasuryFee'
            | 'tvl'
            | 'unreceivedTokens'
            | 'withdrawPlannerFee'
            | 'withdrawTreasuryFee'
    ): FunctionFragment

    encodeFunctionData(functionFragment: 'addTreasuryFee', values: [PromiseOrValue<BigNumberish>]): string
    encodeFunctionData(functionFragment: 'approvalRequired', values?: undefined): string
    encodeFunctionData(functionFragment: 'deficitOffset', values?: undefined): string
    encodeFunctionData(
        functionFragment: 'deposit',
        values: [PromiseOrValue<string>, PromiseOrValue<BigNumberish>]
    ): string
    encodeFunctionData(functionFragment: 'endpoint', values?: undefined): string
    encodeFunctionData(functionFragment: 'getAddressConfig', values?: undefined): string
    encodeFunctionData(functionFragment: 'getTransferGasLimit', values?: undefined): string
    encodeFunctionData(functionFragment: 'localEid', values?: undefined): string
    encodeFunctionData(functionFragment: 'lpToken', values?: undefined): string
    encodeFunctionData(functionFragment: 'oftVersion', values?: undefined): string
    encodeFunctionData(functionFragment: 'owner', values?: undefined): string
    encodeFunctionData(functionFragment: 'paths', values: [PromiseOrValue<BigNumberish>]): string
    encodeFunctionData(functionFragment: 'plannerFee', values?: undefined): string
    encodeFunctionData(functionFragment: 'poolBalance', values?: undefined): string
    encodeFunctionData(functionFragment: 'quoteOFT', values: [SendParamStruct]): string
    encodeFunctionData(functionFragment: 'quoteRedeemSend', values: [SendParamStruct, PromiseOrValue<boolean>]): string
    encodeFunctionData(functionFragment: 'quoteSend', values: [SendParamStruct, PromiseOrValue<boolean>]): string
    encodeFunctionData(
        functionFragment: 'receiveCredits',
        values: [PromiseOrValue<BigNumberish>, CreditStruct[]]
    ): string
    encodeFunctionData(
        functionFragment: 'receiveTokenBus',
        values: [
            OriginStruct,
            PromiseOrValue<BytesLike>,
            PromiseOrValue<BigNumberish>,
            PromiseOrValue<string>,
            PromiseOrValue<BigNumberish>,
        ]
    ): string
    encodeFunctionData(
        functionFragment: 'receiveTokenTaxi',
        values: [
            OriginStruct,
            PromiseOrValue<BytesLike>,
            PromiseOrValue<string>,
            PromiseOrValue<BigNumberish>,
            PromiseOrValue<BytesLike>,
        ]
    ): string
    encodeFunctionData(
        functionFragment: 'recoverToken',
        values: [PromiseOrValue<string>, PromiseOrValue<string>, PromiseOrValue<BigNumberish>]
    ): string
    encodeFunctionData(
        functionFragment: 'redeem',
        values: [PromiseOrValue<BigNumberish>, PromiseOrValue<string>]
    ): string
    encodeFunctionData(
        functionFragment: 'redeemSend',
        values: [SendParamStruct, MessagingFeeStruct, PromiseOrValue<string>]
    ): string
    encodeFunctionData(functionFragment: 'redeemable', values: [PromiseOrValue<string>]): string
    encodeFunctionData(functionFragment: 'renounceOwnership', values?: undefined): string
    encodeFunctionData(
        functionFragment: 'retryReceiveToken',
        values: [
            PromiseOrValue<BytesLike>,
            PromiseOrValue<BigNumberish>,
            PromiseOrValue<BigNumberish>,
            PromiseOrValue<string>,
            PromiseOrValue<BigNumberish>,
            PromiseOrValue<BytesLike>,
        ]
    ): string
    encodeFunctionData(
        functionFragment: 'send',
        values: [SendParamStruct, MessagingFeeStruct, PromiseOrValue<string>]
    ): string
    encodeFunctionData(
        functionFragment: 'sendCredits',
        values: [PromiseOrValue<BigNumberish>, TargetCreditStruct[]]
    ): string
    encodeFunctionData(
        functionFragment: 'sendToken',
        values: [SendParamStruct, MessagingFeeStruct, PromiseOrValue<string>]
    ): string
    encodeFunctionData(functionFragment: 'setAddressConfig', values: [StargateBase.AddressConfigStruct]): string
    encodeFunctionData(functionFragment: 'setDeficitOffset', values: [PromiseOrValue<BigNumberish>]): string
    encodeFunctionData(
        functionFragment: 'setOFTPath',
        values: [PromiseOrValue<BigNumberish>, PromiseOrValue<boolean>]
    ): string
    encodeFunctionData(functionFragment: 'setPause', values: [PromiseOrValue<boolean>]): string
    encodeFunctionData(functionFragment: 'setTransferGasLimit', values: [PromiseOrValue<BigNumberish>]): string
    encodeFunctionData(functionFragment: 'sharedDecimals', values?: undefined): string
    encodeFunctionData(functionFragment: 'stargateType', values?: undefined): string
    encodeFunctionData(functionFragment: 'status', values?: undefined): string
    encodeFunctionData(functionFragment: 'token', values?: undefined): string
    encodeFunctionData(functionFragment: 'transferOwnership', values: [PromiseOrValue<string>]): string
    encodeFunctionData(functionFragment: 'treasuryFee', values?: undefined): string
    encodeFunctionData(functionFragment: 'tvl', values?: undefined): string
    encodeFunctionData(
        functionFragment: 'unreceivedTokens',
        values: [PromiseOrValue<BytesLike>, PromiseOrValue<BigNumberish>]
    ): string
    encodeFunctionData(functionFragment: 'withdrawPlannerFee', values?: undefined): string
    encodeFunctionData(
        functionFragment: 'withdrawTreasuryFee',
        values: [PromiseOrValue<string>, PromiseOrValue<BigNumberish>]
    ): string

    decodeFunctionResult(functionFragment: 'addTreasuryFee', data: BytesLike): Result
    decodeFunctionResult(functionFragment: 'approvalRequired', data: BytesLike): Result
    decodeFunctionResult(functionFragment: 'deficitOffset', data: BytesLike): Result
    decodeFunctionResult(functionFragment: 'deposit', data: BytesLike): Result
    decodeFunctionResult(functionFragment: 'endpoint', data: BytesLike): Result
    decodeFunctionResult(functionFragment: 'getAddressConfig', data: BytesLike): Result
    decodeFunctionResult(functionFragment: 'getTransferGasLimit', data: BytesLike): Result
    decodeFunctionResult(functionFragment: 'localEid', data: BytesLike): Result
    decodeFunctionResult(functionFragment: 'lpToken', data: BytesLike): Result
    decodeFunctionResult(functionFragment: 'oftVersion', data: BytesLike): Result
    decodeFunctionResult(functionFragment: 'owner', data: BytesLike): Result
    decodeFunctionResult(functionFragment: 'paths', data: BytesLike): Result
    decodeFunctionResult(functionFragment: 'plannerFee', data: BytesLike): Result
    decodeFunctionResult(functionFragment: 'poolBalance', data: BytesLike): Result
    decodeFunctionResult(functionFragment: 'quoteOFT', data: BytesLike): Result
    decodeFunctionResult(functionFragment: 'quoteRedeemSend', data: BytesLike): Result
    decodeFunctionResult(functionFragment: 'quoteSend', data: BytesLike): Result
    decodeFunctionResult(functionFragment: 'receiveCredits', data: BytesLike): Result
    decodeFunctionResult(functionFragment: 'receiveTokenBus', data: BytesLike): Result
    decodeFunctionResult(functionFragment: 'receiveTokenTaxi', data: BytesLike): Result
    decodeFunctionResult(functionFragment: 'recoverToken', data: BytesLike): Result
    decodeFunctionResult(functionFragment: 'redeem', data: BytesLike): Result
    decodeFunctionResult(functionFragment: 'redeemSend', data: BytesLike): Result
    decodeFunctionResult(functionFragment: 'redeemable', data: BytesLike): Result
    decodeFunctionResult(functionFragment: 'renounceOwnership', data: BytesLike): Result
    decodeFunctionResult(functionFragment: 'retryReceiveToken', data: BytesLike): Result
    decodeFunctionResult(functionFragment: 'send', data: BytesLike): Result
    decodeFunctionResult(functionFragment: 'sendCredits', data: BytesLike): Result
    decodeFunctionResult(functionFragment: 'sendToken', data: BytesLike): Result
    decodeFunctionResult(functionFragment: 'setAddressConfig', data: BytesLike): Result
    decodeFunctionResult(functionFragment: 'setDeficitOffset', data: BytesLike): Result
    decodeFunctionResult(functionFragment: 'setOFTPath', data: BytesLike): Result
    decodeFunctionResult(functionFragment: 'setPause', data: BytesLike): Result
    decodeFunctionResult(functionFragment: 'setTransferGasLimit', data: BytesLike): Result
    decodeFunctionResult(functionFragment: 'sharedDecimals', data: BytesLike): Result
    decodeFunctionResult(functionFragment: 'stargateType', data: BytesLike): Result
    decodeFunctionResult(functionFragment: 'status', data: BytesLike): Result
    decodeFunctionResult(functionFragment: 'token', data: BytesLike): Result
    decodeFunctionResult(functionFragment: 'transferOwnership', data: BytesLike): Result
    decodeFunctionResult(functionFragment: 'treasuryFee', data: BytesLike): Result
    decodeFunctionResult(functionFragment: 'tvl', data: BytesLike): Result
    decodeFunctionResult(functionFragment: 'unreceivedTokens', data: BytesLike): Result
    decodeFunctionResult(functionFragment: 'withdrawPlannerFee', data: BytesLike): Result
    decodeFunctionResult(functionFragment: 'withdrawTreasuryFee', data: BytesLike): Result

    events: {
        'AddressConfigSet(tuple)': EventFragment
        'CreditsReceived(uint32,tuple[])': EventFragment
        'CreditsSent(uint32,tuple[])': EventFragment
        'Deposited(address,address,uint256)': EventFragment
        'OFTPathSet(uint32,bool)': EventFragment
        'OFTReceived(bytes32,uint32,address,uint256)': EventFragment
        'OFTSent(bytes32,uint32,address,uint256,uint256)': EventFragment
        'OwnershipTransferred(address,address)': EventFragment
        'PauseSet(bool)': EventFragment
        'PlannerFeeWithdrawn(uint256)': EventFragment
        'Redeemed(address,address,uint256)': EventFragment
        'TreasuryFeeAdded(uint64)': EventFragment
        'TreasuryFeeWithdrawn(address,uint64)': EventFragment
        'UnreceivedTokenCached(bytes32,uint8,uint32,address,uint256,bytes)': EventFragment
    }

    getEvent(nameOrSignatureOrTopic: 'AddressConfigSet'): EventFragment
    getEvent(nameOrSignatureOrTopic: 'CreditsReceived'): EventFragment
    getEvent(nameOrSignatureOrTopic: 'CreditsSent'): EventFragment
    getEvent(nameOrSignatureOrTopic: 'Deposited'): EventFragment
    getEvent(nameOrSignatureOrTopic: 'OFTPathSet'): EventFragment
    getEvent(nameOrSignatureOrTopic: 'OFTReceived'): EventFragment
    getEvent(nameOrSignatureOrTopic: 'OFTSent'): EventFragment
    getEvent(nameOrSignatureOrTopic: 'OwnershipTransferred'): EventFragment
    getEvent(nameOrSignatureOrTopic: 'PauseSet'): EventFragment
    getEvent(nameOrSignatureOrTopic: 'PlannerFeeWithdrawn'): EventFragment
    getEvent(nameOrSignatureOrTopic: 'Redeemed'): EventFragment
    getEvent(nameOrSignatureOrTopic: 'TreasuryFeeAdded'): EventFragment
    getEvent(nameOrSignatureOrTopic: 'TreasuryFeeWithdrawn'): EventFragment
    getEvent(nameOrSignatureOrTopic: 'UnreceivedTokenCached'): EventFragment
}

export interface AddressConfigSetEventObject {
    config: StargateBase.AddressConfigStructOutput
}
export type AddressConfigSetEvent = TypedEvent<[StargateBase.AddressConfigStructOutput], AddressConfigSetEventObject>

export type AddressConfigSetEventFilter = TypedEventFilter<AddressConfigSetEvent>

export interface CreditsReceivedEventObject {
    srcEid: number
    credits: CreditStructOutput[]
}
export type CreditsReceivedEvent = TypedEvent<[number, CreditStructOutput[]], CreditsReceivedEventObject>

export type CreditsReceivedEventFilter = TypedEventFilter<CreditsReceivedEvent>

export interface CreditsSentEventObject {
    dstEid: number
    credits: CreditStructOutput[]
}
export type CreditsSentEvent = TypedEvent<[number, CreditStructOutput[]], CreditsSentEventObject>

export type CreditsSentEventFilter = TypedEventFilter<CreditsSentEvent>

export interface DepositedEventObject {
    payer: string
    receiver: string
    amountLD: BigNumber
}
export type DepositedEvent = TypedEvent<[string, string, BigNumber], DepositedEventObject>

export type DepositedEventFilter = TypedEventFilter<DepositedEvent>

export interface OFTPathSetEventObject {
    dstEid: number
    oft: boolean
}
export type OFTPathSetEvent = TypedEvent<[number, boolean], OFTPathSetEventObject>

export type OFTPathSetEventFilter = TypedEventFilter<OFTPathSetEvent>

export interface OFTReceivedEventObject {
    guid: string
    srcEid: number
    toAddress: string
    amountReceivedLD: BigNumber
}
export type OFTReceivedEvent = TypedEvent<[string, number, string, BigNumber], OFTReceivedEventObject>

export type OFTReceivedEventFilter = TypedEventFilter<OFTReceivedEvent>

export interface OFTSentEventObject {
    guid: string
    dstEid: number
    fromAddress: string
    amountSentLD: BigNumber
    amountReceivedLD: BigNumber
}
export type OFTSentEvent = TypedEvent<[string, number, string, BigNumber, BigNumber], OFTSentEventObject>

export type OFTSentEventFilter = TypedEventFilter<OFTSentEvent>

export interface OwnershipTransferredEventObject {
    previousOwner: string
    newOwner: string
}
export type OwnershipTransferredEvent = TypedEvent<[string, string], OwnershipTransferredEventObject>

export type OwnershipTransferredEventFilter = TypedEventFilter<OwnershipTransferredEvent>

export interface PauseSetEventObject {
    paused: boolean
}
export type PauseSetEvent = TypedEvent<[boolean], PauseSetEventObject>

export type PauseSetEventFilter = TypedEventFilter<PauseSetEvent>

export interface PlannerFeeWithdrawnEventObject {
    amount: BigNumber
}
export type PlannerFeeWithdrawnEvent = TypedEvent<[BigNumber], PlannerFeeWithdrawnEventObject>

export type PlannerFeeWithdrawnEventFilter = TypedEventFilter<PlannerFeeWithdrawnEvent>

export interface RedeemedEventObject {
    payer: string
    receiver: string
    amountLD: BigNumber
}
export type RedeemedEvent = TypedEvent<[string, string, BigNumber], RedeemedEventObject>

export type RedeemedEventFilter = TypedEventFilter<RedeemedEvent>

export interface TreasuryFeeAddedEventObject {
    amountSD: BigNumber
}
export type TreasuryFeeAddedEvent = TypedEvent<[BigNumber], TreasuryFeeAddedEventObject>

export type TreasuryFeeAddedEventFilter = TypedEventFilter<TreasuryFeeAddedEvent>

export interface TreasuryFeeWithdrawnEventObject {
    to: string
    amountSD: BigNumber
}
export type TreasuryFeeWithdrawnEvent = TypedEvent<[string, BigNumber], TreasuryFeeWithdrawnEventObject>

export type TreasuryFeeWithdrawnEventFilter = TypedEventFilter<TreasuryFeeWithdrawnEvent>

export interface UnreceivedTokenCachedEventObject {
    guid: string
    index: number
    srcEid: number
    receiver: string
    amountLD: BigNumber
    composeMsg: string
}
export type UnreceivedTokenCachedEvent = TypedEvent<
    [string, number, number, string, BigNumber, string],
    UnreceivedTokenCachedEventObject
>

export type UnreceivedTokenCachedEventFilter = TypedEventFilter<UnreceivedTokenCachedEvent>

export interface StargatePoolNative extends BaseContract {
    connect(signerOrProvider: Signer | Provider | string): this
    attach(addressOrName: string): this
    deployed(): Promise<this>

    interface: StargatePoolNativeInterface

    queryFilter<TEvent extends TypedEvent>(
        event: TypedEventFilter<TEvent>,
        fromBlockOrBlockhash?: string | number | undefined,
        toBlock?: string | number | undefined
    ): Promise<Array<TEvent>>

    listeners<TEvent extends TypedEvent>(eventFilter?: TypedEventFilter<TEvent>): Array<TypedListener<TEvent>>
    listeners(eventName?: string): Array<Listener>
    removeAllListeners<TEvent extends TypedEvent>(eventFilter: TypedEventFilter<TEvent>): this
    removeAllListeners(eventName?: string): this
    off: OnEvent<this>
    on: OnEvent<this>
    once: OnEvent<this>
    removeListener: OnEvent<this>

    functions: {
        addTreasuryFee(
            _amountLD: PromiseOrValue<BigNumberish>,
            overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
        ): Promise<ContractTransaction>

        approvalRequired(overrides?: CallOverrides): Promise<[boolean]>

        deficitOffset(overrides?: CallOverrides): Promise<[BigNumber]>

        deposit(
            _receiver: PromiseOrValue<string>,
            _amountLD: PromiseOrValue<BigNumberish>,
            overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
        ): Promise<ContractTransaction>

        endpoint(overrides?: CallOverrides): Promise<[string]>

        getAddressConfig(overrides?: CallOverrides): Promise<[StargateBase.AddressConfigStructOutput]>

        getTransferGasLimit(overrides?: CallOverrides): Promise<[BigNumber]>

        localEid(overrides?: CallOverrides): Promise<[number]>

        lpToken(overrides?: CallOverrides): Promise<[string]>

        oftVersion(
            overrides?: CallOverrides
        ): Promise<[string, BigNumber] & { interfaceId: string; version: BigNumber }>

        owner(overrides?: CallOverrides): Promise<[string]>

        paths(
            eid: PromiseOrValue<BigNumberish>,
            overrides?: CallOverrides
        ): Promise<[BigNumber] & { credit: BigNumber }>

        plannerFee(overrides?: CallOverrides): Promise<[BigNumber] & { available: BigNumber }>

        poolBalance(overrides?: CallOverrides): Promise<[BigNumber]>

        quoteOFT(
            _sendParam: SendParamStruct,
            overrides?: CallOverrides
        ): Promise<
            [OFTLimitStructOutput, OFTFeeDetailStructOutput[], OFTReceiptStructOutput] & {
                limit: OFTLimitStructOutput
                oftFeeDetails: OFTFeeDetailStructOutput[]
                receipt: OFTReceiptStructOutput
            }
        >

        quoteRedeemSend(
            _sendParam: SendParamStruct,
            _payInLzToken: PromiseOrValue<boolean>,
            overrides?: CallOverrides
        ): Promise<[MessagingFeeStructOutput] & { fee: MessagingFeeStructOutput }>

        quoteSend(
            _sendParam: SendParamStruct,
            _payInLzToken: PromiseOrValue<boolean>,
            overrides?: CallOverrides
        ): Promise<[MessagingFeeStructOutput] & { fee: MessagingFeeStructOutput }>

        receiveCredits(
            _srcEid: PromiseOrValue<BigNumberish>,
            _credits: CreditStruct[],
            overrides?: Overrides & { from?: PromiseOrValue<string> }
        ): Promise<ContractTransaction>

        receiveTokenBus(
            _origin: OriginStruct,
            _guid: PromiseOrValue<BytesLike>,
            _seatNumber: PromiseOrValue<BigNumberish>,
            _receiver: PromiseOrValue<string>,
            _amountSD: PromiseOrValue<BigNumberish>,
            overrides?: Overrides & { from?: PromiseOrValue<string> }
        ): Promise<ContractTransaction>

        receiveTokenTaxi(
            _origin: OriginStruct,
            _guid: PromiseOrValue<BytesLike>,
            _receiver: PromiseOrValue<string>,
            _amountSD: PromiseOrValue<BigNumberish>,
            _composeMsg: PromiseOrValue<BytesLike>,
            overrides?: Overrides & { from?: PromiseOrValue<string> }
        ): Promise<ContractTransaction>

        recoverToken(
            _token: PromiseOrValue<string>,
            _to: PromiseOrValue<string>,
            _amount: PromiseOrValue<BigNumberish>,
            overrides?: Overrides & { from?: PromiseOrValue<string> }
        ): Promise<ContractTransaction>

        redeem(
            _amountLD: PromiseOrValue<BigNumberish>,
            _receiver: PromiseOrValue<string>,
            overrides?: Overrides & { from?: PromiseOrValue<string> }
        ): Promise<ContractTransaction>

        redeemSend(
            _sendParam: SendParamStruct,
            _fee: MessagingFeeStruct,
            _refundAddress: PromiseOrValue<string>,
            overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
        ): Promise<ContractTransaction>

        redeemable(
            _owner: PromiseOrValue<string>,
            overrides?: CallOverrides
        ): Promise<[BigNumber] & { amountLD: BigNumber }>

        renounceOwnership(overrides?: Overrides & { from?: PromiseOrValue<string> }): Promise<ContractTransaction>

        retryReceiveToken(
            _guid: PromiseOrValue<BytesLike>,
            _index: PromiseOrValue<BigNumberish>,
            _srcEid: PromiseOrValue<BigNumberish>,
            _receiver: PromiseOrValue<string>,
            _amountLD: PromiseOrValue<BigNumberish>,
            _composeMsg: PromiseOrValue<BytesLike>,
            overrides?: Overrides & { from?: PromiseOrValue<string> }
        ): Promise<ContractTransaction>

        send(
            _sendParam: SendParamStruct,
            _fee: MessagingFeeStruct,
            _refundAddress: PromiseOrValue<string>,
            overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
        ): Promise<ContractTransaction>

        sendCredits(
            _dstEid: PromiseOrValue<BigNumberish>,
            _credits: TargetCreditStruct[],
            overrides?: Overrides & { from?: PromiseOrValue<string> }
        ): Promise<ContractTransaction>

        sendToken(
            _sendParam: SendParamStruct,
            _fee: MessagingFeeStruct,
            _refundAddress: PromiseOrValue<string>,
            overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
        ): Promise<ContractTransaction>

        setAddressConfig(
            _config: StargateBase.AddressConfigStruct,
            overrides?: Overrides & { from?: PromiseOrValue<string> }
        ): Promise<ContractTransaction>

        setDeficitOffset(
            _deficitOffsetLD: PromiseOrValue<BigNumberish>,
            overrides?: Overrides & { from?: PromiseOrValue<string> }
        ): Promise<ContractTransaction>

        setOFTPath(
            _dstEid: PromiseOrValue<BigNumberish>,
            _oft: PromiseOrValue<boolean>,
            overrides?: Overrides & { from?: PromiseOrValue<string> }
        ): Promise<ContractTransaction>

        setPause(
            _paused: PromiseOrValue<boolean>,
            overrides?: Overrides & { from?: PromiseOrValue<string> }
        ): Promise<ContractTransaction>

        setTransferGasLimit(
            _gasLimit: PromiseOrValue<BigNumberish>,
            overrides?: Overrides & { from?: PromiseOrValue<string> }
        ): Promise<ContractTransaction>

        sharedDecimals(overrides?: CallOverrides): Promise<[number]>

        stargateType(overrides?: CallOverrides): Promise<[number]>

        status(overrides?: CallOverrides): Promise<[number]>

        token(overrides?: CallOverrides): Promise<[string]>

        transferOwnership(
            newOwner: PromiseOrValue<string>,
            overrides?: Overrides & { from?: PromiseOrValue<string> }
        ): Promise<ContractTransaction>

        treasuryFee(overrides?: CallOverrides): Promise<[BigNumber]>

        tvl(overrides?: CallOverrides): Promise<[BigNumber]>

        unreceivedTokens(
            guid: PromiseOrValue<BytesLike>,
            index: PromiseOrValue<BigNumberish>,
            overrides?: CallOverrides
        ): Promise<[string] & { hash: string }>

        withdrawPlannerFee(overrides?: Overrides & { from?: PromiseOrValue<string> }): Promise<ContractTransaction>

        withdrawTreasuryFee(
            _to: PromiseOrValue<string>,
            _amountSD: PromiseOrValue<BigNumberish>,
            overrides?: Overrides & { from?: PromiseOrValue<string> }
        ): Promise<ContractTransaction>
    }

    addTreasuryFee(
        _amountLD: PromiseOrValue<BigNumberish>,
        overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>

    approvalRequired(overrides?: CallOverrides): Promise<boolean>

    deficitOffset(overrides?: CallOverrides): Promise<BigNumber>

    deposit(
        _receiver: PromiseOrValue<string>,
        _amountLD: PromiseOrValue<BigNumberish>,
        overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>

    endpoint(overrides?: CallOverrides): Promise<string>

    getAddressConfig(overrides?: CallOverrides): Promise<StargateBase.AddressConfigStructOutput>

    getTransferGasLimit(overrides?: CallOverrides): Promise<BigNumber>

    localEid(overrides?: CallOverrides): Promise<number>

    lpToken(overrides?: CallOverrides): Promise<string>

    oftVersion(overrides?: CallOverrides): Promise<[string, BigNumber] & { interfaceId: string; version: BigNumber }>

    owner(overrides?: CallOverrides): Promise<string>

    paths(eid: PromiseOrValue<BigNumberish>, overrides?: CallOverrides): Promise<BigNumber>

    plannerFee(overrides?: CallOverrides): Promise<BigNumber>

    poolBalance(overrides?: CallOverrides): Promise<BigNumber>

    quoteOFT(
        _sendParam: SendParamStruct,
        overrides?: CallOverrides
    ): Promise<
        [OFTLimitStructOutput, OFTFeeDetailStructOutput[], OFTReceiptStructOutput] & {
            limit: OFTLimitStructOutput
            oftFeeDetails: OFTFeeDetailStructOutput[]
            receipt: OFTReceiptStructOutput
        }
    >

    quoteRedeemSend(
        _sendParam: SendParamStruct,
        _payInLzToken: PromiseOrValue<boolean>,
        overrides?: CallOverrides
    ): Promise<MessagingFeeStructOutput>

    quoteSend(
        _sendParam: SendParamStruct,
        _payInLzToken: PromiseOrValue<boolean>,
        overrides?: CallOverrides
    ): Promise<MessagingFeeStructOutput>

    receiveCredits(
        _srcEid: PromiseOrValue<BigNumberish>,
        _credits: CreditStruct[],
        overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>

    receiveTokenBus(
        _origin: OriginStruct,
        _guid: PromiseOrValue<BytesLike>,
        _seatNumber: PromiseOrValue<BigNumberish>,
        _receiver: PromiseOrValue<string>,
        _amountSD: PromiseOrValue<BigNumberish>,
        overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>

    receiveTokenTaxi(
        _origin: OriginStruct,
        _guid: PromiseOrValue<BytesLike>,
        _receiver: PromiseOrValue<string>,
        _amountSD: PromiseOrValue<BigNumberish>,
        _composeMsg: PromiseOrValue<BytesLike>,
        overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>

    recoverToken(
        _token: PromiseOrValue<string>,
        _to: PromiseOrValue<string>,
        _amount: PromiseOrValue<BigNumberish>,
        overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>

    redeem(
        _amountLD: PromiseOrValue<BigNumberish>,
        _receiver: PromiseOrValue<string>,
        overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>

    redeemSend(
        _sendParam: SendParamStruct,
        _fee: MessagingFeeStruct,
        _refundAddress: PromiseOrValue<string>,
        overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>

    redeemable(_owner: PromiseOrValue<string>, overrides?: CallOverrides): Promise<BigNumber>

    renounceOwnership(overrides?: Overrides & { from?: PromiseOrValue<string> }): Promise<ContractTransaction>

    retryReceiveToken(
        _guid: PromiseOrValue<BytesLike>,
        _index: PromiseOrValue<BigNumberish>,
        _srcEid: PromiseOrValue<BigNumberish>,
        _receiver: PromiseOrValue<string>,
        _amountLD: PromiseOrValue<BigNumberish>,
        _composeMsg: PromiseOrValue<BytesLike>,
        overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>

    send(
        _sendParam: SendParamStruct,
        _fee: MessagingFeeStruct,
        _refundAddress: PromiseOrValue<string>,
        overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>

    sendCredits(
        _dstEid: PromiseOrValue<BigNumberish>,
        _credits: TargetCreditStruct[],
        overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>

    sendToken(
        _sendParam: SendParamStruct,
        _fee: MessagingFeeStruct,
        _refundAddress: PromiseOrValue<string>,
        overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>

    setAddressConfig(
        _config: StargateBase.AddressConfigStruct,
        overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>

    setDeficitOffset(
        _deficitOffsetLD: PromiseOrValue<BigNumberish>,
        overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>

    setOFTPath(
        _dstEid: PromiseOrValue<BigNumberish>,
        _oft: PromiseOrValue<boolean>,
        overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>

    setPause(
        _paused: PromiseOrValue<boolean>,
        overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>

    setTransferGasLimit(
        _gasLimit: PromiseOrValue<BigNumberish>,
        overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>

    sharedDecimals(overrides?: CallOverrides): Promise<number>

    stargateType(overrides?: CallOverrides): Promise<number>

    status(overrides?: CallOverrides): Promise<number>

    token(overrides?: CallOverrides): Promise<string>

    transferOwnership(
        newOwner: PromiseOrValue<string>,
        overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>

    treasuryFee(overrides?: CallOverrides): Promise<BigNumber>

    tvl(overrides?: CallOverrides): Promise<BigNumber>

    unreceivedTokens(
        guid: PromiseOrValue<BytesLike>,
        index: PromiseOrValue<BigNumberish>,
        overrides?: CallOverrides
    ): Promise<string>

    withdrawPlannerFee(overrides?: Overrides & { from?: PromiseOrValue<string> }): Promise<ContractTransaction>

    withdrawTreasuryFee(
        _to: PromiseOrValue<string>,
        _amountSD: PromiseOrValue<BigNumberish>,
        overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>

    callStatic: {
        addTreasuryFee(_amountLD: PromiseOrValue<BigNumberish>, overrides?: CallOverrides): Promise<void>

        approvalRequired(overrides?: CallOverrides): Promise<boolean>

        deficitOffset(overrides?: CallOverrides): Promise<BigNumber>

        deposit(
            _receiver: PromiseOrValue<string>,
            _amountLD: PromiseOrValue<BigNumberish>,
            overrides?: CallOverrides
        ): Promise<BigNumber>

        endpoint(overrides?: CallOverrides): Promise<string>

        getAddressConfig(overrides?: CallOverrides): Promise<StargateBase.AddressConfigStructOutput>

        getTransferGasLimit(overrides?: CallOverrides): Promise<BigNumber>

        localEid(overrides?: CallOverrides): Promise<number>

        lpToken(overrides?: CallOverrides): Promise<string>

        oftVersion(
            overrides?: CallOverrides
        ): Promise<[string, BigNumber] & { interfaceId: string; version: BigNumber }>

        owner(overrides?: CallOverrides): Promise<string>

        paths(eid: PromiseOrValue<BigNumberish>, overrides?: CallOverrides): Promise<BigNumber>

        plannerFee(overrides?: CallOverrides): Promise<BigNumber>

        poolBalance(overrides?: CallOverrides): Promise<BigNumber>

        quoteOFT(
            _sendParam: SendParamStruct,
            overrides?: CallOverrides
        ): Promise<
            [OFTLimitStructOutput, OFTFeeDetailStructOutput[], OFTReceiptStructOutput] & {
                limit: OFTLimitStructOutput
                oftFeeDetails: OFTFeeDetailStructOutput[]
                receipt: OFTReceiptStructOutput
            }
        >

        quoteRedeemSend(
            _sendParam: SendParamStruct,
            _payInLzToken: PromiseOrValue<boolean>,
            overrides?: CallOverrides
        ): Promise<MessagingFeeStructOutput>

        quoteSend(
            _sendParam: SendParamStruct,
            _payInLzToken: PromiseOrValue<boolean>,
            overrides?: CallOverrides
        ): Promise<MessagingFeeStructOutput>

        receiveCredits(
            _srcEid: PromiseOrValue<BigNumberish>,
            _credits: CreditStruct[],
            overrides?: CallOverrides
        ): Promise<void>

        receiveTokenBus(
            _origin: OriginStruct,
            _guid: PromiseOrValue<BytesLike>,
            _seatNumber: PromiseOrValue<BigNumberish>,
            _receiver: PromiseOrValue<string>,
            _amountSD: PromiseOrValue<BigNumberish>,
            overrides?: CallOverrides
        ): Promise<void>

        receiveTokenTaxi(
            _origin: OriginStruct,
            _guid: PromiseOrValue<BytesLike>,
            _receiver: PromiseOrValue<string>,
            _amountSD: PromiseOrValue<BigNumberish>,
            _composeMsg: PromiseOrValue<BytesLike>,
            overrides?: CallOverrides
        ): Promise<void>

        recoverToken(
            _token: PromiseOrValue<string>,
            _to: PromiseOrValue<string>,
            _amount: PromiseOrValue<BigNumberish>,
            overrides?: CallOverrides
        ): Promise<BigNumber>

        redeem(
            _amountLD: PromiseOrValue<BigNumberish>,
            _receiver: PromiseOrValue<string>,
            overrides?: CallOverrides
        ): Promise<BigNumber>

        redeemSend(
            _sendParam: SendParamStruct,
            _fee: MessagingFeeStruct,
            _refundAddress: PromiseOrValue<string>,
            overrides?: CallOverrides
        ): Promise<
            [MessagingReceiptStructOutput, OFTReceiptStructOutput] & {
                msgReceipt: MessagingReceiptStructOutput
                oftReceipt: OFTReceiptStructOutput
            }
        >

        redeemable(_owner: PromiseOrValue<string>, overrides?: CallOverrides): Promise<BigNumber>

        renounceOwnership(overrides?: CallOverrides): Promise<void>

        retryReceiveToken(
            _guid: PromiseOrValue<BytesLike>,
            _index: PromiseOrValue<BigNumberish>,
            _srcEid: PromiseOrValue<BigNumberish>,
            _receiver: PromiseOrValue<string>,
            _amountLD: PromiseOrValue<BigNumberish>,
            _composeMsg: PromiseOrValue<BytesLike>,
            overrides?: CallOverrides
        ): Promise<void>

        send(
            _sendParam: SendParamStruct,
            _fee: MessagingFeeStruct,
            _refundAddress: PromiseOrValue<string>,
            overrides?: CallOverrides
        ): Promise<
            [MessagingReceiptStructOutput, OFTReceiptStructOutput] & {
                msgReceipt: MessagingReceiptStructOutput
                oftReceipt: OFTReceiptStructOutput
            }
        >

        sendCredits(
            _dstEid: PromiseOrValue<BigNumberish>,
            _credits: TargetCreditStruct[],
            overrides?: CallOverrides
        ): Promise<CreditStructOutput[]>

        sendToken(
            _sendParam: SendParamStruct,
            _fee: MessagingFeeStruct,
            _refundAddress: PromiseOrValue<string>,
            overrides?: CallOverrides
        ): Promise<
            [MessagingReceiptStructOutput, OFTReceiptStructOutput, TicketStructOutput] & {
                msgReceipt: MessagingReceiptStructOutput
                oftReceipt: OFTReceiptStructOutput
                ticket: TicketStructOutput
            }
        >

        setAddressConfig(_config: StargateBase.AddressConfigStruct, overrides?: CallOverrides): Promise<void>

        setDeficitOffset(_deficitOffsetLD: PromiseOrValue<BigNumberish>, overrides?: CallOverrides): Promise<void>

        setOFTPath(
            _dstEid: PromiseOrValue<BigNumberish>,
            _oft: PromiseOrValue<boolean>,
            overrides?: CallOverrides
        ): Promise<void>

        setPause(_paused: PromiseOrValue<boolean>, overrides?: CallOverrides): Promise<void>

        setTransferGasLimit(_gasLimit: PromiseOrValue<BigNumberish>, overrides?: CallOverrides): Promise<void>

        sharedDecimals(overrides?: CallOverrides): Promise<number>

        stargateType(overrides?: CallOverrides): Promise<number>

        status(overrides?: CallOverrides): Promise<number>

        token(overrides?: CallOverrides): Promise<string>

        transferOwnership(newOwner: PromiseOrValue<string>, overrides?: CallOverrides): Promise<void>

        treasuryFee(overrides?: CallOverrides): Promise<BigNumber>

        tvl(overrides?: CallOverrides): Promise<BigNumber>

        unreceivedTokens(
            guid: PromiseOrValue<BytesLike>,
            index: PromiseOrValue<BigNumberish>,
            overrides?: CallOverrides
        ): Promise<string>

        withdrawPlannerFee(overrides?: CallOverrides): Promise<void>

        withdrawTreasuryFee(
            _to: PromiseOrValue<string>,
            _amountSD: PromiseOrValue<BigNumberish>,
            overrides?: CallOverrides
        ): Promise<void>
    }

    filters: {
        'AddressConfigSet(tuple)'(config?: null): AddressConfigSetEventFilter
        AddressConfigSet(config?: null): AddressConfigSetEventFilter

        'CreditsReceived(uint32,tuple[])'(srcEid?: null, credits?: null): CreditsReceivedEventFilter
        CreditsReceived(srcEid?: null, credits?: null): CreditsReceivedEventFilter

        'CreditsSent(uint32,tuple[])'(dstEid?: null, credits?: null): CreditsSentEventFilter
        CreditsSent(dstEid?: null, credits?: null): CreditsSentEventFilter

        'Deposited(address,address,uint256)'(
            payer?: PromiseOrValue<string> | null,
            receiver?: PromiseOrValue<string> | null,
            amountLD?: null
        ): DepositedEventFilter
        Deposited(
            payer?: PromiseOrValue<string> | null,
            receiver?: PromiseOrValue<string> | null,
            amountLD?: null
        ): DepositedEventFilter

        'OFTPathSet(uint32,bool)'(dstEid?: null, oft?: null): OFTPathSetEventFilter
        OFTPathSet(dstEid?: null, oft?: null): OFTPathSetEventFilter

        'OFTReceived(bytes32,uint32,address,uint256)'(
            guid?: PromiseOrValue<BytesLike> | null,
            srcEid?: null,
            toAddress?: PromiseOrValue<string> | null,
            amountReceivedLD?: null
        ): OFTReceivedEventFilter
        OFTReceived(
            guid?: PromiseOrValue<BytesLike> | null,
            srcEid?: null,
            toAddress?: PromiseOrValue<string> | null,
            amountReceivedLD?: null
        ): OFTReceivedEventFilter

        'OFTSent(bytes32,uint32,address,uint256,uint256)'(
            guid?: PromiseOrValue<BytesLike> | null,
            dstEid?: null,
            fromAddress?: PromiseOrValue<string> | null,
            amountSentLD?: null,
            amountReceivedLD?: null
        ): OFTSentEventFilter
        OFTSent(
            guid?: PromiseOrValue<BytesLike> | null,
            dstEid?: null,
            fromAddress?: PromiseOrValue<string> | null,
            amountSentLD?: null,
            amountReceivedLD?: null
        ): OFTSentEventFilter

        'OwnershipTransferred(address,address)'(
            previousOwner?: PromiseOrValue<string> | null,
            newOwner?: PromiseOrValue<string> | null
        ): OwnershipTransferredEventFilter
        OwnershipTransferred(
            previousOwner?: PromiseOrValue<string> | null,
            newOwner?: PromiseOrValue<string> | null
        ): OwnershipTransferredEventFilter

        'PauseSet(bool)'(paused?: null): PauseSetEventFilter
        PauseSet(paused?: null): PauseSetEventFilter

        'PlannerFeeWithdrawn(uint256)'(amount?: null): PlannerFeeWithdrawnEventFilter
        PlannerFeeWithdrawn(amount?: null): PlannerFeeWithdrawnEventFilter

        'Redeemed(address,address,uint256)'(
            payer?: PromiseOrValue<string> | null,
            receiver?: PromiseOrValue<string> | null,
            amountLD?: null
        ): RedeemedEventFilter
        Redeemed(
            payer?: PromiseOrValue<string> | null,
            receiver?: PromiseOrValue<string> | null,
            amountLD?: null
        ): RedeemedEventFilter

        'TreasuryFeeAdded(uint64)'(amountSD?: null): TreasuryFeeAddedEventFilter
        TreasuryFeeAdded(amountSD?: null): TreasuryFeeAddedEventFilter

        'TreasuryFeeWithdrawn(address,uint64)'(to?: null, amountSD?: null): TreasuryFeeWithdrawnEventFilter
        TreasuryFeeWithdrawn(to?: null, amountSD?: null): TreasuryFeeWithdrawnEventFilter

        'UnreceivedTokenCached(bytes32,uint8,uint32,address,uint256,bytes)'(
            guid?: null,
            index?: null,
            srcEid?: null,
            receiver?: null,
            amountLD?: null,
            composeMsg?: null
        ): UnreceivedTokenCachedEventFilter
        UnreceivedTokenCached(
            guid?: null,
            index?: null,
            srcEid?: null,
            receiver?: null,
            amountLD?: null,
            composeMsg?: null
        ): UnreceivedTokenCachedEventFilter
    }

    estimateGas: {
        addTreasuryFee(
            _amountLD: PromiseOrValue<BigNumberish>,
            overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
        ): Promise<BigNumber>

        approvalRequired(overrides?: CallOverrides): Promise<BigNumber>

        deficitOffset(overrides?: CallOverrides): Promise<BigNumber>

        deposit(
            _receiver: PromiseOrValue<string>,
            _amountLD: PromiseOrValue<BigNumberish>,
            overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
        ): Promise<BigNumber>

        endpoint(overrides?: CallOverrides): Promise<BigNumber>

        getAddressConfig(overrides?: CallOverrides): Promise<BigNumber>

        getTransferGasLimit(overrides?: CallOverrides): Promise<BigNumber>

        localEid(overrides?: CallOverrides): Promise<BigNumber>

        lpToken(overrides?: CallOverrides): Promise<BigNumber>

        oftVersion(overrides?: CallOverrides): Promise<BigNumber>

        owner(overrides?: CallOverrides): Promise<BigNumber>

        paths(eid: PromiseOrValue<BigNumberish>, overrides?: CallOverrides): Promise<BigNumber>

        plannerFee(overrides?: CallOverrides): Promise<BigNumber>

        poolBalance(overrides?: CallOverrides): Promise<BigNumber>

        quoteOFT(_sendParam: SendParamStruct, overrides?: CallOverrides): Promise<BigNumber>

        quoteRedeemSend(
            _sendParam: SendParamStruct,
            _payInLzToken: PromiseOrValue<boolean>,
            overrides?: CallOverrides
        ): Promise<BigNumber>

        quoteSend(
            _sendParam: SendParamStruct,
            _payInLzToken: PromiseOrValue<boolean>,
            overrides?: CallOverrides
        ): Promise<BigNumber>

        receiveCredits(
            _srcEid: PromiseOrValue<BigNumberish>,
            _credits: CreditStruct[],
            overrides?: Overrides & { from?: PromiseOrValue<string> }
        ): Promise<BigNumber>

        receiveTokenBus(
            _origin: OriginStruct,
            _guid: PromiseOrValue<BytesLike>,
            _seatNumber: PromiseOrValue<BigNumberish>,
            _receiver: PromiseOrValue<string>,
            _amountSD: PromiseOrValue<BigNumberish>,
            overrides?: Overrides & { from?: PromiseOrValue<string> }
        ): Promise<BigNumber>

        receiveTokenTaxi(
            _origin: OriginStruct,
            _guid: PromiseOrValue<BytesLike>,
            _receiver: PromiseOrValue<string>,
            _amountSD: PromiseOrValue<BigNumberish>,
            _composeMsg: PromiseOrValue<BytesLike>,
            overrides?: Overrides & { from?: PromiseOrValue<string> }
        ): Promise<BigNumber>

        recoverToken(
            _token: PromiseOrValue<string>,
            _to: PromiseOrValue<string>,
            _amount: PromiseOrValue<BigNumberish>,
            overrides?: Overrides & { from?: PromiseOrValue<string> }
        ): Promise<BigNumber>

        redeem(
            _amountLD: PromiseOrValue<BigNumberish>,
            _receiver: PromiseOrValue<string>,
            overrides?: Overrides & { from?: PromiseOrValue<string> }
        ): Promise<BigNumber>

        redeemSend(
            _sendParam: SendParamStruct,
            _fee: MessagingFeeStruct,
            _refundAddress: PromiseOrValue<string>,
            overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
        ): Promise<BigNumber>

        redeemable(_owner: PromiseOrValue<string>, overrides?: CallOverrides): Promise<BigNumber>

        renounceOwnership(overrides?: Overrides & { from?: PromiseOrValue<string> }): Promise<BigNumber>

        retryReceiveToken(
            _guid: PromiseOrValue<BytesLike>,
            _index: PromiseOrValue<BigNumberish>,
            _srcEid: PromiseOrValue<BigNumberish>,
            _receiver: PromiseOrValue<string>,
            _amountLD: PromiseOrValue<BigNumberish>,
            _composeMsg: PromiseOrValue<BytesLike>,
            overrides?: Overrides & { from?: PromiseOrValue<string> }
        ): Promise<BigNumber>

        send(
            _sendParam: SendParamStruct,
            _fee: MessagingFeeStruct,
            _refundAddress: PromiseOrValue<string>,
            overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
        ): Promise<BigNumber>

        sendCredits(
            _dstEid: PromiseOrValue<BigNumberish>,
            _credits: TargetCreditStruct[],
            overrides?: Overrides & { from?: PromiseOrValue<string> }
        ): Promise<BigNumber>

        sendToken(
            _sendParam: SendParamStruct,
            _fee: MessagingFeeStruct,
            _refundAddress: PromiseOrValue<string>,
            overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
        ): Promise<BigNumber>

        setAddressConfig(
            _config: StargateBase.AddressConfigStruct,
            overrides?: Overrides & { from?: PromiseOrValue<string> }
        ): Promise<BigNumber>

        setDeficitOffset(
            _deficitOffsetLD: PromiseOrValue<BigNumberish>,
            overrides?: Overrides & { from?: PromiseOrValue<string> }
        ): Promise<BigNumber>

        setOFTPath(
            _dstEid: PromiseOrValue<BigNumberish>,
            _oft: PromiseOrValue<boolean>,
            overrides?: Overrides & { from?: PromiseOrValue<string> }
        ): Promise<BigNumber>

        setPause(
            _paused: PromiseOrValue<boolean>,
            overrides?: Overrides & { from?: PromiseOrValue<string> }
        ): Promise<BigNumber>

        setTransferGasLimit(
            _gasLimit: PromiseOrValue<BigNumberish>,
            overrides?: Overrides & { from?: PromiseOrValue<string> }
        ): Promise<BigNumber>

        sharedDecimals(overrides?: CallOverrides): Promise<BigNumber>

        stargateType(overrides?: CallOverrides): Promise<BigNumber>

        status(overrides?: CallOverrides): Promise<BigNumber>

        token(overrides?: CallOverrides): Promise<BigNumber>

        transferOwnership(
            newOwner: PromiseOrValue<string>,
            overrides?: Overrides & { from?: PromiseOrValue<string> }
        ): Promise<BigNumber>

        treasuryFee(overrides?: CallOverrides): Promise<BigNumber>

        tvl(overrides?: CallOverrides): Promise<BigNumber>

        unreceivedTokens(
            guid: PromiseOrValue<BytesLike>,
            index: PromiseOrValue<BigNumberish>,
            overrides?: CallOverrides
        ): Promise<BigNumber>

        withdrawPlannerFee(overrides?: Overrides & { from?: PromiseOrValue<string> }): Promise<BigNumber>

        withdrawTreasuryFee(
            _to: PromiseOrValue<string>,
            _amountSD: PromiseOrValue<BigNumberish>,
            overrides?: Overrides & { from?: PromiseOrValue<string> }
        ): Promise<BigNumber>
    }

    populateTransaction: {
        addTreasuryFee(
            _amountLD: PromiseOrValue<BigNumberish>,
            overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
        ): Promise<PopulatedTransaction>

        approvalRequired(overrides?: CallOverrides): Promise<PopulatedTransaction>

        deficitOffset(overrides?: CallOverrides): Promise<PopulatedTransaction>

        deposit(
            _receiver: PromiseOrValue<string>,
            _amountLD: PromiseOrValue<BigNumberish>,
            overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
        ): Promise<PopulatedTransaction>

        endpoint(overrides?: CallOverrides): Promise<PopulatedTransaction>

        getAddressConfig(overrides?: CallOverrides): Promise<PopulatedTransaction>

        getTransferGasLimit(overrides?: CallOverrides): Promise<PopulatedTransaction>

        localEid(overrides?: CallOverrides): Promise<PopulatedTransaction>

        lpToken(overrides?: CallOverrides): Promise<PopulatedTransaction>

        oftVersion(overrides?: CallOverrides): Promise<PopulatedTransaction>

        owner(overrides?: CallOverrides): Promise<PopulatedTransaction>

        paths(eid: PromiseOrValue<BigNumberish>, overrides?: CallOverrides): Promise<PopulatedTransaction>

        plannerFee(overrides?: CallOverrides): Promise<PopulatedTransaction>

        poolBalance(overrides?: CallOverrides): Promise<PopulatedTransaction>

        quoteOFT(_sendParam: SendParamStruct, overrides?: CallOverrides): Promise<PopulatedTransaction>

        quoteRedeemSend(
            _sendParam: SendParamStruct,
            _payInLzToken: PromiseOrValue<boolean>,
            overrides?: CallOverrides
        ): Promise<PopulatedTransaction>

        quoteSend(
            _sendParam: SendParamStruct,
            _payInLzToken: PromiseOrValue<boolean>,
            overrides?: CallOverrides
        ): Promise<PopulatedTransaction>

        receiveCredits(
            _srcEid: PromiseOrValue<BigNumberish>,
            _credits: CreditStruct[],
            overrides?: Overrides & { from?: PromiseOrValue<string> }
        ): Promise<PopulatedTransaction>

        receiveTokenBus(
            _origin: OriginStruct,
            _guid: PromiseOrValue<BytesLike>,
            _seatNumber: PromiseOrValue<BigNumberish>,
            _receiver: PromiseOrValue<string>,
            _amountSD: PromiseOrValue<BigNumberish>,
            overrides?: Overrides & { from?: PromiseOrValue<string> }
        ): Promise<PopulatedTransaction>

        receiveTokenTaxi(
            _origin: OriginStruct,
            _guid: PromiseOrValue<BytesLike>,
            _receiver: PromiseOrValue<string>,
            _amountSD: PromiseOrValue<BigNumberish>,
            _composeMsg: PromiseOrValue<BytesLike>,
            overrides?: Overrides & { from?: PromiseOrValue<string> }
        ): Promise<PopulatedTransaction>

        recoverToken(
            _token: PromiseOrValue<string>,
            _to: PromiseOrValue<string>,
            _amount: PromiseOrValue<BigNumberish>,
            overrides?: Overrides & { from?: PromiseOrValue<string> }
        ): Promise<PopulatedTransaction>

        redeem(
            _amountLD: PromiseOrValue<BigNumberish>,
            _receiver: PromiseOrValue<string>,
            overrides?: Overrides & { from?: PromiseOrValue<string> }
        ): Promise<PopulatedTransaction>

        redeemSend(
            _sendParam: SendParamStruct,
            _fee: MessagingFeeStruct,
            _refundAddress: PromiseOrValue<string>,
            overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
        ): Promise<PopulatedTransaction>

        redeemable(_owner: PromiseOrValue<string>, overrides?: CallOverrides): Promise<PopulatedTransaction>

        renounceOwnership(overrides?: Overrides & { from?: PromiseOrValue<string> }): Promise<PopulatedTransaction>

        retryReceiveToken(
            _guid: PromiseOrValue<BytesLike>,
            _index: PromiseOrValue<BigNumberish>,
            _srcEid: PromiseOrValue<BigNumberish>,
            _receiver: PromiseOrValue<string>,
            _amountLD: PromiseOrValue<BigNumberish>,
            _composeMsg: PromiseOrValue<BytesLike>,
            overrides?: Overrides & { from?: PromiseOrValue<string> }
        ): Promise<PopulatedTransaction>

        send(
            _sendParam: SendParamStruct,
            _fee: MessagingFeeStruct,
            _refundAddress: PromiseOrValue<string>,
            overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
        ): Promise<PopulatedTransaction>

        sendCredits(
            _dstEid: PromiseOrValue<BigNumberish>,
            _credits: TargetCreditStruct[],
            overrides?: Overrides & { from?: PromiseOrValue<string> }
        ): Promise<PopulatedTransaction>

        sendToken(
            _sendParam: SendParamStruct,
            _fee: MessagingFeeStruct,
            _refundAddress: PromiseOrValue<string>,
            overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
        ): Promise<PopulatedTransaction>

        setAddressConfig(
            _config: StargateBase.AddressConfigStruct,
            overrides?: Overrides & { from?: PromiseOrValue<string> }
        ): Promise<PopulatedTransaction>

        setDeficitOffset(
            _deficitOffsetLD: PromiseOrValue<BigNumberish>,
            overrides?: Overrides & { from?: PromiseOrValue<string> }
        ): Promise<PopulatedTransaction>

        setOFTPath(
            _dstEid: PromiseOrValue<BigNumberish>,
            _oft: PromiseOrValue<boolean>,
            overrides?: Overrides & { from?: PromiseOrValue<string> }
        ): Promise<PopulatedTransaction>

        setPause(
            _paused: PromiseOrValue<boolean>,
            overrides?: Overrides & { from?: PromiseOrValue<string> }
        ): Promise<PopulatedTransaction>

        setTransferGasLimit(
            _gasLimit: PromiseOrValue<BigNumberish>,
            overrides?: Overrides & { from?: PromiseOrValue<string> }
        ): Promise<PopulatedTransaction>

        sharedDecimals(overrides?: CallOverrides): Promise<PopulatedTransaction>

        stargateType(overrides?: CallOverrides): Promise<PopulatedTransaction>

        status(overrides?: CallOverrides): Promise<PopulatedTransaction>

        token(overrides?: CallOverrides): Promise<PopulatedTransaction>

        transferOwnership(
            newOwner: PromiseOrValue<string>,
            overrides?: Overrides & { from?: PromiseOrValue<string> }
        ): Promise<PopulatedTransaction>

        treasuryFee(overrides?: CallOverrides): Promise<PopulatedTransaction>

        tvl(overrides?: CallOverrides): Promise<PopulatedTransaction>

        unreceivedTokens(
            guid: PromiseOrValue<BytesLike>,
            index: PromiseOrValue<BigNumberish>,
            overrides?: CallOverrides
        ): Promise<PopulatedTransaction>

        withdrawPlannerFee(overrides?: Overrides & { from?: PromiseOrValue<string> }): Promise<PopulatedTransaction>

        withdrawTreasuryFee(
            _to: PromiseOrValue<string>,
            _amountSD: PromiseOrValue<BigNumberish>,
            overrides?: Overrides & { from?: PromiseOrValue<string> }
        ): Promise<PopulatedTransaction>
    }
}
